[
    {
        "titleSlug": "macs-in-btc",
        "title": "Macs in BTC",
        "date": "2007-10-19",
        "markup": "<p>Thanks to <a href=\"http://www.facebook.com/profile.php?id=663022342\">Anna Carlson</a>&nbsp; for this picture.&nbsp;&nbsp; Taken in BTC at the last London Barcamp.&nbsp; Spot the non-mac.  </p>\n<p><img src=\"http://www.pizdaus.com/pics/MC3KUw7uCDtL.jpg\" alt=\"\" /></p>",
        "tags": [
            "btc bt osmosoft", "bacon"
        ]
    },
    {
        "titleSlug": "your-location-from-the-bt-sdk-(web21c)-in-google-maps",
        "title": "Your Location from the BT SDK (Web21c) in Google Maps",
        "date": "2007-07-20",
        "markup": "<p>The steps to setting up a very&nbsp; basic example of the BT Web21c location service are below.&nbsp; Over the coming weeks I will evolve these example and hope to release a new version of the PHP examples provided on the official <a href=\"http://sdk.bt.com\" title=\"Web21c Site\">Web21c site</a>.</p>\n<p>&nbsp;This app results in in&nbsp;a link which when clicked displays the mobiles current location in google maps.</p>\n<p>If you need to get the SDK set up you may find some help in <a href=\"http://simonmcmanus.wordpress.com/2007/07/16/php-sdk-for-dummies-using-windows-2/\" title=\"this post\">this post.</a>&nbsp; When the examples have&nbsp; evolved I will publish a&nbsp;new step by step example of how to get set up in the first place.</p>\n<p>1 ..&nbsp; Before you can view a phones location you must first register the user who you wish to track. This is done using the addUser.php page in the examples directory. I have added the code below:  </p>\n<p>_______________  </p>\n<p>addUser.php&nbsp;  </p>\n<p>_______________  </p>\n<?php  \nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../../web21c.php');  \nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../common.php');  \n&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; command to add a user&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;&nbsp; $web21c = new Web21c($applicationName, $environment);  \n&nbsp;&nbsp;&nbsp; $wla = $web21c->WhitelabelAuthentication();  \n&nbsp;&nbsp;&nbsp; $wla->addUser([your-email@mail.com](mailto:your-email@mail.com));  \n&nbsp;&nbsp;&nbsp; //&nbsp; dump response  \n&nbsp;&nbsp;&nbsp; var\\_dump($wla->getAllUsers());  \n?>&nbsp;  \n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_  \nPlease note that you will need to change \"[your-email@mail.com](mailto:your-email@mail.com)\" to the email address of the user that you wish to be added.  \n&nbsp;The bottom line will display any errors that are returned.  \n&nbsp;2 ..&nbsp; When the user has been added they will recieve a password via email.  \n3 ..&nbsp; With the password you will now be able change three variables in&nbsp;locate.php&nbsp; and then run the file.  \nThe&nbsp;three&nbsp;variables you need to&nbsp;change are :  \n$deviceId = 'tel:+440000000000';  \n$username = [youremail@mail](mailto:youremail@mail.com)[.](mailto:simon.mcmanus@.com)com;  \n$password = \"YOURPASS\";  \n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_  \nlocate.php  \n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_&nbsp;  \n<?php  \nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../../web21c.php');  \nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../common.php');  \n//&nbsp; command to locate a mobile deviice  \n//&nbsp; - set these to sensible values  \n$deviceId = 'tel:+44700000000000';  \n$username = \"[YOURMAIL@MAIL.com](mailto:simon.mcmanus@bt.com)\";  \n$password = \"YOURPASSWORD\";  \n$web21c = new Web21c($applicationName, $environment);  \n// login as a user  \n$wla = $web21c->WhiteLabelAuthentication();  \n$wla->login($username, $password);  \n&nbsp;//&nbsp; locate mobile  \n$location = $web21c->Location();  \n$location->web21cUser = $wla->web21cUser;  \ntry  \n{  \n&nbsp;$r = $location->getGeoLocation($deviceId);  \n}  \ncatch (Web21cPermissionDeniedException $e)  \n{  \n&nbsp;print \"requesting device owner's permission to be located ..\\\\n\";  \n&nbsp;print \"try again later when the owner may have responded\\\\n\";  \n&nbsp;$access = $web21c->LocationPermission();  \n&nbsp;$access->web21cUser = $wla->web21cUser;  \n&nbsp;$access->requestPermission($deviceId);  \n}  \n// var\\_dump($r->geoLocation);  \necho 'Longitude : '.$r->geoLocation->longitude. '<br />';  \necho 'Latitude : '.$r->geoLocation->latitude. '<br />';  \necho \"Click below to see the location of mobile number \".$deviceId.\"<br />\";  \necho \"<a href='http://maps.google.com?q=\".$r->geoLocation->latitude.\",%20\".$r->geoLocation->longitude.\"'>Google Maps</a> \";  \n//echo 'start : '.$r->getGeoLocation()->getLongitude();  \n?>  \n<p>______________________</p>",
        "tags": [
            "BT",
            "Google",
            "Google Maps",
            "location",
            "location-service",
            "Maps",
            "SDK",
            "Web21C"
        ]
    },
    {
        "titleSlug": "simon-mcmanus-and-osmosoft",
        "title": "Simon McManus and Osmosoft",
        "date": "2007-07-03",
        "markup": "<p>What with the launch of the official Osmosoft.com site linking to my blog I thought it would be appropriate to give you an idea of what I hope to do in BT Osmosoft. As a part of BT we will have a focus on using the BT SDK (<a href=\"http://sdk.bt.com/\" title=\"http://sdk.bt.com/\">http://sdk.bt.com/</a>) which provides the following services :  </p>\n<ul>\n<li><p>SMS</p></li>\n<li><p>Voice Calls</p></li>\n<li><p>Conference Calls</p></li>\n<li><p>Authentication</p></li>\n<li><p>Information about Me</p></li>\n<li><p>Location</p></li>\n<li><p>Contacts</p></li>\n</ul>\n<p>here are my current ideas of how I would like to use them :  </p>\n<p><strong>WordPress Plug-in - <a href=\"http://wordpress.com/\" title=\"http://wordpress.com/\">http://wordpress.com/</a></strong>  </p>\n<p>WordPress is a popular open source blogging application. I would like to create a plug-in for WordPress which integrates some of the functionality mentioned above. The most obvious use would be a widget with a \"text me\" or \"Ring Me\" button allowing readers to get in contact with the blog owner on their mobile without exposing the mobile number.  </p>\n<p><strong>Facebook Application - <a href=\"http://www.facebook.com/\" title=\"http://www.facebook.com/\">http://www.facebook.com/</a></strong>  </p>\n<p>I like Facebook, its very addictive. Ive been particularly keeping an eye on the application that resulted from its API.  </p>\n<p>(<a href=\"http://developers.facebook.com/\" title=\"http://developers.facebook.com/\">http://developers.facebook.com/</a>) One of the things which I find interesting about facebook applications is their ability to spread very very quickly….  </p>\n<p><a href=\"http://blog.pmarca.com/2007/06/analyzing_the_f.html\" title=\"http://blog.pmarca.com/2007/06/analyzing_the_f.html\">http://blog.pmarca.com/2007/06/analyzing_the_f.html</a>  </p>\n<p>So what kind of functionality would I be looking to integrate into Facebook? Below are some initial ideas…..  </p>\n<p>1 .. Allow users to store their contact details and provide a \"call me\" and \"text me\" buttons on facebook.  </p>\n<p>2 .. Use the BT SDK Location service to display a users location  </p>\n<p>3 .. Integration with BT Vault - let users share files using BT Vault on facebook.  </p>\n<p>4 .. Import/Export of BT contacts One Address book and Facebook contacts?  </p>\n<p>5 .. Some kind of Yellow Pages (YELL.COM) integration?  </p>\n<p>6 .. Interface into MSN, Yahoo, AOL and google chat all from within facebook.  </p>\n<p>I will post updates and new ideas on this blog so please keep checking back.</p>",
        "tags": [
            "Blog",
            "BT",
            "Facebook",
            "Osmosoft",
            "SDK",
            "WordPress"
        ]
    },
    {
        "titleSlug": "php-sdk-for-dummies-using-windows",
        "title": "PHP SDK for Dummies using Windows",
        "date": "2007-07-16",
        "markup": "<p>This page provides instruction for how to using the BT SDK in PHP with XXAMP<br />\n1 .. Install XAMPP (<a href=\"http://www.apachefriends.org/en/xampp.html\">http://www.apachefriends.org/en/xampp.html</a>)  </p>\n<p>This is not required but this particular apache configuration has been tested.</p>\n<p>2 .. Register for an account at <a href=\"http://sdk.bt.com/\">http://sdk.bt.com/</a></p>\n<p>3 .. Download the PHP source files: Downloads &gt; PHP</p>\n<p>4 ..  Unzip the directory into your htdocs folder.  If you installed XAMPP to the default location the htdocs folder will be in : C:\\xampp\\htdocs</p>\n<p>Unzip the files to a folder of your choosing. With the default install this can be found at:</p>\n<p>C:\\xampp\\htdocs\\phpWeb21C  </p>\n<p>5 ..  Registering your applications</p>\n<p>Note : Before you can use the SDK you will need to register an application (One registration covers all of your programs)</p>\n<p>You can register application at the URL below:</p>\n<p>https://sdk.bt.com/Default.aspx?TabId=127</p>\n<p>In order to run the certificate generation tool you may need  the latest version of “Java Runtime Environment (JRE)”  from <a href=\"http://java.sun.com/javase/downloads/index.jsp\">http://java.sun.com/javase/downloads/index.jsp</a> (you will receive an error when attempting to run the tool if you require this upgrade.)  </p>\n<p>When you use the tool 3 files will be generated on your desktop. (I called my app Umbrella)  </p>\n<p><em>Umbrella_Sandbox_PrivateKey.pem</em>  </p>\n<p><em>Umbrella_Sandbox_PublicKey.pem</em>  </p>\n<p><em>Umbrella_Sandbox_SignedCert.pem</em>  </p>\n<p>Two of those files :  </p>\n<p><em>Umbrella_Sandbox_PrivateKey.pem</em>  </p>\n<p><em>Umbrella_Sandbox_SignedCert.pem</em>  </p>\n<p>Should then be place in a folder called keys (which you may need to create). E.g.</p>\n<p>C:\\xampp\\htdocs\\phpWeb21C\\keys  </p>\n<p>6 .. Open the common.php file which can be found in the folder:  </p>\n<p>C:\\xampp\\htdocs\\phpWeb21C\\examples\\common.php  </p>\n<p>7 .. Ensure that the application name is the same as the one specified when generating your certificate.  </p>\n<p>8 ..  Open the folder C:\\xampp\\htdocs\\phpWeb21C\\examples\\cmds  </p>\n<p>You should now be able to configure and run these files.  </p>\n<p>9 ..  Running the code.  If you have used the default installation settings go to and edit the file:  </p>\n<p>C:\\xampp\\htdocs\\phpWeb21C\\examples\\cmds\\makeCall.php  </p>\n<p>Change the variables for :  </p>\n<p>$calling = \"tel:+44791\";  </p>\n<p>$called = \"tel:+44791\";  </p>\n<p>To the numbers you wish to ring when the page is run.  </p>\n<p>When you now open the file in a browser the phones should start ringing. http://127.0.0.1/phpWeb21C/examples/cmds/makeCall.php</p>",
        "tags": [
            "BT",
            "Osmosoft",
            "SDK"
        ]
    },
    {
        "titleSlug": "my-second-look-at-tiddlywiki",
        "title": "My Second Look at TiddlyWiki",
        "date": "2007-07-05",
        "markup": "<p><a href=\"http://www.tiddlywiki.com/\">TiddlyWiki</a></p>\n<p>Right, if your wondering if you missed a post about my first look at TiddlyWiki fear not. I didn’t blog about it because it was largely unsuccessful. I made the mistake of not exploring the UI properly before diving straight into the source code. While it was good to explore the structure of the underlying code it soon became clear this was not the best way to learn my way round.&nbsp;</p>\n<p>Ok so first of all I spent five minutes watching <a href=\"http://jayfresh.wordpress.com\">Jon Lister</a>  playing around with TiddlyWiki. It soon became clear I was meant to be coding in though the web interface. This is something I particularly liked about the <a href=\"http://www.jot.com\">Jot</a> platform (the ability to edit the code underlying a page from within the browser) Its going to be interesting to see how the two compare.</p>\n<p>So at this point I decided it would be a good idea to start looking at some of the real simple tutorials, Here are some of the ones I worked though:</p>\n<ul>\n<li><p><a href=\"http://www.blogjones.com/TiddlyWikiTutorial.html\">http://www.blogjones.com/TiddlyWikiTutorial.html</a></p></li>\n<li><p><a href=\"http://tiddlywikitips.com/\">http://tiddlywikitips.com/</a></p></li>\n</ul>\n<p>In the TiddlyWiki fashion these are no long drawn out tutorials but rather tiddlers of information each describing one particular piece of functionality.</p>\n<p>At this stage I started copying and pasting lots of little code snippets into my own tiddlyWiki to see how the code worked. This proved a far more successful way to learn my way round the basics.</p>\n<p>So my experience of TiddlyWiki is still very limited but I am starting to get a good understanding of what it does and how it goes about doing it.</p>\n<p>One of the good things about this job is that I get to work with Jeremy Ruston the creator of TiddlyWiki, this gives me the great opportunity to ask him questions about tiddlyWiki and then report back to you with the answers:</p>\n<p><strong>Questions for Jeremy………..</strong></p>\n<p>Why did he create TiddlyWiki?<br />\n&nbsp;  </p>\n<p>The thing I really like about the Open Source world is that you don’t need to show ROI or provide a business case in order to create software. I want to understand what his motivations were and what he originally expected.</p>\n<p>And some other questions :&nbsp;  </p>\n<ul>\n<li><p>What did he originally build TiddlyWiki for?&nbsp;</p></li>\n<li><p>When did he create TiddlyWiki?</p></li>\n<li><p>What are his initial plans for integrating the SDK with TiddlyWiki?&nbsp;</p></li>\n<li><p>What big plans does he have for TiddlyWiki in the future?&nbsp;&nbsp;</p></li>\n</ul>\n<p>Keep checking back and I should have some answers in the near future.</p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "my-first-(very-simple)-facebook-application-using-the-bt-web21c-sdk",
        "title": "My First (very simple) Facebook Application using the BT Web21c SDK",
        "date": "2007-07-16",
        "markup": "<p>This is a simple proof of concept  </p>\n<p>Firstly I took the existing PHP example code for CallMe (from the BT SDK PHP Examples)&nbsp;and modified it.  </p>\n<p>For more info on getting the PHP SDK set up please see <a href=\"http://simonmcmanus.wordpress.com/2007/07/16/php-sdk-for-dummies-using-windows-2/\" title=\"this post.\">this post</a>.&nbsp; It talk about setting up the SDK locally but its very similiar when FTPing up to a live web server.  </p>\n<p>Please note that should you want to&nbsp;use this code&nbsp;you will need to modify &nbsp;the line :  </p>\n<p>&nbsp;&nbsp;&nbsp; $called = \"tel:+44YOUR_MOBILE_NUMBER_HERE\";  </p>\n<p>&nbsp;______  </p>\n<p>&nbsp;#!/usr/bin/env php<br />\n&lt;?php<br />\nrequire_once(dirname(__FILE__) . '/../../web21c.php');<br />\nrequire_once(dirname(__FILE__) . '/../common.php');  </p>\n<p>if(!$_REQUEST['tel'])<br />\n{<br />\necho 'no number to call';<br />\nexit;<br />\n}<br />\n&nbsp;&nbsp;&nbsp; $calling = \"tel:+\".$_REQUEST['tel'];<br />\n&nbsp;&nbsp;&nbsp; $called = \"tel:+44YOUR_MOBILE_NUMBER_HERE\";  </p>\n<p>&nbsp;&nbsp;&nbsp; /*<br />\n&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp; make one phone ring another<br />\n&nbsp;&nbsp;&nbsp;&nbsp; */<br />\n&nbsp;&nbsp;&nbsp; $web21c = new Web21c($applicationName, $environment);  </p>\n<p>&nbsp;&nbsp;&nbsp; $voice = $web21c-&gt;SessionThirdPartyCall();  </p>\n<p>&nbsp;&nbsp;&nbsp; $r = $voice-&gt;makeCall($calling, $called, 30);  </p>\n<p>&nbsp;&nbsp;&nbsp; print \"call made as : \" . $r-&gt;callId . \"\\n\";  </p>\n<p>?&gt;  </p>\n<p>______  </p>\n<p>Putting this code up on the internet will expose your account to&nbsp;others so we suggest placing it somewhere that only you know about it.  </p>\n<p>The changes mean that a user can call your&nbsp;number&nbsp;by passing it in the&nbsp;url…..eg…..  </p>\n<p>&nbsp;&nbsp;phpWeb21C/cmds/MakeCall.php?tel=OTHER TEL NUM  </p>\n<p>the format of the number is 44000000000&nbsp; (the + is added by the php file)  </p>\n<p>&nbsp;You can check that it works simply by specifying a different phone number to the one specified previously.  </p>\n<p>To create the Facebook application I simply provided the introdution to facebook apps….  </p>\n<p><a href=\"http://developers.facebook.com/step_by_step.php\">http://developers.facebook.com/step_by_step.php</a>  </p>\n<p>I suggest you go up to at least step 18.  </p>\n<p>When you have got this far you can change the index.php file&nbsp;so&nbsp;it contains the code below:  </p>\n<p>Please note that you will need to change &nbsp;the action value to the absolute URL where the BT SDK files are stored.  </p>\n<p>________  </p>\n<form action=\"[http://YOURAPPLICATIONURL/phpWeb21C/examples/cmds/makeCall.php](http://yourapplicationurl/phpWeb21C/examples/cmds/makeCall.php)\">  \n<input type=\"text\" name=\"tel\" />  \n<input type=\"SUBMIT\" name=\"SUBMIT\"&nbsp; value=\"submitx\\`\"/>  \n</form>\n<p><br />\n______</p>",
        "tags": [
            "BT",
            "Facebook API",
            "Facebook Application",
            "SDK",
            "Web21C"
        ]
    },
    {
        "titleSlug": "ip-in-action-security-event",
        "title": "IP in Action - Security Event",
        "date": "2007-06-29",
        "markup": "<p>A couple of weeks ago I attended the IP in Action Security event in Coventry, This was a part of my old role on a project to provide designs for a complete end to end security solution for BT (access cards, access readers, Biometrics, IP CCTV, Door Control and ID/Role Management)  </p>\n<p>I was pleased to see that everyone at the event acknowledged new security projects require as much IT expertise as the do conventional security knowledge. Unfortunately not all suppliers fully grasped the concept of programmatically exposing their devices though xml and web services but there were a number who did.  </p>\n<p>This is particularly important to BT as it drives towards a SOA (Service Orientated Architecture) . With the use of standards such as BPEL (Business Process Execution Language) and BAM (Business Activity Monitoring) , we are going to see some extremely clever \"Enterprise Mash-ups\" in the not too distant future.  </p>\n<p>Video analytics was the buzzword at the event causing the most excitement, that’s the software that automatically sends you a fine if you stop in the wrong part of a junction (yellow box)  </p>\n<p>Sony gave a particularly impressive demonstration of how they can use analytics to generate meta data about videos, and only notify an operator if there is actually something they need to look at.  </p>\n<p>http://www.sonybiz.net/biz/view/ShowContent.action?BIZ_SESSIONID=GWVHGG9WkrmNTcJfjppj5JHSpn69td2nCYzcLFLhGKNc6yDxK3qv!-46656936&amp;logicalname=NVM%20DEPA%20Flash&amp;site=biz_en_GB  </p>\n<p>The event had a focus on local governments/councils. There were a number of companies proposing they could cut costs for local councils by consolidating their CCTV, traffic light, traffic information boards and emergency service networks into one IP WiFi network. Leeds council gave an impressive demonstration of how they have done this and used the same network to provide WiFi access to some of its poorest areas.  </p>\n<p>Finally I though I would mention one of the more comical ideas from the event, some councils are promoting Bluetooth networks, while there may be many good uses for this technology the example given was rather poor…..  </p>\n<p>When walking into an area of high crime people receive a message on their mobile informing them that criminal may be operating in the area. On receiving that message most peoples reaction would be to get their phone from their pocket and review the message thus display their lovely new phone to all the criminals. Genius.</p>",
        "tags": [
            "IP",
            "Security",
            "Video Analytics"
        ]
    },
    {
        "titleSlug": "mock-ajax-in-facebook",
        "title": "Mock Ajax in Facebook",
        "date": "2007-08-01",
        "markup": "<p>This example simply sends the variable specified in the text area to response.php and then displays the result from response.php in the facebook window without reloading the main page.  </p>\n<p>In this particular example response.php only returns the same variables but this will be the underlying structure for many facebook apps. To use this example place the below fbml into the small default fbml box when editing the application info.  </p>\n<pre><code class=\"js language-js\">&lt;fb:subtitle&gt;Simple FBML&lt;/fb:subtitle&gt;\n</code></pre>\n<pre><code class=\"js language-js\">&lt;form id='form'&gt;\n</code></pre>\n<pre><code class=\"js language-js\">&lt;div id=\"preview\" style=\"border-style: solid; border-color: black;&amp;nbsp;&amp;nbsp; border-width: 1px; padding: 5px;\"&gt;&lt;/div&gt;\n</code></pre>\n<pre><code class=\"js language-js\">&lt;textarea name=\"data\"&gt;&lt;/textarea&gt;\n</code></pre>\n<pre><code class=\"js language-js\">&lt;input type=\"submit\" clickrewriteform='form'&amp;nbsp; clickrewriteurl=\"http://osmosoft-php.com/facebook/simple/response.php\"&amp;nbsp; clickrewriteid=\"preview\" value=\" get response\"/&gt;\n</code></pre>\n<pre><code class=\"js language-js\">&lt;/form&gt;\n</code></pre>\n<p>then response.php contains :  </p>\n<pre><code class=\"js language-js\">&lt;?php\n\n    echo $\\_POST\\['data'\\];\n\n?&gt;\n</code></pre>\n<p>for more info please see :  </p>\n<p><a href=\"http://wiki.developers.facebook.com/index.php/Mock_ajax\" title=\"http://wiki.developers.facebook.com/index.php/Mock_ajax \">http://wiki.developers.facebook.com/index.php/Mock_ajax</a></p>",
        "tags": [
            "ajax",
            "API",
            "Blog",
            "BT",
            "Facebook",
            "Facebook Application",
            "fbml",
            "mock ajax",
            "Osmosoft",
            "PHP",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "bullshit-20",
        "title": "Bullshit 2.0",
        "date": "2007-12-12",
        "markup": "<p>I'm currently at the second day of the <a href=\"http://www.leweb3.com/\" title=\"le web 3\">LeWeb3 Conference</a>. For a long time I have disliked the term \"web 2.0\" for a number of reasons.  </p>\n<p>It has no clear definition, different people take it to mean completely different things.  </p>\n<p>The web is evolving, it is not released in easily defined iterations.  </p>\n<p><a href=\"http://doc-weblogs.com/\" title=\"Doc Searls\">Doc Searls</a> asked the question in his talk: who can define web 2.0? About 2 people in an audience of 1000 people raised their hands.  </p>\n<p>Often these terms are used to describe things that we don't quite understand or can't explain. I once overhead <a href=\"http://tommorris.org/\" title=\"Tom Morris\">Tom Morris</a> say that its only non-developers who use the term web 2.0.  </p>\n<p>Its scary how many time I have heard people say they want a web 2.0 app. <a href=\"http://blogs.smh.com.au/innovator/archives/2007/09/has_innovation_become_a_dirty.html\" title=\"This ost\">This post</a> talks about how innovation has become a dirty word. I think the same can be said for anything ending 2.0.  </p>\n<p>I would love to see an end to terminology 2.0 but realistically I can only ask that if people insist on using these terms they follow it by an explanation of what they actually mean.</p>",
        "tags": [
            "2.0",
            "bullshit2.0",
            "docsearls",
            "leweb3",
            "osmososft",
            "web 2.0"
        ]
    },
    {
        "titleSlug": "writing-to-the-facebook-news-feed",
        "title": "Writing to the Facebook News feed.",
        "date": "2007-09-15",
        "markup": "<p>I have been modifying the mock <a href=\"http://simonmcmanus.wordpress.com/2007/08/01/mock-ajax-in-facebook/\" title=\"mock ajax example\">ajax example.</a> This code is used in response.php, it takes two variables which need to be posted in through forms. This code requires facebookid and viewer_facefacebookid to be passed in from a form to look up the names and then the data is sent in from the data variable.  </p>\n<pre><code class=\"js language-js\">require\\_once('appinclude.php');\n</code></pre>\n<pre><code class=\"js language-js\">$name\\_to = $facebook-&gt;api\\_client-&gt;users\\_getInfo($\\_POST\\['facebookid'\\],'name, pic\\_small');\n</code></pre>\n<pre><code class=\"js language-js\">$name\\_from = $facebook-&gt;api\\_client-&gt;users\\_getInfo($\\_POST\\['viewer\\_facebookid'\\],'name, pic\\_small');\n</code></pre>\n<pre><code class=\"js language-js\">$title = $name\\_to\\[0\\]\\[name\\].' was sent the following text by '.$name\\_from\\[0\\]\\[name\\].' from the &lt;a href=http://apps.facebook.com/mojomob&gt;Mojo Application&lt;/a&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">$body = $\\_POST\\['data'\\];\n</code></pre>\n<pre><code class=\"js language-js\">$facebook-&gt;api\\_client-&gt;feed\\_publishStoryToUser($title, $body);\n</code></pre>\n<pre><code class=\"js language-js\">$facebook-&gt;api\\_client-&gt;feed\\_publishActionOfUser($title, $body);\n</code></pre>\n<pre><code class=\"js language-js\">exit;\n</code></pre>",
        "tags": [
            "API",
            "BT",
            "Facebook",
            "Osmosoft",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "cctiddly-system-tiddler-plugins",
        "title": "ccTiddly System Tiddler Plugins",
        "date": "2007-12-10",
        "markup": "<p>ccTiddly currently uses a modified version of the basic TiddlyWiki HTML code. This means that whenever there's an update to the core code, we have to manually update ccTiddly to the new version (which involves some fiddly manual steps).  </p>\n<p>The goal is to make it so that ccTiddly uses a clean, unadorned copy of empty.html from tiddlywiki.com, and to have it automatically splice in the extra bits and pieces that are needed by ccTiddly.  </p>\n<p>These extra bits and pieces are a bunch of plugins and some \"stock\" tiddlers that use macros from those plugins to expose them to the user.  </p>\n<p>If, like me, you get confused about the difference between a plugin and a macro, remember that a plugin is just a tiddler tagged \"systemConfig\", a plugin can&nbsp; can contain many different macros (which use config.macros)  </p>\n<p>For instance, there is a plugin called \"CreateWorkspacePlugin\" that provides the <<ccCreateWorkspace>&gt; macro. The macro produces a user interface that allows users to interactively create a new workspace. So, we need to include the plugin in the HTML file, and we also need to, say, add a new tiddler called \"CreateWorkspace\" that contains a call to <<ccCreateWorkspace>&gt; the create workspace macro.  </p>\n<p>Here's the complete list:<br />\n<strong>Macro <<ccCreateWorkspace>> (from CreateWorkspacePlugin)</strong>  </p>\n<p>This macro allows the user to create a new ccTiddly workspace by specifying a name, and the permissions for both anonymous and registered users. We'll make the macro available to users via the backstage area, since this isn't a particularly common operation.  </p>\n<p>**Macro <<ccEditWorkspace>&gt; (from EditWorkspacePlugin)<br />\n**  </p>\n<p>This plug in will allow users to manage permissions on a workspace which already exists (assuming they have the correct permission). Going forward this will probably include the master workspace management which will then be moved to its own plug in.  </p>\n<p><strong>Macro <<ccUserTiddler>> (From UserTiddlerPlugin)&nbsp;</strong>  </p>\n<p>This tiddler will be used to change your email address, password and user specific tiddlers.  </p>\n<p><strong>Macro <<ccLogin>> - (From LoginPlugin)</strong>  </p>\n<p>This macro displays the login UI.&nbsp; When not logged in it will allow the users to login&nbsp; using OpenID, LDAP or the internal user database. When logged in the user will be informed who they are logged in as and be given the option to log out.</p>",
        "tags": [
            "ccTiddly",
            "Osmosoft",
            "osmososft",
            "plans",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "conference-calling-with-web21c-php-sdk",
        "title": "Conference Calling with Web21c PHP SDK",
        "date": "2007-07-24",
        "markup": "<p>Over the last few days I have been consuming my credits for the BT SDK by playing with the conference calling service.&nbsp;&nbsp; This service lets 4 users connect on the Sandbox and currently 10 on production servers (This may soon been increased to unlimited)  </p>\n<p>&nbsp;A member of the SDK support team mentioned that a lot of people have expereinced problems when using the conference calling service so I thought I would try to provide some help.&nbsp; One of the biggest problems I experienced was accessing particular variables.&nbsp; In this example I have demonstrated how you can create a call and then use various functions to obtain information about the call.  </p>\n<p>&nbsp;The page returns details of each person in the call.&nbsp; You will notice that participantInfo does not return the phone number of the users connected.&nbsp; I have requested that&nbsp;this functionality be added but for the time being you will have to store ids against phone numbers when the user is added in order to display the users phone number.  </p>\n<p>Keep an eye on the blog, my next example will attempt to combine this with the DHTML Phone example I made earlier.  </p>\n<pre><code class=\"js language-js\">&amp;nbsp;&lt;? \n\nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../../lib/web21c.php'); \n\nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../../config.php');\n</code></pre>\n<pre><code class=\"js language-js\">$web21c = new Web21c($applicationName, $environment);\n</code></pre>\n<pre><code class=\"js language-js\">$conf = $web21c-&gt;SessionConferencing();\n</code></pre>\n<pre><code class=\"js language-js\">try \n\n{ \n\n&amp;nbsp;$conf\\_back = $conf-&gt;createConference(); \n\n&amp;nbsp;$confId = $conf\\_back-&gt;conferenceId; \n\n&amp;nbsp;$talker1 = $conf-&gt;inviteParticipant($confId, 'tel:+447918880749'); \n\n&amp;nbsp;$talker2 = $conf-&gt;inviteParticipant($confId, 'tel:+442087261159'); \n\n&amp;nbsp;$confInfo = $conf-&gt;getConferenceInfo($confId); \n\n&amp;nbsp;echo '&lt;hr /&gt;ConfID : '; \n\n&amp;nbsp;echo $cid = $confInfo-&gt;conferenceInfo-&gt;conferenceId;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;echo '&lt;br /&gt;Status : '.$confInfo-&gt;conferenceInfo-&gt;status;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;echo '&lt;br /&gt;Start : '.$confInfo-&gt;conferenceInfo-&gt;startTime;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;echo&amp;nbsp; '&lt;br /&gt;Number of Participants : '.$confInfo-&gt;conferenceInfo-&gt;numberOfParticipants;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;echo '&lt;br /&gt;Duration : '.$confInfo-&gt;conferenceInfo-&gt;duration;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;//var\\_dump($confInfo); \n\n&amp;nbsp;echo '&lt;hr /&gt;'; \n\n&amp;nbsp;// wait while the users answer their phones \n\n&amp;nbsp;sleep(5); \n\n&amp;nbsp;// get call details using the call id returned. \n\n&amp;nbsp;$conf\\_detail = $conf-&gt;getParticipants($cid); \n\n&amp;nbsp; \n\n&amp;nbsp;echo \"&lt;hr /&gt;&lt;h1&gt; Each Participant&lt;/h1&gt;\"; \n\n&amp;nbsp;$ParInfo = $conf\\_detail-&gt;participantInfos; \n\n&amp;nbsp;$pars = $ParInfo-&gt;participantInfo; \n\n&amp;nbsp; \n\n&amp;nbsp;foreach ($pars as $par) \n\n&amp;nbsp;{ \n\n&amp;nbsp;&amp;nbsp;echo ' &lt;hr /&gt;'; \n\n&amp;nbsp;&amp;nbsp;echo&amp;nbsp; '&lt;b&gt;Participant ID :&lt;/b&gt; '.$par-&gt;participantId.'&lt;br /&gt;'; \n\n&amp;nbsp;&amp;nbsp;echo&amp;nbsp; '&lt;b&gt;participantStatus : &lt;/b&gt;'.$par-&gt;participantStatus.'&lt;br /&gt;'; \n\n&amp;nbsp;&amp;nbsp;$par\\_detail = $conf-&gt;getParticipantInfo($par-&gt;participantId); \n\n&amp;nbsp;&amp;nbsp;//var\\_dump($par\\_detail); \n\n&amp;nbsp;}\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;?&gt;\n</code></pre>",
        "tags": [
            "BT",
            "Conference Call",
            "PHP",
            "SDK",
            "Web21C"
        ]
    },
    {
        "titleSlug": "conference-calls-on-the-bt-sdk-(web21c)",
        "title": "Conference Calls on the BT SDK (Web21c)",
        "date": "2007-07-20",
        "markup": "<p>Conference calls allow you to have more than two participants in a call at any one time. The number of participants varies depending on if you are using the sandbox or production server.  </p>\n<p>There is currently no an example for the conference call functionality within the PHP examples. The below code provides a very basic example of how to set up the call.  </p>\n<p>Please note that you will need to change the phone numbers, if you wish to add more participants simple add a new line under :  </p>\n<p>$talker2 = $conf-&gt;inviteParticipant($confId, 'tel:+447000000000');  </p>\n<p>_______________  </p>\n<p>&lt;?php<br />\nrequire_once(dirname(__FILE__) . '/../../web21c.php');<br />\nrequire_once(dirname(__FILE__) . '/../common.php');  </p>\n<p>$web21c = new Web21c($applicationName, $environment);  </p>\n<p>$conf = $web21c-&gt;SessionConferencing();  </p>\n<p>$conf_back = $conf-&gt;createConference();<br />\n$confId = $conf_back-&gt;conferenceId;  </p>\n<p>$talker1 = $conf-&gt;inviteParticipant($confId, 'tel:+447000000000');<br />\n$talker2 = $conf-&gt;inviteParticipant($confId, 'tel:+447000000000');  </p>\n<p>$confInfo = $conf-&gt;getConferenceInfo($confId);<br />\nvar_dump($confInfo);<br />\n//$conf_detail = $conf-&gt;getParticipants($confId);<br />\n//print $conf_detail;<br />\n?&gt;<br />\n______________________</p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "confused-by-convergence",
        "title": "Confused by Convergence",
        "date": "2007-08-29",
        "markup": "<p>Around a month ago I rather stupidly dropped my Sony Erickson k800i right into the middle of the river Crouch, I used the K800i primarily for its phone and camera functionality. It did have MP3 but I never really like the interface or experience. Now I come to replace it I wonder what I should be replacing it with . Afew years ago, I was waiting for a phone that did at least:  </p>\n<ul>\n<li><p>digital camera &gt; 3.5 mega pixel.</p></li>\n<li><p>MP3 Player &gt; 10gb</p></li>\n<li><p>Bluetooth</p></li>\n<li><p>Wifi</p></li>\n<li><p>good UI</p></li>\n</ul>\n<p>I could go on for a long time here, and the longer my list the longer my wait! Fortunately I&nbsp; am not writing the spec for a phone. Rather I am trying to point out that i don't think there will ever be phone which ever truly meets my requirements. I recently got to play with the iPhone, and while it clearly lays the foundations for the UI of phones in the future it still has a number of key things missing, most notably :  </p>\n<ul>\n<li><p>the ability to search and buy music from the mobile device.</p></li>\n<li><p>Positioning</p></li>\n</ul>\n<p>Im am sure that Apple will release newer version of the phone with this functionality for a price, but by that time there will of course be newer feature which are not present. This is of course the nature of innovation but I wonder if there is a bigger point here. I have always been interested in the term \"a jack of all trades is a master of none.\" When a phone, service, site, shop or even social network aggregation point tries to do everything, the chances are that they will not be able to do any of the things as well as if they attempted to one particular thing very well.</p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "video-on-open-social",
        "title": "Video on Open Social",
        "date": "2007-11-01",
        "markup": "<p>As the imminent release of Open Social draws closer we are starting to see more info about it :  </p>\n<p>http://blog.pmarca.com/2007/10/open-social-scr.html</p>",
        "tags": [
            "Facebook",
            "Facebook Application",
            "Google",
            "n social",
            "ning",
            "open social",
            "opensocial",
            "Osmosoft",
            "simon mcmanus",
            "social networking"
        ]
    },
    {
        "titleSlug": "delicious-feed-removal",
        "title": "Del.icio.us Feed Removal",
        "date": "2007-12-06",
        "markup": "<p>Following on from my previous posts about <a href=\"http://simonmcmanus.com/2007/11/28/the-robbie-clutton-problem/\" title=\"the Robbie problem\">the Robbie problem</a> I have now removed my mystical link between my blog and del.icio.us account.  </p>\n<p>If anyone would like to follow my del.icio.us links feed then you can get it <a href=\"http://del.icio.us/simonmcmanus\" title=\"here\">here.</a></p>",
        "tags": [
            "del.icio.us",
            "osmososft"
        ]
    },
    {
        "titleSlug": "those-fuckers-at-facebook",
        "title": "Those Fuckers at Facebook",
        "date": "2007-09-13",
        "markup": "<p>So last week i attended BarCamp and wrote the BT Mojo application, which lets people have a box on their facebook profile page from which people can send them text messages.  </p>\n<p><img src=\"https://simonmcmanus.files.wordpress.com/2007/09/picture-2.png\" alt=\"Facebook Screen shot\" /><br />\nIt does a very simple job, but there was plenty of potential to expand. So yesterday I was asked to present about the work I have been doing over the last few weeks. Clearly I wanted to show my MojoMob application. When I attempted to send myself a text (sad i know) i got the following error message. I knew for a fact that none of the code had been changed since I had last tested and also confirmed the remote file it was calling was present.  </p>\n<p><img src=\"https://simonmcmanus.files.wordpress.com/2007/09/picture-3.png\" alt=\"Error1\" />  </p>\n<p>The Page at http://www.facebook.com says:  </p>\n<p>An error occured during a request to a remote server .This failure may be temporary, try repeating the request  </p>\n<p>_______________________________________________  </p>\n<p>The app uses the <a href=\"http://simonmcmanus.wordpress.com/2007/08/01/mock-ajax-in-facebook/\" title=\"mock ajax\">mock ajax</a> facebook calls which allow you to do ajax type stuff within Facebook. A look around the developer forum shows that I am clearly the not the only person experiencing this issue:  </p>\n<p>http://www.facebook.com/topic.php?uid=2205007948&amp;topic=12479  </p>\n<p>The plot actually thickens when you read some of the posts. The beta facebook site does not appear to have the issue:  </p>\n<p>http://www.beta.facebook.com/home.php?  </p>\n<p>Which adds to the confusion? Surely facebook is not changing their code on the production server? Quite worrying if they are.  </p>\n<p>More worrying is the&nbsp; fact that the api was changed with apparently no notice and we are yet to see any comments from facebook 12 hours in. &nbsp; Those fuckers, lets hope its sorted soon.  </p>\n<p>I talk more about some of the issues with using the Facebook platform in <a href=\"http://simonmcmanus.wordpress.com/2007/08/08/is-facebook-the-answer-to-everything-facebook-for-the-enterprise/\" title=\"this post. \">this post</a></p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "enable-and-use-mod-rewrite",
        "title": "Enable and use Mod-Rewrite",
        "date": "2007-10-22",
        "markup": "<p>Mod rewrite is a great way to manipulate URLs. In this post I hope to explain how to get Mod-rewrite set up and working:  </p>\n<p>Firstly we need to make sure that apache has been set up correctly, this requires us to check our httpd.conf file :<br />\nThis line:  </p>\n<pre><code class=\"js language-js\">LoadModule rewrite\\_module modules/mod\\_rewrite.so\n</code></pre>\n<p>should be uncommented (the starting hash removed)  </p>\n<p>Some apache configurations also require you to uncomment :  </p>\n<pre><code class=\"js language-js\"> AddModule mod\\_rewrite.c\n</code></pre>\n<p>You will also need to allow .htaccess files to change your apache config. You can do this by ensuring that the AllowOverride option is set to all :  </p>\n<pre><code class=\"js language-js\">    #\n\n    # AllowOverride controls what directives may be placed in .htaccess files.\n\n    # It can be \"All\", \"None\", or any combination of the keywords:\n\n    #   Options FileInfo AuthConfig Limit\n\n    #\n\n    AllowOverride All\n</code></pre>\n<p>We then just need to restart apache for our settings to take effect. When apache has restarted we can get started. We do mod-rewrite stuff in .htaccess files. I reccomend creating your .htaccess file in some kind of FTP client as both the Mac Finder and Windows Explorer dont like to create files starting with a dot. (they are reserved for system/hidden files)  </p>\n<p>When you have created the .htaccess file you simple need to add the below code :  </p>\n<pre><code class=\"js language-js\">RewriteEngine On\n\nRewriteCond %{REQUEST\\_FILENAME} !-d\n\nRewriteCond %{REQUEST\\_FILENAME} !-f\n\nRewriteRule ^.\\* /shared/index.php\n</code></pre>\n<p>You should change the last line to reflect a file which actually exists.  </p>\n<h4 id=\"whathaveidone\">What have I done?</h4>\n<p>While it might seem complex what you have just done is incredibly simple, any request recieved by the folder containing your .htaccess file (and folders below it) will be directed to the .htaccess file.  </p>\n<p>In this particular case our .htaccess file looks to see if the request exists as a file or directory, if it does not the request is passed on to /shared/index.php on the server. So if we put the .htaccess file in our root directory all the below URLs would actually point to the same file (/shared/index.php)  </p>\n<p>osmosoft.com/wordpress  </p>\n<p>osmosoft.com/typo  </p>\n<p>osmosoft.com/BLAHNLASD  </p>\n<h4 id=\"wheredoigofromhere\">Where do I go from here?</h4>\n<p>Now you need to change /shared/index.php to display different things based on the URL, the simplist way I have found to do this is by breaking up the URL into variables and then proccessing them in index.php. eg:  </p>\n<pre><code class=\"js language-js\">&lt;?php\n</code></pre>\n<pre><code class=\"js language-js\">$url = split('/', $\\_SERVER\\['PHP\\_SELF'\\]);\n\n\n$instance =  $url\\[1\\];\n</code></pre>\n<pre><code class=\"js language-js\">?&gt;\n</code></pre>",
        "tags": [
            "apache",
            "BT",
            "mod-rewrite",
            "Osmosoft",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "enable-php-error-reporting-for-a-page",
        "title": "Enable PHP error reporting for a page.",
        "date": "2007-09-15",
        "markup": "<p>This code is really handy although not that easy to find on google. It lets you enable errors on a php page without having to mess around in the php.ini file.<br />\nerror_reporting(\"E_ALL\");<br />\nini_set(\"display_errors\", \"1\");</p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "those-fuckers-at-facebook-trying-to-hush-me-up",
        "title": "Those Fuckers at Facebook - trying to hush me up.",
        "date": "2007-09-13",
        "markup": "<p>Hahahaha, I have been posting links to my last two blog posts on the developer forum on facebook, not sure if i have just sent too many&nbsp; messages or someone is trying to hush me up!  </p>\n<p><img src=\"https://simonmcmanus.files.wordpress.com/2007/09/picture-4.png\" alt=\"picture-4.png\" />  </p>\n<p>I would love an explaination but think they have more important things to be worrying about at the moment.</p>",
        "tags": [
            "API",
            "Facebook",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "those-fuckers-at-facebook-part-two",
        "title": "Those Fuckers at Facebook - Part Two",
        "date": "2007-09-13",
        "markup": "<p>So it appears that my facebook applications still doesnt work.&nbsp; Its been at least 15 hours since mock Ajax worked and I have been getting reports that the issue started (albeit intermittently)&nbsp; about 32 hours ago.  </p>\n<p>I have previously blogged about the dangers of any application that relies on an external platform over which we have not contractual support, i think this highlights the issue, but most of all makes facebook look very bad.  </p>\n<p>At my demo tomorrow I can explain the situation and providing mock ajax still works on the beta platform use that.&nbsp; With that said it is really not the point. &nbsp; Since this morning I have been closely watching the developer forum and have been popped in and out of the facebook IRC channel.&nbsp;&nbsp; What have facebook said? Absolutely nothing, 15 hours into the issue facebook have still not even ackolwedged the issue exists.  </p>\n<p>There is no way that Facebook can continue to piss of the developers who ultimately they rely on for the further expansion and inovation around their platform.&nbsp;&nbsp;&nbsp; In the enterprise environment there would be very clearly defined SLA's for service up time, change notifications, support fix times etc.  </p>\n<p>Lets hope facebook learn from this and start to provide some kind of SLA (any level of service would be nice.) As developers we may not pay them money but we are&nbsp; a massive part of their business model and I think we deserve some respect.</p>",
        "tags": [
            "API",
            "BT",
            "Facebook",
            "Osmosoft",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "enterprise-tiddlywiki",
        "title": "Enterprise TiddlyWiki",
        "date": "2007-08-14",
        "markup": "<p>TiddlyWiki has been used for a number of years to organise information, what requirements would an enterprise version of TiddlyWiki have?  </p>\n<p>TiddlyWiki can be used in the enterprise as a collaboration tool allowing multiple users to contribute to a single TiddlyWiki. In this particular instance we wish to build a sit allowing BT staff to have their own personal Wikis on the intranet.  </p>\n<p><strong>SiteMinder</strong> is the default authentication method used for all BT applications (both internal and external.) In order to conform to BT's security policy the authentication and authorization will have to be done through SiteMinder. More details about this will be provided soon.  </p>\n<p><strong>History and Auditing</strong> - The system should be able to see all the previous revisions of a document and see who has made each of the changes.  </p>\n<p><strong>Site Structure</strong> - When a user first visits the site a TiddlyWiki homepage should be created for them. The URL should take the form :  </p>\n<p><em>tiddlyfarm.intra.bt.com/simon.mcmanus/</em>  </p>\n<p>which would be extracted from my email address.  </p>\n<p>Any pages which I then create should be made as sub folders of simon.mcmanus. e.g.  </p>\n<p><em>tiddlyfarm.intra.bt.com/simon.mcmanus/todolist/</em>  </p>\n<p>The idea of this is to give users their own space on the BT intranet where they can store many TiddlyWikis.</p>",
        "tags": [
            "enterprise",
            "Osmosoft",
            "simon mcmanus",
            "SimonMcManus",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "epoch-to-tiddlytime",
        "title": "Epoch to TiddlyTime",
        "date": "2007-12-03",
        "markup": "<p>This handy PHP function receives&nbsp; a epoch time stamp and returns the a string using the TiddlyWiki date format. &nbsp; Quite handy.  </p>\n<p>//&nbsp; Returns time in TiddlyWiki format from Epoch time stamp.<br />\nfunction epochToTiddlyTime($timestamp)<br />\n{<br />\nreturn date('YmdHi', $timestamp);<br />\n}</p>",
        "tags": [
            "osmososft",
            "TiddlyWiki ccTiddly"
        ]
    },
    {
        "titleSlug": "the-robbie-clutton-problem",
        "title": "The Robbie Clutton Problem.",
        "date": "2007-11-28",
        "markup": "<p><a href=\"http://blog.iclutton.com\" title=\"Robbie\">Robbie</a> seems to be getting slightly annoyed about people such as myself who link their del.icio.us accounts with their wordpress accounts.&nbsp; He explains his problem in the following blog post :<br />\nhttp://blog.iclutton.com/2007/11/other-peoples-blogs.html  </p>\n<p>I quite like this functionality, I have had a number of comments about the links which&nbsp; I post. I also like the way people can know what I am reading and thinking about in between normal posts.  </p>\n<p>As Robbie points out you can get a direct stream of my del.icio.us feed from <a href=\"http://del.icio.us/simonmcmanus\" title=\"this page. \">this page.</a>  </p>\n<p>I value Robbie as a reader/commenter&nbsp; so dont want to continue to enrage his anger, I&nbsp; looked at the settings thinking I would make it update once a week,&nbsp; unfortunately I can only configure the hour of the day at which the update occurs.  </p>\n<p>Id be interested in any comments for or against Robbies motion, if no-one says they like viewing my links in their RSS reader I will remove the mystical link.  </p>\n<p>This has also got me thinking about aggregation in a slightly different way, in some ways I like RSS feeds which are about a particular topic, but I also like the fact that certain blogs aggregate various different topics.  </p>\n<p>Comments please…</p>",
        "tags": [
            "blogs",
            "del.icio.us",
            "rss",
            "WordPress"
        ]
    },
    {
        "titleSlug": "facebook-screen-scraping-get-your-friends-back-from-facebook-and-into-tiddlywiki!",
        "title": "Facebook Screen Scraping - Get your friends back from Facebook and into TiddlyWiki!",
        "date": "2007-10-23",
        "markup": "<p>One of the great things about TiddlyWiki is that it can import information from any number of sources, what with all the fuss going on around the walled gardens of facebook this seemed like a great application. This is not a finished application, far from it. It does however prove that you can get your information back from facebook in a form you can control.  </p>\n<p>In this particular example I have only extracted the list of friends. The code is also there to import your news feed (from which you could then generate an RSS feed!) although it requires some more coding to get it working. Currently there are two lines in the recipe file which are commented out :  </p>\n<h1 id=\"tiddlerfeedsfacebooknewsfeedtiddler\">tiddler: ../../feeds/FacebookNewsFeed.tiddler</h1>\n<h1 id=\"tiddleradaptorsfacebooknewsadaptorpluginjs\">tiddler: ../../adaptors/FacebookNewsAdaptorPlugin.js</h1>\n<p>uncommenting this should let you play with the news feed adaptor.  </p>\n<p>Unfortunately the login is also not working. To import your friends you will need to have two tabs open, one logged into Facebook, and the other using the Facebook Tiddlywiki import. You can ignore the prompts.  </p>\n<h3 id=\"sohowdoesitallwork\">So how does it all work?</h3>\n<p>So firstly I should thank Martin Budden who I have been constantly asking for help recently. He is responsible for creating the original adaptors and helping me get them started.  </p>\n<p>In order to use this code you will need to become familar with the process of cooking a TiddlyWiki. Hopefully this link will help you :  </p>\n<p>http://trac.tiddlywiki.org/wiki/ProductionProcess<br />\nIf not please let me know and we will try to get a better guide written.  </p>\n<p>You can see the files which make up this vertical from the rest.html.recipe. Below is quick summary of each of the important files :  </p>\n<p><strong>taggingContent.tiddler</strong>  </p>\n<p>Its used by the links to display all tiddlers tagged news.<br />\n**<br />\nfeeds/FacebookFriendsFeed.tiddler<br />\n**  </p>\n<p>Tells tiddlyWiki that there is a facebook friends feed available.  </p>\n<p><strong>adaptors/FacebookFriendsAdaptorPlugin.js</strong>  </p>\n<p>Tells TiddlyWiki how to deal with the information in the facebook friends feed. This is where most of the screen scraping is done.  </p>\n<p>I hope this gives enough info for people to start playing around. If there is any more detail required then please let me know via a comment. The source for this project can be found :  </p>\n<p>http://svn.tiddlywiki.org/Trunk/contributors/SimonMcManus/verticals/testFacebook/  </p>\n<p>enjoy.</p>",
        "tags": [
            "Facebook",
            "Facebook Application",
            "Osmosoft",
            "screenscraping",
            "SimonMcManus",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "facebook-want-to-take-developers-to-court!!",
        "title": "Facebook want to take Developers to court!!",
        "date": "2007-09-21",
        "markup": "<p>I just found this page :  </p>\n<p>http://www.nexdot.net/blog/2007/04/20/updating-facebook-status-using-php/  </p>\n<p>The guy worked out some code which lets you update your status from facebook.  </p>\n<pre><code class=\"js language-js\">It is with great disappointment that I must make this announcement. Facebook has requested that I remove the code from my website. They have also contacted everyone else who has found my code and publicly mentioned that they are using it. I originally did not comply, but my Facebook account was disabled and legal action was about to be pursued.\n\n\nI am saddened at this turn of events because the idea behind the code was to extend Facebook’s current service and fill in the gap that their API had. The API still does not provide a means for updating ones status.\n\n\nTo everyone who found my code useful, everyone who ported my code to various other languages, those who integrated my code into their projects, and those who believe in Federated Status, Thank You.\n\n\n\\- Christian Flickinger\n</code></pre>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "the-osmosoft-social-network-elgg",
        "title": "The Osmosoft Social Network - Elgg",
        "date": "2007-09-19",
        "markup": "<p>I have always found social networking sites fascinating, so when i got the opportunity to install <a href=\"http://elgg.org/\" title=\"Elgg\">Elgg</a> I jumped high in the air. So what is elgg? In its own words :  </p>\n<p>\"Elgg is an open source social platform based around choice, flexibility and openness: a system that firmly places individuals at the centre of their activities.\"  </p>\n<p>In BT we are keen to understand social networks. We love facebook, but we know it has some openness issues. I have previously asked the question what would happen if Facebook were to be open sourced? Well here we have an app that is open source and does facebook type stuff.  </p>\n<p>So at a first glance it looks nice : <a href=\"https://simonmcmanus.files.wordpress.com/2007/09/picture-5.png\" title=\"picture-5.png\"><img src=\"https://simonmcmanus.files.wordpress.com/2007/09/picture-5.png\" alt=\"picture-5.png\" /></a>  </p>\n<p>You get all the things you would expect, most notably RSS everywhere. The problem with social networking applications is that its very hard to evaluate them when you are the only user.  </p>\n<p>So <a href=\"http://osmosoft.servehttp.com/elgg/\" title=\"Join Elgg\">here</a> is the link if anyone would like to log in and try using Elgg,  </p>\n<p><a href=\"http://osmosoft.servehttp.com/elgg/\" title=\"http://osmosoft.servehttp.com/elgg/  \">http://osmosoft.servehttp.com/elgg/</a>  </p>\n<p>Please be aware that this is only an experimental instance for you and I to look around and play with. It is in no way a permanent installation. If you have any views on Elgg then please let me know.  </p>\n<p>There <a href=\"http://elgg.org/mod/plugins/\" title=\"wide selection of elgg plugins\">is a wide selection of Plugin,</a> if you would like me to make any particular ones available please let me know.  </p>\n<p>In the Osmosoft offices we recently tried Mash which Yahoos answer to Facebook. Its nice but is also another social network to add to a long list. I cant help but think that the next big thing will be something that allows you to centrally control your identity across all the social networks. Where facebook fits into that we will have to wait and see. Most facebook users are not even aware they cannot export their data. It will be interesting to see how peoples view of facebook changes as they realise their data is trapped inside.</p>",
        "tags": [
            "BT",
            "elgg",
            "Facebook",
            "Osmosoft",
            "simonmcmanusf",
            "social networking"
        ]
    },
    {
        "titleSlug": "the-most-simple-ajax-call-in-tiddlywiki",
        "title": "The most simple AJAX call in TiddlyWiki",
        "date": "2007-10-16",
        "markup": "<p>When tagged system config this script loads the content of the .php file and displays it as an alert.  </p>\n<pre><code class=\"js language-js\">//{{{\n</code></pre>\n<pre><code class=\"js language-js\">function callback(status,params,responseText,xhr)\n\n {\n\n alert(responseText);\n\n }\n</code></pre>\n<pre><code class=\"js language-js\">var a = doHttp('GET', 'http://127.0.0.1/cctw\\_tw/cctiddly/handle/index.php',null,null,null,null,callback);\n</code></pre>\n<pre><code class=\"js language-js\">//}}}\n</code></pre>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "get-your-friends-details-out-of-facebook",
        "title": "Get your friends details out of Facebook",
        "date": "2007-08-09",
        "markup": "<p>The below code outputs a HTML table showing all of your facebook friends and their details.&nbsp; You will need to include the code on a PHP server where you have already registered your application.  </p>\n<p>This code is far from finished, but provides a very good starting point because it shows how you can access each of the variables.  </p>\n<pre><code class=\"js language-js\">&lt;?php\n</code></pre>\n<pre><code class=\"js language-js\">require\\_once 'facebook.php';\n</code></pre>\n<pre><code class=\"js language-js\">$friends = $facebook-&gt;api\\_client-&gt;friends\\_get();\n</code></pre>\n<pre><code class=\"js language-js\">echo '&lt;table border=1&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">foreach($friends as $friend)\n</code></pre>\n<pre><code class=\"js language-js\">{\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;tr&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; $name = $facebook-&gt;api\\_client-&gt;users\\_getInfo($friend,'name, pic\\_small, birthday, sex, hometown\\_location, meeting\\_sex, meeting\\_for, affiliations, relationship\\_status, significant\\_other\\_id, political, current\\_location, activities, interests, music, tv, about\\_me, work\\_history, education\\_history, status');\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo \"&lt;img src='\".str\\_replace('/http', '', str\\_replace('.jpg/','', $name\\[0\\]\\[pic\\_small\\])).\"'/&gt;\";\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[name\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[birthday\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[sex\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[hometown\\_location\\]\\[city\\].', ';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[hometown\\_location\\]\\[state\\].', ';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[hometown\\_location\\]\\[country\\].', ';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[meeting\\_sex\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[meeting\\_for\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">//&amp;nbsp;&amp;nbsp;&amp;nbsp; echo var\\_dump($name\\[0\\]\\[affiliations\\]);\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; foreach ($name\\[0\\]\\[affiliations\\] as $aff)\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; {\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;ul&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; foreach ($aff as $aff\\_det)\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;li&gt;'.$aff\\_det.'&lt;/li&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/ul&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; }\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[relationship\\_status\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[significant\\_other\\_id\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[political\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;ul&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; foreach ($name\\[0\\]\\[current\\_location\\] as $aff)\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;li&gt;'.$aff.'&lt;/li&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/ul&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; //echo $name\\[0\\]\\[current\\_location\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[activities\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[interests\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[music\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[tv\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[about\\_me\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[work\\_history\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo ' &lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; foreach ($name\\[0\\]\\[education\\_history\\] as $aff)\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; {\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;ul&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; foreach ($aff as $aff\\_det)\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; {\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;li&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo arrayToXML($aff\\_det);\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/li&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/ul&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; }\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; //echo $name\\[0\\]\\[education\\_history\\];\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; echo '&lt;/td&gt;&lt;td&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; if ($name\\[0\\]\\[status\\]\\[time\\]!=0)\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo $name\\[0\\]\\[status\\]\\[message\\].' - '.date(\"Y/m/d\", $name\\[0\\]\\[status\\]\\[time\\]).'&lt;/td&gt;&lt;/tr&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">}\n</code></pre>\n<pre><code class=\"js language-js\">echo '&lt;/table&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">?&gt;\n</code></pre>",
        "tags": [
            "API",
            "BT",
            "facebok",
            "Facebook",
            "Facebook API",
            "Facebook Application",
            "facebook in the enterprise",
            "fbml",
            "Osmosoft",
            "Phones",
            "PHP",
            "simon mcmanus",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "getting-your-friends-out-of-facebook",
        "title": "Getting your friends out of facebook",
        "date": "2007-08-08",
        "markup": "<pre><code class=\"js language-js\">The code below lists the names of all your facebook contacts.  Quite handy....\n</code></pre>\n<pre><code class=\"js language-js\">&lt;?\n</code></pre>\n<pre><code class=\"js language-js\">$friends = $facebook-&gt;api\\_client-&gt;friends\\_get();\n</code></pre>\n<pre><code class=\"js language-js\">foreach($friends as $friend)\n</code></pre>\n<pre><code class=\"js language-js\">{\n</code></pre>\n<pre><code class=\"js language-js\">    $name = $facebook-&gt;api\\_client-&gt;users\\_getInfo($friend,'name, status, hometown\\_location.city');\n</code></pre>\n<pre><code class=\"js language-js\">    echo $name\\[0\\]\\[name\\].'&lt;br /&gt;';\n</code></pre>\n<pre><code class=\"js language-js\">}\n</code></pre>\n<pre><code class=\"js language-js\">?&gt;\n</code></pre>\n<p>Keep an eye on the blog to see how I evolve this script.</p>",
        "tags": [
            "API",
            "BT",
            "Facebook",
            "Osmosoft",
            "SimonMcManus",
            "web20"
        ]
    },
    {
        "titleSlug": "giving-tiddlywiki-a-restmysql-to-rest-in-php",
        "title": "Giving TiddlyWiki a rest......MYSQL to REST in PHP.",
        "date": "2007-09-25",
        "markup": "<p>As part of my server side TiddlyWiki work we are looking at building a REST interface where TiddlyWikis can store their tiddlers.&nbsp;&nbsp; I was doing some research into ways of providing a REST interface to MySQL datbases.  </p>\n<p>I found this great bit of code:  </p>\n<p>http://phprestsql.sourceforge.net/  </p>\n<p>You simply point the project at a database on your server and it provides a REST interface into your MySQL database. &nbsp; In order to get the code working you simply need to copy the folder into your working directory and change the phprestsql.ini file to reflect your settings.  </p>\n<p>One problem that I noticed was that the .htaccess files is lost when the file is zipped.&nbsp; To get the app working you simple need to create a .htaccess file in your working directory and copy the text below :  </p>\n<pre><code class=\"js language-js\">RewriteEngine On\n\nRewriteCond %{REQUEST\\_FILENAME} !-d\n\nRewriteCond %{REQUEST\\_FILENAME} !-f\n\n#RewriteRule ^.\\*$ index.php\n\nRewriteRule ^.\\*$ /rest/index.php\n</code></pre>\n<p>In this case the working directory was /rest/</p>",
        "tags": [
            "BT",
            "Osmosoft",
            "rest",
            "SimonMcManus",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "the-google-maps-api",
        "title": "The Google Maps API",
        "date": "2007-07-20",
        "markup": "<p>Now that we can find out the logitude and latitude of&nbsp; a persons mobile number (<a href=\"http://simonmcmanus.wordpress.com/2007/07/20/your-location-from-the-bt-sdk-web21c-in-google-maps/\" title=\"see this post\">see this post</a>) the next step is to get the Google API set up.&nbsp;&nbsp; This post talks you through setting up the Maps API (its very simple)  </p>\n<p>&nbsp;1 .. First of all you need to register for a google maps api account. You can do that <a href=\"http://www.google.com/apis/maps/signup.html\" title=\"here\">here</a>  </p>\n<p>2 ..&nbsp; Make sure that you specify a the folder that you file will actually be sitting in. (it wont work otherwise)  </p>\n<p>3 ..&nbsp; You then simply need to create a file in the folder specifed and then add the below code.  </p>\n<p>4 .. Note that you will need to change the \"YOURKEY\" value to your key.  </p>\n<p>_________________________  </p>\n<p>&nbsp;<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"  \n&nbsp; \"<a href=\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</a>\"><br />\n<html xmlns=\"<a href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</a>\"><br />\n&nbsp; <head><br />\n&nbsp;&nbsp;&nbsp; <script src=\"<a href=\"http://maps.google.com/maps?file=api&v=2&key=YOURKEY\">http://maps.google.com/maps?file=api&v=2&key=YOURKEY</a>\"  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"text/javascript\"></script>  </p>\n<p></head><br />\n&nbsp; <body onload=\"load()\" onunload=\"GUnload()\">  \n&nbsp;&nbsp;&nbsp; <p>  \n&nbsp;&nbsp;<script type=\"text/javascript\">&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;function load()  \n&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;&nbsp;if (GBrowserIsCompatible())  \n&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;&nbsp;&nbsp;var map = new GMap2(document.getElementById(\"map\"));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;&nbsp;&nbsp;var map = new GMap2(document.getElementById(\"map\"));  \n&nbsp;&nbsp;&nbsp;&nbsp;map.setCenter(new GLatLng(51.5052680969, -0.102480553091), 13);  \n&nbsp;&nbsp;&nbsp;&nbsp;map.openInfoWindow(map.getCenter(),  \n&nbsp;&nbsp;&nbsp;&nbsp;document.createTextNode(\"Simon is here \"));  \n&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;  \n&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;  \n&nbsp;&nbsp;</script>  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=\"style1\">BT SDK Location Service </span></p>  \n&nbsp;&nbsp;&nbsp; <div id=\"map\" style=\"width: 500px; height: 300px\"></div>  \n&nbsp; </body><br />\n</html>  </p>\n<p>_________________________  </p>\n<p>On the above application the script is current hard coded to show my current location (51.5052680969, -0.102480553091).&nbsp; Over the coming posts I will discuss how to integrate this fuctionality into the the <a href=\"http://simonmcmanus.wordpress.com/2007/07/20/your-location-from-the-bt-sdk-web21c-in-google-maps/\" title=\"BT SDK location example\">BT SDK location example</a></p>",
        "tags": [
            "API",
            "BT",
            "Google",
            "Google Maps"
        ]
    },
    {
        "titleSlug": "hacking-for-a-wii",
        "title": "Hacking for a Wii.",
        "date": "2007-09-24",
        "markup": "<p>Last Monday Osmosoft purchased its first games console, the Wii. One of the conditions of the office having a Wii was that we needed to do something cool (and not just play games) by the Friday.  </p>\n<p>What with TiddlyWiki's third year anniversary also being on the Friday it proved an interesting week.  </p>\n<p><img src=\"http://www.laternerdz.com/wp-content/uploads/2006/11/wii.jpg\" alt=\"a Wii\" />  </p>\n<p>So my first mission was to find some way of detecting movement from the Wii controllers, I have seen a number of demos showing the <a href=\"http://mike.verdone.ca/wiitomidi/\" title=\"wii controlling midi interface\">wii controlling a Midi interfaces</a> but my distinct lack of a midi interface proved a problem here.  </p>\n<p>I managed to find a number of apps which let me control my mac from the Wii controller <a href=\"http://wiibrew.org/index.php?title=List_of_Wii_Applications\" title=\"control aps from your wii controller\">here</a>. Eventually I found a site which provides example javascript code demonstrating how to read the Wii controller coordinates as variables!  </p>\n<p><a href=\"//hullbreachonline.com/wii/sdk.html\" title=\"javscript wii controller code\">Javascript Wii Controller Code</a>  </p>\n<p>Unfortunately you cannot detect false feedback on the controllers but we can we could access X, ,Y Distance and rotation co-ordinates from the controller when being viewed through Opera on the Wii (the code does not work when hooked up to the PC)  </p>\n<p>So at this point I had the idea to turn the code powering the wall demo into a navigation tool for <a href=\"http://tiddlywiki.com/\" title=\"TiddlyWiki\">TidllyWiki.</a>  </p>\n<p>We uesd<a href=\"http://tw.lewcid.org/\" title=\"Ful screen tw\"></a> <a href=\"http://tw.lewcid.org/\">Saqs</a> full screen TiddlyWiki plugin as the basis, when we had built the code to detect the left and right motion we then combined it with Saqs plugin (he was visiting the office for the TW anniversary which made he particularly accessible)  </p>\n<p>The end result can be loaded onto a Wii from the URL below:  </p>\n<p>http://osmosoft.servehttp.com/wii/a.htm  </p>\n<p>and you can watch video of the result on <a href=\"http://www.youtube.com/watch?v=8AX_uEzVVnU\">youtube.</a>  </p>\n<p>[youtube=http://www.youtube.com/watch?v=8AX_uEzVVnU]</p>",
        "tags": [
            "BT",
            "hack",
            "hacking",
            "Osmosoft",
            "osmososft",
            "tiddlywiki",
            "wii"
        ]
    },
    {
        "titleSlug": "steps-for-setting-up-the-sdk",
        "title": "Steps for setting up the SDK",
        "date": "2007-08-13",
        "markup": "<p>For a number of BT Osmosoft demos we have demonstrated how to make phone calls from within a TiddlyWiki, I thought i would provide a post which explains exactly what we did in order to set up the PHP side of these demos.  </p>\n<p>The demo I am refering to can be found at the following URL's:  </p>\n<p>- <a href=\"http://osmosoft.com/events/speedgeeking/\" title=\"Speed Geeking\">Speed Geeking</a>  </p>\n<p><strong>Step 1 ..</strong> You need a web server running :  </p>\n<ul>\n<li><p>PHP 5.2</p></li>\n<li><p>OpenSSL and SOAP PHP extensions</p></li>\n</ul>\n<p><strong>Step 2 ..</strong> Register for an account at <a href=\"http://sdk.bt.com/\">http://sdk.bt.com/</a></p>\n<p><strong>Step 3 ..</strong> Download the PHP source files: Downloads &gt; PH<strong>P</strong></p>\n<p><strong>Step 4 ..</strong> Upload the files to a folder on your web server.</p>\n<p><strong>Step 5 ..</strong>  Registering your applications…</p>\n<p>Note : Before you can use the SDK you will need to register an application (One registration covers all of your programs)</p>\n<p>You can register application at the URL below:</p>\n<p>https://sdk.bt.com/Default.aspx?TabId=127</p>\n<p>In order to run the certificate generation tool you may need  the latest version of “Java Runtime Environment (JRE)”  from <a href=\"http://java.sun.com/javase/downloads/index.jsp\">http://java.sun.com/javase/downloads/index.jsp</a> (you will receive an error when attempting to run the tool if you require this upgrade.)  </p>\n<p>When you use the tool 3 files will be generated on your desktop. (I called my app Umbrella)  </p>\n<p><em>APPLICATIONNAME_Sandbox_PrivateKey.pem</em>  </p>\n<p><em>APPLICATIONNAME_Sandbox_PublicKey.pem</em>  </p>\n<p><em>APPLICAIONNAME_Sandbox_SignedCert.pem</em>  </p>\n<p>Two of those files :  </p>\n<p><em>APPLICATIONNAME_Sandbox_PrivateKey.pem</em>  </p>\n<p><em>APPLICAIONNAME_Sandbox_SignedCert.pem</em>  </p>\n<p>Should then be place in a folder called keys (which you may need to create).</p>\n<p><strong>Step 6</strong> .. Open the common.php file which can be found in the folder:  </p>\n<p>\\examples\\common.php  </p>\n<p><strong>Step 7 ..</strong> Ensure that the application name is the same as the one specified when generating your certificate<strong>.</strong>  </p>\n<p><strong>Step 9 ..</strong>  Running the code.  If you have used the default installation settings go to and edit the file:  </p>\n<p>\\examples\\cmds\\makeCall.php  </p>\n<p>Change the variables for :  </p>\n<p>$calling = “tel:+44791″;  </p>\n<p>$called = “tel:+44791″;  </p>\n<p>You will need to modify these two lines so that they can receive an input from the URL, I would suggest changing these to:  </p>\n<p>$calling ='tel:'.$_REQUEST['callingParty'];  </p>\n<p>$called = 'tel:'.$_REQUEST['calledParty'] ;  </p>\n<p>You will need to ensure that the variable names are the same as the variables sent my TiddlyWiki.  </p>\n<p>Let me know if you have any problems.</p>",
        "tags": [
            "API",
            "BT",
            "generate key",
            "Osmosoft",
            "PHP",
            "SDK",
            "simon mcmanus",
            "SimonMcManus",
            "web service",
            "Web21C"
        ]
    },
    {
        "titleSlug": "social-network-aggregator",
        "title": "social network aggregator",
        "date": "2007-08-16",
        "markup": "<p>I recently read an article which pointed out that a social networks value is more affected by the connections made between contacts than by the number of people in the given network.  </p>\n<p>This is so true, Facebook does so well because its very easy to define connections. Despite its issues Facebook is also actually quite inclusive, It can pull in my Wordpress blog and there are a number of applications which can pull external data into Facebook. This is also one of Facebook big strengths, to be able to see an aggregated view of your networks recent activity from various sources on the internet.  </p>\n<p>Where Facebook really lets us down is by not letting us access that aggregated view through any platform other than Facebook. In Facebook you can also only import contacts from MSN. The ability to import from a number of sources (one of which being facebook) Will make a real difference to a Facebook for the enterprise.  </p>\n<p>To start of with I would like to import my contacts from  </p>\n<ul>\n<li><p>Facebook</p></li>\n<li><p>Internal MSN</p></li>\n<li><p>External MSN</p></li>\n<li><p>My Mobile Phone</p></li>\n<li><p>Microsoft Communicator</p></li>\n</ul>\n<p>By pulling in the data from so many sources we are going to be able to show more relationships and possibly know more about the relationships. I would then want to store internet assets (blogs wikis) against a de-duplicated list of my contacts. In such a setup users would be encouraged to publish information onto public blogs.  </p>\n<p>I had lunch with Jon Lister today and we had an interesting discussion about the implications of actively encouraging a companies employees to blog about what they are working on. As John pointed out while you give away a small advantage by telling people what you are doing you also get to learn a great deal from the other peoples comments and feedback.</p>",
        "tags": [
            "aggregator",
            "BT",
            "contacts",
            "enterprise facebook",
            "Facebook",
            "msn",
            "Osmosoft",
            "simon mcmanus",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "a-simple-dhtml-phone",
        "title": "A Simple DHTML Phone",
        "date": "2007-07-24",
        "markup": "<p>I spent a while searching for this script only to realise it would be quicker to write it myself!  </p>\n<p>This simple application uses javascript and HTML to allow the user to enter a number using the keypad and then let them make a call. This example can link to makeCall.php in the examples directory if you wish to make calls.  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2007/07/phone_call.gif\" title=\"phone_call.gif\"><img src=\"https://simonmcmanus.files.wordpress.com/2007/07/phone_call.gif\" alt=\"phone_call.gif\" /></a>  </p>\n<p>Just copy the code into a HTML file in the root of the BT PHP directory and you should be in business.  </p>\n<p>Here is the code :  </p>\n<pre><code class=\"js language-js\">\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n</code></pre>\n<pre><code class=\"js language-js\"> &lt;script type=\"text/javascript\"&gt;\n\n\nfunction add(id)\n\n{ form1.number.value = form1.number.value + id ;\n\n if (id==\"C\")\n\n { form1.number.value = '';\n\n }\n\n}\n\nfunction pre\\_submit(a)\n\n{\n\n location.href=\"examples/makeCall.php?tel=\" + document.form1.number.value;\n\n}\n\n\n&lt;/script&gt;\n\n   &lt;form name=\"form1\" id='form1' method=\"post\" action=\"\"&gt;\n\n       &lt;table width=\"154\" border=\"0\"&gt;\n\n            &lt;tr&gt;\n\n              &lt;td colspan=\"4\"&gt;&lt;input name=\"number\" type=\"text\"    onkypress=\"check\\_type('d');\"  id=\"number\"&gt;&lt;/td&gt;\n\n            &lt;/tr&gt;\n\n            &lt;tr&gt;\n\n              &lt;td width=\"24\"&gt;&lt;/td&gt;\n\n              &lt;td width=\"24\"&gt;&lt;input name=\"1\"   type=\"button\" onClick=\"add(this.value);\" id=\"1\" value=\"1\"&gt;&lt;/td&gt;\n\n              &lt;td width=\"28\"&gt;&lt;input name=\"2\" type=\"button\" onClick=\"add(this.value);\"  id=\"2\" value=\"2\"&gt;&lt;/td&gt;\n\n              &lt;td width=\"52\"&gt;&lt;input name=\"3\" type=\"button\" onClick=\"add(this.value);\"  id=\"3\" value=\"3\"&gt;&lt;/td&gt;\n\n            &lt;/tr&gt;\n\n            &lt;tr&gt;\n\n              &lt;td&gt; &lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"4\" type=\"button\" onClick=\"add(this.value);\"  id=\"4\" value=\"4\"&gt;&lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"5\" type=\"button\" onClick=\"add(this.value);\"  id=\"5\" value=\"5\"&gt;&lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"6\" type=\"button\" onClick=\"add(this.value);\"  id=\"6\" value=\"6\"&gt;&lt;/td&gt;\n\n            &lt;/tr&gt;\n\n            &lt;tr&gt;\n\n              &lt;td&gt; &lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"7\" type=\"button\" onClick=\"add(this.value);\"  id=\"7\" value=\"7\"&gt;&lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"8\" type=\"button\" onClick=\"add(this.value);\"  id=\"8\" value=\"8\"&gt;&lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"9\" type=\"button\" onClick=\"add(this.value);\"  id=\"9\" value=\"9\"&gt;&lt;/td&gt;\n\n            &lt;/tr&gt;\n\n            &lt;tr&gt;\n\n              &lt;td&gt;&lt;p&gt; &lt;/p&gt;              &lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"+\" type=\"button\" onClick=\"add(this.value);\"  id=\"+\" value=\"+\"&gt;&lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"0\" type=\"button\" onClick=\"add(this.value);\"  id=\"0\" value=\"0\"&gt;&lt;/td&gt;\n\n              &lt;td&gt;&lt;input name=\"Clear\" type=\"button\" onClick=\"add(this.value);\"  id=\"Clear\" value=\"C\"&gt;&lt;/td&gt;\n\n            &lt;/tr&gt;\n\n            &lt;tr&gt;\n\n             &lt;td colspan=\"4\"&gt;\n\n      &lt;div align=\"center\"&gt;\n\n        &lt;p&gt;            &lt;/p&gt;\n\n        &lt;p&gt;\n\n          &lt;input name=\"Make Call\" type=\"button\" onClick=\"pre\\_submit(document.form1.number.value)\"  id=\"Make Call\" value=\"Make Call\"&gt;\n\n              &lt;/p&gt;\n\n      &lt;/div&gt;&lt;/td&gt;\n\n            &lt;/tr&gt;\n\n     &lt;/table&gt;\n\n&lt;/form&gt;\n</code></pre>",
        "tags": [
            "BT",
            "DHTML",
            "Javascript",
            "Phone",
            "SDK",
            "Web21C"
        ]
    },
    {
        "titleSlug": "server-side-tiddlywikis",
        "title": "Server Side TiddlyWikis",
        "date": "2007-09-14",
        "markup": "<p>This post is a work in progress trying to summarize the different server side tiddlywikis.  </p>\n<p>the existence of a database is not being seen as an advantage or disadvantage at this point. This is a work in progress but if you see any glaring omissions then please comment or send me a mail. Thanks.  </p>\n<p><a href=\"http://tiddlyhome.bidix.info/\" title=\"TiddlyHome\"><strong>TiddlyHome</strong></a>  </p>\n<p>The main fetaures are :  </p>\n<ul>\n<li><p>BSD open source license</p></li>\n<li><p>written in PHP, no database</p></li>\n<li><p>Based on UploadPlugin</p></li>\n<li><p>All User management in .htpasswd</p></li>\n<li><p>All control access in .htaccess</p></li>\n<li><p>All admin tasks from a dedicated TiddlyWiki</p></li>\n<li><p>User Options and Site Options accessible from TiddlyWiki</p></li>\n<li><p>and much more …</p></li>\n</ul>\n<p>The next step will be :  </p>\n<ul>\n<li>GroupAuthoring support</li>\n</ul>\n<p><strong>database back end</strong> : no  </p>\n<p><strong>multi user</strong> : functionality already present - UI could be improved.  </p>\n<p><strong>multi instance</strong> :functionality already present - UI could be improved.  </p>\n<p><strong>Tiddlywiki Upgrade</strong> : ? currently using TW 2.2.5  </p>\n<p><strong>Strengths</strong> : Makes good use of native apache functionality  </p>\n<p><strong>Weaknesses</strong> : The UI requires work. Still in the Beta stages.  </p>\n<p><a href=\"http://patrickcurry.com/tiddly/\" title=\"PHPTiddlyWiki\"><strong>PHPTiddlyWiki</strong></a>  </p>\n<p><strong>database back end</strong> : yes  </p>\n<p><strong>multi user</strong> : yes  </p>\n<p><strong>multi instance</strong> : would require work store the tiddlers in relation to a TiddlyWiki instance.  </p>\n<p><strong>Tiddlywiki Upgrade</strong> :Javascript code is stored in two php files. tiddly1 and tiddly2.  </p>\n<p><strong>Strengths</strong> :simple install and config.  </p>\n<p><strong>Weaknesses</strong> : No login, code not being maintained.  </p>\n<p><a href=\"http://www.minitiddlyserver.com/\" title=\"Mini Tiddly Server\"><strong>Mini Tiddly Server</strong></a>  </p>\n<p><strong>New Features</strong>  </p>\n<ul>\n<li><p>compatible with TW2.2 and older.  </p>\n<ul>\n<li>autodetect TW core and save accordingly</li></ul></li>\n\n\n\n<li><p>unicode fix, solves issues with international characters.</p></li>\n<li><p>improved error handling and recovery.</p></li>\n<li><p>various bug fixes to the saving routine.</p></li>\n<li><p>improved download link. Just click it!</p></li>\n<li><p><a href=\"http://tiddlysnip.com/\" title=\"//tiddlysnip.com\">TiddlySnip</a> support.</p></li>\n</ul>\n<p><strong>database back end :</strong> no  </p>\n<p><strong>multi user :</strong> no  </p>\n<p><strong>Tiddlywiki Upgrade:</strong> store in a single file on the server.  </p>\n<p><strong>Strengths :</strong> password authentication present  </p>\n<p><strong>Weaknesses:&nbsp;</strong> install process has some issues.&nbsp;  </p>\n<p><a href=\"http://cctiddly.sourceforge.net/\" title=\"ccTiddlyWiki\"><strong>ccTiddlyWiki</strong></a>  </p>\n<p><strong>database back end</strong> : yes  </p>\n<p><strong>multi user</strong> : yes - there can be many users for the same workspace.  </p>\n<p><strong>multi instance</strong> : would require work store the tiddlers in relation to a TiddlyWiki instance.  </p>\n<p><strong>Tiddlywiki Upgrade</strong> : js code stored on the server.  </p>\n<p><strong>Strengths</strong> : password authentication already present but the may not be relevant as SiteMinder will be used for login.  </p>\n<p><strong>Weaknesses</strong> : code not being maintained. Possible problem with login variables being stored in server variables, could be a problem with multiple instances running on the same server.</p>",
        "tags": [
            "CCTiddlyWiki",
            "Osmosoft",
            "PHPTiddlyWiki",
            "ServerSide TiddlyWiki",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "server-side-tiddlywikis-and-plugins",
        "title": "Server Side TiddlyWikis and Plugins",
        "date": "2007-09-06",
        "markup": "<p>I am having lots of problems adding plugins to the cc and PHP TiddlyWiki.&nbsp;&nbsp;&nbsp; Going to have to look and some kind of encoding so that this it is easier to customize the server side instances of Tiddlywiki.&nbsp;&nbsp; I will keep you posted……</p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "proposed-cctiddly-database-structure",
        "title": "Proposed ccTiddly Database Structure",
        "date": "2007-11-02",
        "markup": "<p>Over the past few week I have been working with cool cold, Martin and <a href=\"http://jermolene.wordpress.com/2=J11qqnKPIVNXkJ6uFLCadA\">Jeremy</a> to decide where we want to take ccTiddly going forward. The idea is to make ccTiddly completely self service without removing any functionality. In order to do this we need to store what is currently stored in the /config/default.php file and store it in a single database.  </p>\n<p>This is the currently the proposed design. Any comments and suggestions are welcome. I will be publishing more about road map for this project very soon. <a href=\"https://simonmcmanus.files.wordpress.com/2007/11/erm_summary.jpg\" title=\"erm_summary.jpg\"><img src=\"https://simonmcmanus.files.wordpress.com/2007/11/erm_summary.jpg\" alt=\"erm_summary.jpg\" /></a>  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2007/11/erm1.jpg\" title=\"erm1.jpg\"><img src=\"https://simonmcmanus.files.wordpress.com/2007/11/erm1.jpg\" alt=\"erm1.jpg\" /></a>  </p>\n<pre><code class=\"js language-js\">\n</code></pre>\n<p>--  </p>\n<p>Note : I have included the original ccTiddly tables in the below SQL.&nbsp; They will be removed but are in place so that we can test as we build  </p>\n<p>[sourcecode language='sql']  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `admin_of_instance`<br />\n--  </p>\n<p>CREATE TABLE `admin_of_instance` (<br />\n`user_username` varchar(50) NOT NULL,<br />\n`instance_name` varchar(100) NOT NULL<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `group_membership`<br />\n--  </p>\n<p>CREATE TABLE `group_membership` (<br />\n`user_username` varchar(50) NOT NULL,<br />\n`groupname` varchar(50) NOT NULL<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `instance`<br />\n--  </p>\n<p>CREATE TABLE `instance` (<br />\n`name` varchar(100) NOT NULL,<br />\n`lang` varchar(10) NOT NULL,<br />\n`keep_revision` int(1) NOT NULL,<br />\n`require_login` int(1) NOT NULL,<br />\n`cookie_expire` int(1) NOT NULL,<br />\n`tag_tiddler_with_modifier` int(1) NOT NULL,<br />\n`char_set` varchar(10) NOT NULL,<br />\n`hashseed` varchar(50) NOT NULL,<br />\n`debug` int(1) NOT NULL,<br />\n`status` varchar(10) NOT NULL,<br />\nPRIMARY KEY (`name`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `privileges`<br />\n--  </p>\n<p>CREATE TABLE `privileges` (<br />\n`id` int(11) NOT NULL auto_increment,<br />\n`read` int(1) NOT NULL,<br />\n`insert` int(1) NOT NULL,<br />\n`edit` int(1) NOT NULL,<br />\n`delete` int(1) NOT NULL,<br />\n`group_membership_groupname` varchar(50) NOT NULL,<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `tiddler`<br />\n--  </p>\n<p>CREATE TABLE `tiddler` (<br />\n`id` int(11) NOT NULL auto_increment,<br />\n`instance_name` varchar(100) NOT NULL,<br />\n`title` text NOT NULL,<br />\n`body` mediumtext NOT NULL,<br />\n`fields` text NOT NULL,<br />\n`tags` text NOT NULL,<br />\n`modifier` varchar(50) NOT NULL,<br />\n`creator` varchar(50) NOT NULL,<br />\n`modified` varchar(12) NOT NULL,<br />\n`created` varchar(12) NOT NULL,<br />\n`version` int(11) NOT NULL,<br />\n`epoch_modified` int(15) NOT NULL,<br />\n`epoch_created` int(15) NOT NULL,<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `tiddler_revision`<br />\n--  </p>\n<p>CREATE TABLE `tiddler_revision` (<br />\n`id` int(11) NOT NULL auto_increment,<br />\n`title` text NOT NULL,<br />\n`body` text NOT NULL,<br />\n`fields` text NOT NULL,<br />\n`modified` varchar(12) NOT NULL,<br />\n`modifier` varchar(50) NOT NULL,<br />\n`revision` int(11) NOT NULL,<br />\n`tags` text NOT NULL,<br />\n`tiddler_id` int(11) NOT NULL,<br />\n`epoch_modified` int(15) NOT NULL,<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `tiddly_wiki_entry`<br />\n--  </p>\n<p>CREATE TABLE `tiddly_wiki_entry` (<br />\n`id` int(11) NOT NULL auto_increment,<br />\n`title` varchar(255) NOT NULL default '',<br />\n`body` text NOT NULL,<br />\n`fields` text NOT NULL,<br />\n`modified` varchar(128) NOT NULL default '',<br />\n`created` varchar(128) NOT NULL default '',<br />\n`modifier` varchar(255) NOT NULL default '',<br />\n`creator` varchar(255) NOT NULL default '',<br />\n`version` int(11) NOT NULL default '0',<br />\n`tags` varchar(255) NOT NULL default '',<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `tiddly_wiki_entry_version`<br />\n--  </p>\n<p>CREATE TABLE `tiddly_wiki_entry_version` (<br />\n`id` int(11) NOT NULL auto_increment,<br />\n`title` varchar(255) NOT NULL default '',<br />\n`body` text NOT NULL,<br />\n`fields` text NOT NULL,<br />\n`modified` varchar(128) NOT NULL default '',<br />\n`modifier` varchar(255) NOT NULL default '',<br />\n`version` int(11) NOT NULL default '0',<br />\n`tags` varchar(255) NOT NULL default '',<br />\n`oid` int(11) NOT NULL,<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `user`<br />\n--  </p>\n<p>CREATE TABLE `user` (<br />\n`username` varchar(50) NOT NULL,<br />\n`password` varchar(50) NOT NULL,<br />\n`empoyee_id` varchar(200) NOT NULL,<br />\nPRIMARY KEY (`username`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<pre><code class=\"js language-js\">\n</code></pre>\n<p>[/sourcecode]</p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "pondering-pagerank-and-tinyurls",
        "title": "Pondering PageRank and TinyURLs",
        "date": "2007-12-10",
        "markup": "<p>A couple of weeks ago I posted a link on <a href=\"http://www.twitter.com\" title=\"twitter\">Twitter</a> and noticed it was automatically converted into a tinyurl (<a href=\"http://tinyurl.com\" title=\"http://tinyurl.com\">http://tinyurl.com</a>). The URL was not too long to fit into my 140 characters.  </p>\n<p>This got me thinking, I have never felt the need to use tinyurls, but are they actually doing damage?  </p>\n<p>How do tinyurls effect PageRank? Should hosts fear a duplicate content penalty? especially if tinyurl.com has a higher initial page rank than your own site?  </p>\n<p>Has anyone seen googles algorithm deal with these URLs in a good or bad way? Are all these great links in twitter going to waste? Surely not?  </p>\n<p>There is some debate about this topic here :  </p>\n<p><a href=\"http://www.thescripts.com/forum/thread96963.html\" title=\"http://www.thescripts.com/forum/thread96963.html\">http://www.thescripts.com/forum/thread96963.html</a>  </p>\n<p>I would be interested in any views on this.</p>",
        "tags": [
            "analytics",
            "Google",
            "pagerank",
            "SimonMcManus",
            "tinyurl",
            "twitter",
            "urls"
        ]
    },
    {
        "titleSlug": "is-facebook-the-answer-to-everything-facebook-for-the-enterprise",
        "title": "Is Facebook the answer to everything? - Facebook for the Enterprise?",
        "date": "2007-08-08",
        "markup": "<p>I ask the question simply because it seems to come up as a potential solution to everything these days.  </p>\n<p>While I have been making many technical posts about Facebook I have held back on opinions and insights while a massive debate seems to be raging around me.  </p>\n<p>So why are people so excited about Facebook? <a href=\"http://confusedofcalcutta.com/\" title=\"JP\">JP</a> has made a number of Facebook related blog entries, I found two of his comments insightful.  </p>\n<p>\"It is rooted in physical relationship rather than just electronic. The interactions are therefore a lot richer.\"  </p>\n<p>\"And this phenomenon, of a physical community being extended and enriched by electronic ties, is something that is a lot closer to real life.\"  </p>\n<p>These two quotes are quite fundamental to why Facebook is so successful, it is not the the apps or even the platform, but rather the brilliant way you can find, communicate and interact with past and current (real life) friends.  </p>\n<p>Before I go any further three bits of history for you:  </p>\n<p>1 .. I initially started investigating the Facebook API to build an application which lets Facebook users make phone calls and send texts using the <a href=\"http://web21C.bt.com\" title=\"BT Web21C SDK\">BT Web21C SDK.</a>  </p>\n<p>2 .. Before I started with BT Osmosoft I made MyPages which was an enterprise version of Facebook / MySpace inside the BT firewall.  </p>\n<p>3 .. In MyPages users could create blogs, wikis, spreadsheets, file and photo shares. Employees could show their relation with other staff and each user had a recent activity news feed. I had big plans for group permissions and the news feeds.  </p>\n<p>In a big enterprise there is always going to be thousands of relationships and interactions which are generally ignored by enterprise software. Clearly the ability to map and search these relationships has benefits. If I am unable to contact Phil, being able to browse and search his work contacts could be very helpful.  </p>\n<p>So should these relationships be stored on an internal system such as MyPages? or maybe an out of the box Facebook behind your firewall? Or maybe just build a Facebook app? If you are asking yourself these questions you should think about the points below :  </p>\n<p><strong>Security / Ownership</strong><br />\n- Lots of things like security and data protection to think about. You may want the system to tell you when your confidential documents have been read or updated. Clearly some legal and security issues to work through.  </p>\n<p><strong>Integrations with other Systems</strong>  </p>\n<p>- One of the most useful concepts in Facebook that the enterprise can really take advantage of is the news feed. I talk about this more later but the ability to show useful updates in a configurable news feeds could really help reduce email traffic and improve workflow.  </p>\n<p><strong>Control of Data</strong>  </p>\n<p>- How much control do you want over the data?  </p>\n<p><strong>Search</strong><br />\n- Something like MyPages has real value when you can search the intranet for a topic and find someone in the company who has been blogging about it. Especially when you can then explore their network of contacts. This is would be very tricky to implement securely on facebook.com  </p>\n<p><strong>Self Promotion</strong><br />\n- MyPages provided each member of staff with their own home page, they were encouraged to use this as an online CV to explain what they had done, were doing and wished to do in the future. <a href=\"http://jermolene.wordpress.com/\" title=\"Jeremy Ruston\">Jeremy Ruston</a> (my boss) often asks the question, what intranet content should we not share externaly, and why not? This is a interesting point, and particularly in relation to this issue.  </p>\n<p>My mind runs away with ideas of allowing customers to pick a team based on public profile pages with reviews from previous client. This of course takes opening up the enterprise to a whole new level and you would need to ensure at least two things : 1 : Does your company have good quality staff / teams and the resource to provide good customer service?. 2 : Can your company hold onto its best staff even with their success being public knowledge?  </p>\n<p><strong>Functionality</strong><br />\n- if we are talking about a Facebook box then we would see some new enterprisish apps but I suspect their functionality would still be restricted by the Facebook API.  </p>\n<p><strong>Enforced Sign Up</strong><br />\n- Can you imagine being told you have to sign up to Facebook at work? its an extreme but I suspect that people would have dramatically different relationships with Facebook.  </p>\n<p><strong>Fewer Distraction?</strong><br />\n-I'm not going to go as far as to say that I waste my time on Facebook but it has been known to distract me from work in the past, regular Facebook users may not notice work related news feed items between all the \"noise\" generated by their non-work related updates.  </p>\n<p>There are also some other considerations when building a business app for Facebook:  </p>\n<p>I don't want to step into the open vs closed debate but lets be honest, Facebooks API is restrictive and I suspect that the desire to maintain consistency and control has reduced peoples ability innovate. A browse through the Facebook application directory really doesn't return a wide array of useful apps, mostly annoying games. I would love to integrate my dhtml phone into Facebook but as all javascript is removed Iwould have to hack my way round, leaving my app liable to be broken as soon as facebook figure out what im doing. I know the guys at Facebook have just recently provided some javascript access but I have not tested it yet.  </p>\n<p>this is another big point, can you really have an app thats going to become business critical reliant on systems over which you have no control or contracted support? APIs can be changed with little or in some cases no notice.  </p>\n<p>Each Facebook application is limited in the number of posting it can make to a user's news feed on a given day (currently 10 I believe), to me this is yet another problem, I still need to see my 11th news feed item of the day. If a system was being heavily used I would expect up to 20-30 per day, this would of course be configurable:  </p>\n<p>update my news feed when I receive an email.<br />\nupdate my news feed on the activity of these people:<br />\nUpdate my news feed on activity to do with these project:<br />\nupdate my news feed when these document (collaborative wikis and blogs) are changed<br />\nupdate my news feed when something is tagged ________<br />\nupdate my news feed when someone searches for __________<br />\ndon't update my news feed when….<br />\nThis brings me to a fascinating search engine optimization (SEO) type article: <a href=\"http://www.insidefacebook.com/2007/07/16/inside-facebook-nfo-is-the-new-seo/\" title=\"http://www.insidefacebook.com/2007/07/16/inside-facebook-nfo-is-the-new-seo/\">Inside Facebook, NFO (News Feed Optimization) is the new SEO</a>  </p>\n<p>Do you really want to be in a situation where the business has to pay for your items to appear at the top of peoples news feed?  </p>\n<p>So one possible answer to this is for Facebook build an enterprise/professional tab, allowing people to differentiate between their work and personal lives while still showing the inevitable connections. It would also need to include more useful business related applications such as blogs, wikis and file stores. This could create a whole new market for enterprise Facebook apps.  </p>\n<p>Since playing around with the API my relationship has changed with Facebook, my initial reaction after logging is now to goto my profile page to test my application, My news feed is very much a constantly changing blur and I am rarely able to keep up. I'm not sure if it is the 'noise' or maybe seeing some of the problems with the API has taken away the sleek near perfect view I had of Facebook when I was just a user. The reason I raise the slightly obscure point is because I think it will be interesting to see how people would relate to Facebook should it be required of them at work.  </p>\n<p>So I have probably asked a lot more questions that I have answered in the above post so I should attempt to conclude in some way shape or form. So, Facebook while it deserves all the attention its gets it is just another internet craze. While its closed source its only the people at Facebook who can really provide the functionality we require. In a lot of cases I suspect they won't. As with any craze it will pass, people will find a new killer web app and we will be trying to work out how we can maximize our effectiveness by using it. We have to understand and respect this. Any solution that relies on Facebook will probably become redundant when net users find another killer social networking site. We need to be thinking about applications which can be completely independent and just pump their data in and out of the latest social networking tools.  </p>\n<p>lastly - thank you for reading this far, as I have written this post my views have actually evolved. I hope you found this thought provoking.  </p>\n<p>comments welcome.</p>",
        "tags": [
            "API",
            "Blog",
            "BT",
            "enterprise facebook",
            "facebok",
            "Facebook",
            "Facebook API",
            "Facebook Application",
            "facebook in the enterprise",
            "fbml",
            "Mash Up",
            "mypages",
            "Osmosoft",
            "PHP",
            "SimonMcManus",
            "social networking",
            "web20",
            "WordPress"
        ]
    },
    {
        "titleSlug": "latest-database-design-for-cctiddly",
        "title": "Latest Database design for ccTiddly",
        "date": "2007-11-09",
        "markup": "<p><a href=\"https://simonmcmanus.files.wordpress.com/2007/11/erm2.jpg\" title=\"erm2.jpg\"><img src=\"https://simonmcmanus.files.wordpress.com/2007/11/erm2.jpg\" alt=\"erm2.jpg\" /></a>  </p>\n<p>and the sql :<br />\n[sourcecode language='sql']<br />\n-- phpMyAdmin SQL Dump<br />\n-- version 2.10.1<br />\n-- http://www.phpmyadmin.net<br />\n--<br />\n-- Host: localhost<br />\n-- Generation Time: Nov 09, 2007 at 01:32 PM<br />\n-- Server version: 5.0.41<br />\n-- PHP Version: 5.2.2  </p>\n<p>SET SQL_MODE=\"NO_AUTO_VALUE_ON_ZERO\";  </p>\n<p>--<br />\n-- Database: `permissions`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `admin_of_instance`<br />\n--  </p>\n<p>CREATE TABLE `admin_of_instance` (<br />\n`user_id` varchar(255) NOT NULL,<br />\n`instance_name` varchar(100) NOT NULL<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>--<br />\n-- Dumping data for table `admin_of_instance`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `group`<br />\n--  </p>\n<p>CREATE TABLE `group` (<br />\n`name` varchar(50) NOT NULL,<br />\n`desc` mediumtext NOT NULL<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>--<br />\n-- Dumping data for table `group`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `group_membership`<br />\n--  </p>\n<p>CREATE TABLE `group_membership` (<br />\n`user_id` varchar(255) NOT NULL,<br />\n`group_name` varchar(50) NOT NULL<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>--<br />\n-- Dumping data for table `group_membership`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `instance`<br />\n--  </p>\n<p>CREATE TABLE `instance` (<br />\n`name` varchar(100) NOT NULL,<br />\n`lang` varchar(10) NOT NULL,<br />\n`keep_revision` int(1) NOT NULL,<br />\n`require_login` int(1) NOT NULL,<br />\n`session_expire` int(10) NOT NULL,<br />\n`tag_tiddler_with_modifier` int(1) NOT NULL,<br />\n`char_set` varchar(10) NOT NULL,<br />\n`hashseed` varchar(50) NOT NULL,<br />\n`debug` int(1) NOT NULL,<br />\n`status` varchar(10) NOT NULL,<br />\n`tiddlywiki_type` varchar(30) NOT NULL,<br />\n`default_anonymous_perm` varchar(4) NOT NULL,<br />\n`default_user_perm` varchar(4) NOT NULL,<br />\n`rss_group` varchar(50) NOT NULL,<br />\n`markup_group` varchar(50) NOT NULL,<br />\nPRIMARY KEY (`name`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>--<br />\n-- Dumping data for table `instance`<br />\n--  </p>\n<p>INSERT INTO `instance` (`name`, `lang`, `keep_revision`, `require_login`, `session_expire`, `tag_tiddler_with_modifier`, `char_set`, `hashseed`, `debug`, `status`, `tiddlywiki_type`, `default_anonymous_perm`, `default_user_perm`, `rss_group`, `markup_group`) VALUES<br />\n('permissions', 'en', 1, 0, 0, 0, 'utf8', '', 0, '', 'TiddlyWiki', '', '', '', '');  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `login_session`<br />\n--  </p>\n<p>CREATE TABLE `login_session` (<br />\n`user_id` varchar(255) NOT NULL,<br />\n`session_token` varchar(150) NOT NULL COMMENT 'username+password+time',<br />\n`expire` int(20) NOT NULL,<br />\n`ip` varchar(15) NOT NULL<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>--<br />\n-- Dumping data for table `login_session`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `permissions`<br />\n--  </p>\n<p>CREATE TABLE `permissions` (<br />\n`read` int(1) NOT NULL,<br />\n`insert` int(1) NOT NULL,<br />\n`edit` int(1) NOT NULL,<br />\n`delete` int(1) NOT NULL,<br />\n`group_name` varchar(50) NOT NULL,<br />\n`instance_name` varchar(100) NOT NULL<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>--<br />\n-- Dumping data for table `permissions`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `tiddler`<br />\n--  </p>\n<p>CREATE TABLE `tiddler` (<br />\n`id` int(11) NOT NULL auto_increment,<br />\n`instance_name` varchar(100) NOT NULL,<br />\n`title` text NOT NULL,<br />\n`body` mediumtext NOT NULL,<br />\n`fields` text NOT NULL,<br />\n`tags` text NOT NULL,<br />\n`modifier` varchar(255) NOT NULL,<br />\n`creator` varchar(255) NOT NULL,<br />\n`modified` varchar(12) NOT NULL,<br />\n`created` varchar(12) NOT NULL,<br />\n`version` int(11) NOT NULL,<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;  </p>\n<p>--<br />\n-- Dumping data for table `tiddler`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `tiddler_revision`<br />\n--  </p>\n<p>CREATE TABLE `tiddler_revision` (<br />\n`id` int(11) NOT NULL auto_increment,<br />\n`title` text NOT NULL,<br />\n`body` mediumtext NOT NULL,<br />\n`fields` text NOT NULL,<br />\n`modified` varchar(12) NOT NULL,<br />\n`modifier` varchar(255) NOT NULL,<br />\n`revision` int(11) NOT NULL,<br />\n`tags` text NOT NULL,<br />\n`tiddler_id` int(11) NOT NULL,<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;  </p>\n<p>--<br />\n-- Dumping data for table `tiddler_revision`<br />\n--  </p>\n<p>-- --------------------------------------------------------  </p>\n<p>--<br />\n-- Table structure for table `user`<br />\n--  </p>\n<p>CREATE TABLE `user` (<br />\n`id` varchar(255) NOT NULL,<br />\n`password` varchar(50) NOT NULL,<br />\n`short_name` varchar(50) NOT NULL,<br />\n`long_name` varchar(100) NOT NULL,<br />\nPRIMARY KEY (`id`)<br />\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;  </p>\n<p>--<br />\n-- Dumping data for table `user`<br />\n--  </p>\n<p>[/sourcecode]</p>",
        "tags": [
            "BT",
            "ccTiddly",
            "database-design",
            "mysql",
            "Osmosoft",
            "phpmyadmin",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "phpweb21c-certificate-generation-(using-the-wizard)",
        "title": "PHPWeb21C Certificate Generation (Using the Wizard)",
        "date": "2007-07-23",
        "markup": "<p>This is just a quick post to let you know about generating certificate when using PHPWeb21C.  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2007/07/sdk_cert.gif\" title=\"sdk_cert.gif\"><img src=\"https://simonmcmanus.files.wordpress.com/2007/07/sdk_cert.gif\" alt=\"sdk_cert.gif\" /></a>  </p>\n<p>For option three you should choose sandbox for the environment(to enable your 10 free calls each day)&nbsp;&nbsp;and then choose PEM (PKCS#8).&nbsp; If you choose the PFX option you will need to get apache to talk to your windows certificate store.</p>",
        "tags": [
            "Certificate Generation",
            "PHP",
            "Web21C"
        ]
    },
    {
        "titleSlug": "output-text-into-a-tiddler-without-changing-the-tiddler-macro",
        "title": "Output text into a Tiddler without changing the tiddler - macro",
        "date": "2007-10-17",
        "markup": "<p>This macro combines the last two posts with a new bit of code from Phil Hawksworth. The code lets you output text into the a tiddler using a macro, without actually changing the contents of the tiddler.  </p>\n<p>So the end result is that output from the .php file is shown in any macro which contains <<ccConfig>&gt; but the tiddler content is not actually change.  </p>\n<p>The aim here is to be able to manage users and your config for ccTiddly from Tiddlers.  </p>\n<pre><code class=\"js language-js\">/\\*\\*\\*\n</code></pre>\n<pre><code class=\"js language-js\">|''Name:''|ccConfig|\n</code></pre>\n<pre><code class=\"js language-js\">|''Description:''|Lets you configure ccTiddly|\n</code></pre>\n<pre><code class=\"js language-js\">|''Version:''|2.0.3|\n</code></pre>\n<pre><code class=\"js language-js\">|''Date:''|Sep 22, 2006|\n</code></pre>\n<pre><code class=\"js language-js\">|''Author:''|SimonMcManus|\n</code></pre>\n<pre><code class=\"js language-js\">|''License:''|\\[\\[BSD open source license\\]\\]|\n</code></pre>\n<pre><code class=\"js language-js\">|''~CoreVersion:''|2.1.0|\n</code></pre>\n<pre><code class=\"js language-js\">|''Browser:''|Firefox 1.0.4+; Firefox 1.5; InternetExplorer 6.0|\n</code></pre>\n<pre><code class=\"js language-js\">\\*\\*\\*/\n</code></pre>\n<pre><code class=\"js language-js\">//{{{\n</code></pre>\n<pre><code class=\"js language-js\">    config.macros.ccConfig = {\n</code></pre>\n<pre><code class=\"js language-js\">    handler: function(place,macroName,params,wikifier,paramString,tiddler) {\n</code></pre>\n<pre><code class=\"js language-js\">    function callback(status,params,responseText,xhr)\n</code></pre>\n<pre><code class=\"js language-js\">    {\n</code></pre>\n<pre><code class=\"js language-js\">            createTiddlyLink(place,responseText,true);\n</code></pre>\n<pre><code class=\"js language-js\">    }\n</code></pre>\n<pre><code class=\"js language-js\">    params = {};\n</code></pre>\n<pre><code class=\"js language-js\">    params.title =tiddler.title;\n</code></pre>\n<pre><code class=\"js language-js\">    var a = doHttp('GET', 'http://127.0.0.1/cctw\\_tw/cctiddly/handle/index.php',null,null,null,null,callback,params);\n</code></pre>\n<pre><code class=\"js language-js\">}\n</code></pre>\n<pre><code class=\"js language-js\">}\n</code></pre>\n<pre><code class=\"js language-js\">//}}}\n</code></pre>",
        "tags": [
            "macro",
            "Osmosoft",
            "tiddler",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "macro-template-for-tiddlywiki",
        "title": "Macro template for TiddlyWiki",
        "date": "2007-10-16",
        "markup": "<p>This code provides a template for creating Macros. When tagged systemConfig this macro can be called &nbsp;using <<exampleplugin>&gt;  </p>\n<pre><code class=\"js language-js\">/\\*\\*\\*\n</code></pre>\n<pre><code class=\"js language-js\">|''Name:''|ExamplePlugin|\n</code></pre>\n<pre><code class=\"js language-js\">|''Description:''|To demonstrate how to write TiddlyWiki plugins|\n</code></pre>\n<pre><code class=\"js language-js\">|''Version:''|2.0.3|\n</code></pre>\n<pre><code class=\"js language-js\">|''Date:''|Sep 22, 2006|\n</code></pre>\n<pre><code class=\"js language-js\">|''Source:''|http://www.tiddlywiki.com/#ExamplePlugin|\n</code></pre>\n<pre><code class=\"js language-js\">|''Author:''|SimonMcManus|\n</code></pre>\n<pre><code class=\"js language-js\">|''License:''|\\[\\[BSD open source license\\]\\]|\n</code></pre>\n<pre><code class=\"js language-js\">|''~CoreVersion:''|2.1.0|\n</code></pre>\n<pre><code class=\"js language-js\">|''Browser:''|Firefox 1.0.4+; Firefox 1.5; InternetExplorer 6.0|\n</code></pre>\n<pre><code class=\"js language-js\">\\*\\*\\*/\n</code></pre>\n<pre><code class=\"js language-js\">//{{{\n</code></pre>\n<pre><code class=\"js language-js\">config.macros.exampleplugin = {\n</code></pre>\n<pre><code class=\"js language-js\">handler: function() {\n</code></pre>\n<pre><code class=\"js language-js\">alert('here');\n</code></pre>\n<pre><code class=\"js language-js\">}\n</code></pre>\n<pre><code class=\"js language-js\">}\n</code></pre>\n<pre><code class=\"js language-js\">//}}}\n</code></pre>",
        "tags": [
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "open-source-facebook",
        "title": "Open Source Facebook?",
        "date": "2007-09-14",
        "markup": "<p>So approximately 15 hours after the issue was acknowledged it was then fixed with in two hours. one of the good reasons for going open source is that you're not waiting for a corporation to admit they have a bug in their software.  </p>\n<p>This leaves me with the question - what would happen if Facebook were open sourced?  </p>\n<p>Lets be in no doubt that Facebook is a great concept, but one that can and will be replicated. so what would happen? Well i am no expert but I do like to speculate. Even with their source code in the public, Facebook still have their domain and data as massive assets.  </p>\n<p>I am opening a big can of worms here, one that I could talk about all day long. I will try to come back to this topic over the coming weeks.</p>",
        "tags": [
            false
        ]
    },
    {
        "titleSlug": "mashing-up-bt-web21c-location-service-with-google-maps",
        "title": "Mashing Up BT Web21c Location service with Google Maps",
        "date": "2007-07-20",
        "markup": "<p>This example combines the&nbsp; two post&nbsp; (<a href=\"http://simonmcmanus.wordpress.com/2007/07/20/the-google-maps-api/\" title=\"google Maps API\">Google Maps API</a>&nbsp;and <a href=\"http://simonmcmanus.wordpress.com/2007/07/20/your-location-from-the-bt-sdk-web21c-in-google-maps/\" title=\"your location from the sdk.\">your location from the sdk</a>)to automatically look up a phones location and then map it straight to a google map box.  </p>\n<pre><code class=\"js language-js\">The code is below, please note you should only need to change the four variables at the top of the code :\n</code></pre>\n<pre><code class=\"js language-js\">&lt;?php \n\nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../../web21c.php'); \n\nrequire\\_once(dirname(\\_\\_FILE\\_\\_) . '/../common.php');\n</code></pre>\n<pre><code class=\"js language-js\">//&amp;nbsp; command to locate a mobile deviice \n\n//&amp;nbsp; - set these to sensible values\n</code></pre>\n<pre><code class=\"js language-js\">$deviceId = 'tel:+PHONENUMBER'; \n\n$username = [USERNAME@MAIL.COM](mailto:USERNAME@MAIL.COM); \n\n$password = \"YOUR PASSWORD\"; \n\n$googleAPIKey = \"YOUR GOOGLE API KEY\";\n</code></pre>\n<pre><code class=\"js language-js\">$web21c = new Web21c($applicationName, $environment);\n</code></pre>\n<pre><code class=\"js language-js\">// login as a user \n\n$wla = $web21c-&gt;WhiteLabelAuthentication(); \n\n$wla-&gt;login($username, $password);\n</code></pre>\n<pre><code class=\"js language-js\">&amp;nbsp;//&amp;nbsp; locate mobile \n\n$location = $web21c-&gt;Location(); \n\n$location-&gt;web21cUser = $wla-&gt;web21cUser;\n</code></pre>\n<pre><code class=\"js language-js\">try \n\n{ \n\n&amp;nbsp;$r = $location-&gt;getGeoLocation($deviceId); \n\n} \n\ncatch (Web21cPermissionDeniedException $e) \n\n{ \n\n&amp;nbsp;print \"requesting device owner's permission to be located ..n\"; \n\n&amp;nbsp;print \"try again later when the owner may have respondedn\"; \n\n&amp;nbsp;$access = $web21c-&gt;LocationPermission(); \n\n&amp;nbsp;$access-&gt;web21cUser = $wla-&gt;web21cUser; \n\n&amp;nbsp;$access-&gt;requestPermission($deviceId); \n\n}\n</code></pre>\n<pre><code class=\"js language-js\">// var\\_dump($r-&gt;geoLocation);\n</code></pre>\n<pre><code class=\"js language-js\">echo 'Longitude : '.$r-&gt;geoLocation-&gt;longitude. '&lt;br /&gt;'; \n\necho 'Latitude : '.$r-&gt;geoLocation-&gt;latitude. '&lt;br /&gt;'; \n\necho \"Click below to see the location of mobile number \".$deviceId.\"&lt;br /&gt;\"; \n\necho \"&lt;a href='http://maps.google.com?q=\".$r-&gt;geoLocation-&gt;latitude.\",%20\".$r-&gt;geoLocation-&gt;longitude.\"'&gt;Google Maps&lt;/a&gt; \"; \n\n//echo 'start : '.$r-&gt;getGeoLocation()-&gt;getLongitude(); \n\n?&gt; \n\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \n\n&amp;nbsp; \"[http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd](http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd)\"&gt; \n\n&lt;html xmlns=\"[http://www.w3.org/1999/xhtml](http://www.w3.org/1999/xhtml)\"&gt; \n\n&amp;nbsp; &lt;head&gt; \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;script src=\"[http://maps.google.com/maps?file=api&amp;v=2&amp;key=&lt;?=$googleAPIKey](http://maps.google.com/maps?file=api&amp;v=2&amp;key=&lt;?=$googleAPIKey)?&gt;\" \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n<pre><code class=\"js language-js\">&lt;/head&gt; \n\n&amp;nbsp; &lt;body onload=\"load()\" onunload=\"GUnload()\"&gt; \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;p&gt; \n\n&amp;nbsp;&amp;nbsp;&lt;script type=\"text/javascript\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;&amp;nbsp;function load() \n\n&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;if (GBrowserIsCompatible()) \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var map = new GMap2(document.getElementById(\"map\"));&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var map = new GMap2(document.getElementById(\"map\")); \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map.setCenter(new GLatLng(&lt;?=$r-&gt;geoLocation-&gt;latitude?&gt;, &lt;?=$r-&gt;geoLocation-&gt;longitude?&gt;), 13); \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map.openInfoWindow(map.getCenter(), \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;document.createTextNode(\"Simon is here \")); \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp; }&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;&amp;nbsp; \n\n&amp;nbsp;&amp;nbsp;&lt;/script&gt; \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class=\"style1\"&gt;BT SDK Location Service &lt;/span&gt;&lt;/p&gt; \n\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;div id=\"map\" style=\"width: 500px; height: 300px\"&gt;&lt;/div&gt; \n\n&amp;nbsp; &lt;/body&gt; \n\n&lt;/html&gt; \n\n&amp;nbsp;\n</code></pre>",
        "tags": [
            "BT",
            "Google Maps",
            "location",
            "location service",
            "Mash Up",
            "Web21C"
        ]
    },
    {
        "titleSlug": "mime-types-in-for-server-side-tiddlywikis-download-a-html-file-from-a-link",
        "title": "MIME Types in for Server Side TiddlyWikis - Download a HTML file from a link",
        "date": "2007-11-21",
        "markup": "<p>One of the things we like about TiddlySpot is the way that it immediately provides the save as dialog box when you click the download link. For a demo at the UC Hot House we needed to do something similar. Here is what I did it. If any one knows of a better way to achieve the same goal please let me know.  </p>\n<p>With PHP its nice and easy to return a different MIME type. This can be done using one line of code :  </p>\n<p>header(\"Content-Type: application/zip zip\");  </p>\n<p>There a many different MIME types available, Wikipedia provides a summary of some of the more relevant types at :  </p>\n<p><a href=\"http://en.wikipedia.org/wiki/Internet_media_type\" title=\"http://en.wikipedia.org/wiki/Internet_media_type\">http://en.wikipedia.org/wiki/Internet_media_type</a>  </p>\n<p>Setting the MIME type to HTML simple loads the webpage into the browser becuase it knows how to display html files. There were two ways to produce the save dialog box, firstly the above example. By telling the browser to expect a Zip file it immediately returns the save as box. I was not overly happy with this because it was not a zip file and the dialog box informed the user they were going to be downloading a PC ZIP Achive :  </p>\n<p><img src=\"https://simonmcmanus.files.wordpress.com/2007/11/picture-2.png\" alt=\"picture-2.png\" /></p>\n<p>After some googling I discovered that browsers will return the save as dialog for any file formats that they do not understand. So I changed the MIME type to :  </p>\n<p>header(\"Content-Type: application/zisdfsdfpsdf zisdfp\");  </p>\n<p>and got the same except it was defaulting to saying it was saving a .php file in the save dialog box.  </p>\n<p>This of course only returns an empty file: To make it save the tiddlywiki file I then added :<br />\n[sourcecode language='php']  </p>\n<p>header(\"Pragma: public\");<br />\nheader(\"Expires: 0\");<br />\nheader(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");<br />\nheader(\"Cache-Control: public\");<br />\nheader(\"Content-Description: File Transfer\");<br />\nheader(\"Content-Type: application/sdfzip zipsdfsdf\");  </p>\n<p>$file = @fopen('index.html',\"rb\");<br />\nif ($file) {<br />\nwhile(!feof($file)) {<br />\nprint(fread($file, 1024*8));<br />\nflush();<br />\nif (connection_status()!=0) {<br />\n@fclose($file);<br />\ndie();<br />\n}<br />\n}<br />\n@fclose($file);<br />\n}  </p>\n<p>[/sourcecode]<br />\nThe fact that it was saving a PHP file was a problem. This was actually very simple to resolve :I created a .htaccess file in the folder containing the above code and entered :  </p>\n<p>AddType application/x-httpd-php .htm<br />\nAddType application/x-httpd-php .html  </p>\n<p>This means that any .html and .htm files will now be processed by the PHP engine. The final step it to change the filename of the file containing the above PHP code so that it is a HTML file.  </p>\n<p>The end result is the file should prompt you to save a HTML from one click.</p>",
        "tags": [
            "ccTiddly",
            "HTML",
            "MIME",
            "Osmosoft",
            "ServerSide",
            "SimonMcManus",
            "TiddlySpot"
        ]
    },
    {
        "titleSlug": "cctiddly-2x-an-overview",
        "title": "ccTiddly 2.x - An Overview",
        "date": "2007-11-26",
        "markup": "<p>Why are we doing this?<br />\nWe've now got a couple of user groups within BT using ccTiddly. Their feedback is driving a wave of improvements that I'm working on with CoolCold, the man who originally created ccTiddly. The areas we've been looking at are:  </p>\n<p>Self-service Workspace Creation<br />\nThe new version of ccTiddly will allows users to create their own ccTiddly workspaces, which is a (more or less) a complete independent wiki with it's own security permissions.  </p>\n<p>Reusable Master Workspaces<br />\nccTiddly 2.x introduces the concept of master workspaces.&nbsp; A \"master workspace\" allows a set of tiddlers to be packaged up and included in several different workspaces. This allows common content such as themes to be shared between workspaces. Because the links are dynamic, it is also possible to change a tiddler from a master workspace and have the change automatically appear in workspaces that use that master.  </p>\n<p>User Management<br />\nThe new version of ccTiddly will have new user management and security that allows permissions to be set on a per-workspace basis for individual users and groups.&nbsp; Although we're currently working with a custom user database, I've got experimental support for both LDAP and OpenID.  </p>\n<p>Image and Attachment Support<br />\nUsers will be able to upload images and other attachments to a workspace .  </p>\n<p>Import Support<br />\nUsers will also be able to upload a standalone TiddlyWiki file so that it can be imported into a ccTiddly workspace.  </p>\n<p>Personal Tiddlers<br />\nUsers will be able to create custom personal tiddlers which will persist across all workspaces they access on a server, allowing advanced users to be able to have settings applied consistently across all their workspaces  </p>\n<p>Over the coming few weeks I will be making the above happen and providing you details about each of these sections on my blog.</p>",
        "tags": [
            "ccTiddly",
            "Osmosoft",
            "ServerSide TiddlyWiki",
            "SimonMcManus",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "sizlate",
        "title": "Sizlate",
        "date": "2011-11-22",
        "markup": "<p>Over the past year I have been experimenting with <a href=\"http://nodejs.org/\">Node.js</a>. Its been a pretty interesting journey and I have learned a great deal.  </p>\n<p>One of my more interesting experiments has been <a href=\"https://github.com/simonmcmanus/sizlate/\">Sizlate</a>.  </p>\n<p>On projects at work I often find myself doing things like this:  </p>\n<pre><code class=\"js language-js\">domNode.find('div.class').html('&lt;b&gt;INSERT SOME STUFF HERE&lt;/b&gt;'); \n</code></pre>\n<p>It's a really powerful way to populate HTML. What I really like is that there is no need to add any crazy syntax into my templates. &nbsp;Templates are just valid HTML and the point of insertion is specified by the jQuery selector.  </p>\n<p>From the developers point of view this is really simple, it does however introduce problems when Javascript is not turned on. I found myself wondering how this technique might be transferred onto the server.  </p>\n<p>After some experimentation I came up with <a href=\"https://github.com/simonmcmanus/sizlate/\">Sizlate</a>. A HTML templating engine for Express.js.  </p>\n<p>Its pretty easy to get jQuery running on Node.js but I decided that &nbsp;jQuery wasn't &nbsp;a good fit for my use case. &nbsp;<a href=\"http://sizzlejs.com/\" title=\"sizzle\">Sizzle</a> is the selector engine used by jQuery, I&nbsp;decided&nbsp;to investigate using Sizzle to provide the selector functionality. It turned out that this works quite nicely using the J<a href=\"https://github.com/tmpvar/jsdom\">SDOM</a> project.  </p>\n<p>To use Sizlate you simple need to register it as your templating engine:  </p>\n<pre><code class=\"js language-js\">var sizlate = require('sizlate');&amp;nbsp;\napp.register('.html', sizlate);\n</code></pre>\n<p>And then just call res.render as you would normally with Express:  </p>\n<pre><code class=\"js language-js\">res.render('template.html', &amp;nbsp;{ selectors: { 'a': 'hi there' } });\n</code></pre>\n<p>That's the most basic example. On github I have provided an&nbsp;<a href=\"https://github.com/simonmcmanus/sizlate/tree/master/examples\">example</a> of &nbsp;<a href=\"https://github.com/simonmcmanus/sizlate/tree/master/examples/object\">passing sizlate an object</a> allowing more complex data structures to be used. There is also an <a href=\"https://github.com/simonmcmanus/sizlate/tree/master/examples/partial\">example using partials</a>.  </p>\n<p>At the moment Sizlate only works on the serverside but it should be quite easy to get it working in the browser.  </p>\n<p>Feel free to have a play and let me know if you have any feedback.  </p>\n<p>Sizlate is available as a NPM package and can be installed using the command:  </p>\n<pre><code class=\"js language-js\">NPM install sizlate\n</code></pre>\n<p>For more details please read the <a href=\"https://github.com/simonmcmanus/sizlate\">readme on github.com.</a></p>",
        "tags": [
            "osmososft"
        ]
    },
    {
        "titleSlug": "3d-transforms-with-css3",
        "title": "3D Transforms with CSS3",
        "date": "2011-01-05",
        "markup": "<p>Over Christmas I started moving <a href=\"http://simonmcmanus.com\" title=\"Simon McManus homepage\">simonmcmanus.com</a> over to <a href=\"http://nodejs.org/\">node.js</a> making some tweaks to the CSS as I went. I wanted to examine the z-index of my page so decided to investigate CSS3 3D transformations. I won't be launching the new <a href=\"http://simonmcmanus.com\">simonmcmanus.com</a> for a while but here is what I found out about 3D CSS transformations.  </p>\n<p>The following examples only work on the latest webkit browsers (Chrome and Safari). In Chrome you will need to enable \"GPU Accelerated Compositing\". Goto <a href=\"flags\">about:flags</a> turn on \"GPU Accelerated Compositing\"&nbsp;and then restart Chrome.  </p>\n<p>I started off with one of <a href=\"http://www.paulrhayes.com/experiments/perspective/\">Paul Hayes early experiments</a> which later progressed into his&nbsp;<a href=\"http://www.paulrhayes.com/2009-07/animated-css3-cube-interface-using-3d-transforms/\">animated cube demo.</a>  </p>\n<p><a href=\"http://simonmcmanus.com/stuff/css3/rotate/standalone/index.html\">Here is what I came up with.</a>  </p>\n<p>Screenshots:  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2011/01/1.png\"><img src=\"https://simonmcmanus.files.wordpress.com/2011/01/1.png?w=300\" alt=\"\" title=\"1\" /></a>  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2011/01/2.png\"><img src=\"https://simonmcmanus.files.wordpress.com/2011/01/2.png?w=300\" alt=\"\" title=\"2\" /></a>  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2011/01/3.png\"><img src=\"https://simonmcmanus.files.wordpress.com/2011/01/3.png?w=300\" alt=\"\" title=\"3\" /></a>  </p>\n<p>This is what I did:  </p>\n<h3 id=\"step1createthe3dspace\">Step 1: Create the 3d space</h3>\n<p>Wrap two divs round the elements to appear in 3D :  </p>\n<pre><code class=\"js language-js\">&lt;div id=\"perspective\"&gt;\n\n   &lt;div id=\"rotator\"&gt;\n\n      &lt;!--original HTML in here--&gt;\n\n   &lt;/div&gt;\n\n&lt;/div&gt;\n</code></pre>\n<p>Set the following CSS:  </p>\n<pre><code class=\"js language-js\">.perspective { -webkit-perspective: 2400; }\n.three-d { -webkit-transform-style: preserve-3d; }\n</code></pre>\n<h3 id=\"step2settingtranslatez\">Step 2: Setting translateZ</h3>\n<p>Set translateZ for each item to appear 3D:  </p>\n<pre><code class=\"js language-js\">-webkit-transform: translateZ(3em);\n</code></pre>\n<p>In my example I set it for the following items:  </p>\n<pre><code class=\"js language-js\">h1,\n.item,\n.twitter-bird.sign,\n.vcard{\n   -webkit-transform: translateZ(3em); \n}\n</code></pre>\n<p>In this case each z-index will be represented by 3ems.  </p>\n<h3 id=\"step3makingitmove\">Step 3: Making it move</h3>\n<p>Define the animation :  </p>\n<pre><code class=\"js language-js\">#rotator {\n   -webkit-animation-name: rotate;\n   -webkit-animation-duration: 15s; \n   -webkit-animation-iteration-count: infinite;\n}\n</code></pre>\n<p>And then specify the steps of the animation:  </p>\n<pre><code class=\"js language-js\">@-webkit-keyframes rotate {\n    0% {\n       -webkit-transform:rotateY(0deg); \n   }\n   5% {\n      -webkit-transform:rotateY(0deg);\n   }\n   30% {\n      -webkit-transform:rotateY(-40deg);\n   }\n   50% {\n      -webkit-transform:rotateY(85deg);\n   }\n   55% {\n      -webkit-transform:rotateY(85deg);\n   }\n   90% {\n      -webkit-transform:rotateY(0deg);\n   } \n}\n</code></pre>\n<p><a href=\"http://simonmcmanus.com/stuff/css3/rotate/standalone/1.html\" title=\"rotate demo\">demo here.</a>  </p>\n<h3 id=\"step4nbspperspective\">Step 4 .. &nbsp;Perspective</h3>\n<p>To give a zoom effect I created a second animation:  </p>\n<pre><code class=\"js language-js\">#perspective { \n   -webkit-animation-name: perspective;\n   -webkit-animation-duration: 15s;\n   -webkit-animation-iteration-count: infinite;\n }\n</code></pre>\n<pre><code class=\"js language-js\">@-webkit-keyframes perspective {\n   0% {\n      -webkit-perspective: 2400;\n   }\n   5% {\n      -webkit-perspective:2400;\n   }\n   30% {\n      -webkit-perspective:650;\n   }\n   50% {\n      -webkit-perspective:2000;\n   }\n   55% {\n      -webkit-perspective:2000;\n   }\n   70% {\n      -webkit-perspective: 2400;\n   }  \n}\n</code></pre>\n<p><a href=\"http://simonmcmanus.com/stuff/css3/rotate/standalone/index.html\" title=\"final demo\">final demo</a>  </p>\n<p>That's what I've done so far. Comments and modifications welcomed.  </p>\n<p>Happy New Year</p>",
        "tags": [
            "3d",
            "CSS3",
            "css3"
        ]
    },
    {
        "titleSlug": "avoid-being-civil-serfed",
        "title": "Avoid being Civil Serfed",
        "date": "2008-03-11",
        "markup": "<p>So it seems the Civil Serf case is causing something of a stir.</p>\n<p>For me the bigger issue here is how we can encourage management to let people blog about their work. Particularly people working for Government. I suspect governance/regulation can only provide minimal assistance on this matter, what we need is common sense.  </p>\n<p>Personally I have never read our companies' blogging policy, I think we have one, but there are some pretty common sense rules which have managed to keep me in work so far :  </p>\n<p>- Be authentic and honest.<br />\n- Don't bitch - If you must then make sure you back it up with evidence.<br />\n- Justify what you say.<br />\n- Make your Mum proud, my mum doesn't understand most of the stuff I blog about but I like to think she would be proud if she did understand.<br />\n- Learn from your mistakes.<br />\n- keep secrets secret.<br />\n- Talk to your boss about what you're blogging and why.<br />\n- Abstract away from events/people/companies/parties and talk about anonymous examples.<br />\n- Don't be afraid of being wrong (this one does depend a bit more on your employer)<br />\n- Make it clear that the views expressed are yours and not that of your past, present or any future employer.  </p>\n<p>I am quite fortunate in that <a href=\"http://jermolene.wordpress.com/\" title=\"Jeremy Ruston\">my boss</a> and <a href=\"http://confusedofcalcutta.com/\">his boss</a> are bloggers with a good understanding of the blogosphere.  </p>\n<p>There is one key thing here, the people at the top need to realise that the \"one voice culture\" cannot be maintained. There will always be a variety of opinions in any organisation; it's often the variety in opinions that result in great innovations. To stop your customers talking to your staff about ideas does not seem to make sense. When you take it a step further and stop politicians/civil servants talking to voters it makes even less sense. My understanding of the role of civil servants is quite limited, but I suspect we need to encourage them to debate topics in public using the same level of professionalism that they would use when discussing any given issue with their boss. <a href=\"http://whitehallwebby.wordpress.com/disclaimer/\">Jeremy's Whitehall Webb blog</a> provides a nice example.  </p>\n<p>I was pleased to see that <a href=\"http://www.tom-watson.co.uk/\">MP Tom Watson</a> seems to get the idea; let's hope his colleagues see the benefits of his conversations and start their own.  </p>\n<p>Exclusively positive blogs don't work. People can tell when a PR machine has been working away on a statement, even when it's cunningly disguised as a blog post - the tone of voice lacks authenticity. You need to let people talk about negatives, but at the same time empower them to turn them into positives.  </p>\n<p>Most complaints start with a small fault which only becomes a complaint through poor communication/management.  </p>\n<p>Forming tight guidelines on what you can and cannot say is never going to encourage people to blog, quite the opposite - and besides, lengthy policy documents never get read.  </p>\n<p>Just to confirm, The Guardian quotes me as saying that I believe that Civil Serf has been sacked. I actually said \"If the civil servant has been identified and sacked it will be a real shame for the civil service\". In fact I suspect 'she' may have pulled the blog to avoid being sacked. It's mainly for this reason that I have not re-published the blog posts which google reader stored nicely for me.  </p>\n<p>Is/Was 'She' really an Asset?</p>\n<p>Well she started an inevitable conversation which is never a bad thing. Looking back over the Civil Serf posts I don't see any comments. I'm not sure if that's because they were never enabled or they have not been cached. I would like to have read over peoples reactions to the blog. If there was no ability to add comments the blog was effectively just a scratching post.  </p>\n<p>As for setting back Government 2.0…<a href=\"http://simonmcmanus.com/2007/12/12/bullshit-20/\">I'm no fan of terminology 2.0</a> <a href=\"http://simonmcmanus.com/2007/12/12/bullshit-20/\"></a>mainly because people seem to use such terms to describe things they don't understand or can't explain. I suspect we can learn a great deal about Government 2.0 and the issues that need to be tackled in order to make it a reality. Whatever that reality may be.  </p>\n<p>If you want to learn more about blogging in Corporates I can recommend reading <a href=\"http://www.amazon.com/Naked-Conversations-Changing-Businesses-Customers/dp/047174719X\">Naked Conversation</a> from <a href=\"http://scobleizer.com/\">Robert Scoble</a> and <a href=\"http://en.wikipedia.org/wiki/Shel_Israel\">Shel Israel.</a> Its a good read.</p>",
        "tags": [
            "bloggingpolicy",
            "civilserf",
            "nakedconversation",
            "osmososft"
        ]
    },
    {
        "titleSlug": "nokia-n95-stuff",
        "title": "nokia n95 stuff.",
        "date": "2008-01-23",
        "markup": "<p>This post is just a load of useful links and info about things you can do with the <a href=\"http://europe.nokia.com/A4323278\">Nokia n95.</a>  </p>\n<p>I was going to send it to a friend via email but it seemed worth turning into a blog post.  </p>\n<p><strong>Installation Tip :</strong> I have experienced some problems when trying to extract and install .zip files on the phone. If you do have this problem you can try unzipping them on your PC and then send the files one by one. The installation file is usually a .sis file.  </p>\n<p>A guide to setting up you nokia n95 to run gmail through the phones built in functions can be found at:  </p>\n<p><a href=\"http://www.knowyourmobile.com/nokia/nokian95/nokian95internet/2533/setting_up_email_on_the_nokia_n95.html\" title=\"setting up gmail on n95\">http://www.knowyourmobile.com/nokia/nokian95/nokian95internet/2533/setting_up_email_on_the_nokia_n95.html</a>  </p>\n<p>I don't actually use this method. Its set up but it doesn't seem to work with gmail very well. I believe a benefit of this technique is that you can attach files when sending emails.  </p>\n<p><a href=\"http://www.google.com/mobile/mail/index.html\" title=\"Google Mail Application\"><strong>Google Mail Application</strong></a>  </p>\n<p>I don't use this either. I just connect over the web and have a bookmark stored which is linked to from the main screen.  </p>\n<h2 id=\"otherapplications\">Other Applications :</h2>\n<p><a href=\"http://www.bysamir.fr/rotateme\" title=\"Rotate Me\"><strong>Rotate Me</strong></a>  </p>\n<p><strong>Auto rotation:</strong> when you turn your device, the screen automatically rotates.  </p>\n<p>Not played with this one too much yet.  </p>\n<p><a href=\"http://symbianblog.com/index.php/flipsilent/\" title=\"Flip Silent\"><strong>FlipSilent</strong></a>  </p>\n<p>[youtube=http://www.youtube.com/watch?v=KFxUTb8ik3k&amp;rel=1&amp;border=1]<br />\n<a href=\"http://mobile.divx.com/login\" title=\"DivX Mobile\"></a>  </p>\n<p><a href=\"http://mobile.divx.com/login\" title=\"DivX Mobile\"><strong>DivX</strong></a>  </p>\n<p>To play AVI files rather than just mp4s.  </p>\n<p><a href=\"http://www.niime.com/\" title=\"NiiMe\"><strong>NiiMe</strong></a>  </p>\n<p>[youtube=http://www.youtube.com/watch?v=A0lz35Boe_I&amp;rel=1&amp;border=1]<br />\n[youtube=http://www.youtube.com/watch?v=79xeREnZ_7Q&amp;rel=1&amp;border=1]  </p>\n<p>I am really looking forward to this being released for the mac.  </p>\n<p><strong><a href=\"http://www.symbian-freak.com/news/008/01/nokia_n95_magic_py_piwo.htm\" title=\"drink beer\">pyPiwo</a></strong>  </p>\n<p>drink beer from your n95.  </p>\n<p><img src=\"http://www.symbian-freak.com/images/news/08/01/beer01.jpg\" alt=\"\" />  </p>\n<p><strong><a href=\"http://www.symbian-freak.com/news/007/12/pypoziomica_freeware_level_tool.htm\" title=\"pyPoziomica Spirit Level tool\">pyPoziomica</a></strong>  </p>\n<p>Spirit level tool for the n95!  </p>\n<p><img src=\"http://www.symbian-freak.com/images/news/07/12/pypoziomica00.jpg\" alt=\"\" /><br />\n<a href=\"http://qrcode.kaywa.com/\"></a>  </p>\n<p><a href=\"http://qrcode.kaywa.com/\"><strong>QR Code Generator</strong></a>  </p>\n<p>You don't need to download any software, the n95 has a built in QR code reader, from this site you can generate QR codes to try on your phone.  </p>\n<p><img src=\"http://qrcode.kaywa.com/img.php?s=8&d=http%3A%2F%2Fsimonmcmanus.com\" alt=\"\" />  </p>\n<p><a href=\"http://mosh.nokia.com/content/3E1BD59369462687E040050AEE043609\"><strong>Dr. Jukka’s Inclinometer</strong></a>  </p>\n<p><a href=\"http://mosh.nokia.com/content/3E1BD59369462687E040050AEE043609\">Y-Inclinometer</a> by <a href=\"http://drjukka.com/\">Dr.Jukka</a> is an instrument for measuring angles of slope (or tilt), elevation or inclination of an object with respect to gravity . You have only to fix your phone and adjust it so that it is perfectly upright in your vehicle :)  </p>\n<p><strong>More apps and reviews :</strong>  </p>\n<p><a href=\"http://n95blog.com/25-must-have-applicatons-for-your-nokia-n95/\" title=\"apps list\">http://n95blog.com/25-must-have-applicatons-for-your-nokia-n95/</a>  </p>\n<p><a href=\"http://sjc-123.blogspot.com/2007/06/best-tips-and-tricks-for-nokia-n95.html\" title=\"tips and tricks for n95\">http://sjc-123.blogspot.com/2007/06/best-tips-and-tricks-for-nokia-n95.html</a>  </p>\n<p><a href=\"http://www.hd911.com/archives/114\" title=\"apps and reviews\">http://www.hd911.com/archives/114</a>  </p>\n<h2 id=\"runningawebserverfromthen95\">Running a Web Server from the N95</h2>\n<p><a href=\"http://mymobilesite.net/download/\" title=\"My Mobile Site\"><strong>Mobile Web Server</strong></a>  </p>\n<p>allows you to run a web server on the phone.  </p>\n<p><a href=\"http://wiki.opensource.nokia.com/projects/PAMP\" title=\"PAMP\">PAMP</a> - Personal Apache Mysql and PHP  </p>\n<p>I am yet to grasp the potential of everyone walking around with a web server in their pocket. <a href=\"http://www.tiddlywiki.org/wiki/CcTiddly\" title=\"ccTiddly\">ccTiddly</a> is nearly working on PAMP and I have been reading some interesting use cases. Notably a bar which pulls its music from everyones phones and can also project videos from peoples phones onto the walls.  </p>\n<p>I'm off to Brazil for two weeks but will post more about the potential of the n95&nbsp; running a web server when I get back.</p>",
        "tags": [
            "gmail",
            "n95",
            "n95 software",
            "nokia",
            "Osmosoft",
            "osmososft",
            "SimonMcManus"
        ]
    },
    {
        "titleSlug": "cctiddly-file-uploading",
        "title": "ccTiddly File Uploading",
        "date": "2008-03-20",
        "markup": "<p>Over the last couple of days I have been working on the ccUpload macro for <a href=\"http://www.tiddlywiki.org/wiki/CcTiddly\">ccTiddly</a>.&nbsp; This is a macro that will allow people to upload files to the ccTiddly server so that it can linked to and included in their TiddlyWikis.  </p>\n<p>The work was in part motivated by <a href=\"http://jaybyjayfresh.com/\">Jon's</a> requirement to post HTML files and strings to a end point where the file is then uploaded. This is a part of his <a href=\"http://jaybyjayfresh.com/2008/01/23/tiddlytemplating-using-tiddlywiki-to-create-webpages/\">template work</a> and some SEO work which will naturally fall out from it - that, however, is a completely different blog post.  </p>\n<p>We are getting to the stage where we have something functional to share and wanted to provide the opportunity for community feedback.  </p>\n<p>We're introducing three concepts for ccTiddly users; instances, workspaces and user areas.  </p>\n<p><strong>Instance</strong>: An area containing multiple workspaces.  </p>\n<p><strong>Workspace</strong>: An online area where an individual TiddlyWiki can be stored and maintained. The area can also contain files which have been uploaded by a workspace administrator.  </p>\n<p><strong>User area</strong>: An online area exclusively dedicated to the uploading of files by a single user. Each user has their own user area by default.  </p>\n<p>The macro enabling file upload does not require the page to refresh in order to upload additional files; instead it posts the form to a hidden iFrame for processing. At present, we're giving users the choice to upload their file to either their workspace or their user area. I am probably going to remove the ability to upload a file to a user area for sake of simplicity (although the code will still exist and can be used if needed).  </p>\n<p>I am yet to decide what convention I will use when assigning a user area directory to OpenID users. The following structure is not an option:<br />\nwiki.osomsosft.com/uploads/users/http://simonmcmanus.com  </p>\n<p>I would be interested to hear any suggestions/examples.  </p>\n<p>I have currently not implemented any security with ccTiddly.&nbsp; I am currently thinking that we will only allow people to upload files if they are the owner of the workspace; at the back end users will be able to upload files to their user space provided they are logged in.  </p>\n<p>Here are the screenshots showing the work so far….. feedback is welcomed.  </p>\n<p><img src=\"http://farm3.static.flickr.com/2042/2347575468_de9c5a584e.jpg?v=0\" alt=\"\" /><br />\n<img src=\"http://farm3.static.flickr.com/2130/2346744603_3a3697567b.jpg?v=0\" alt=\"\" />  </p>\n<p>You can either leave your comments against this blog post or leave them on the google groups page :  </p>\n<p><a href=\"http://groups.google.com/group/ccTiddly\">http://groups.google.com/group/ccTiddly</a>  </p>\n<p>We are also going to need an area where people can browse and manage their uploaded files. That will probably take the form of a separate macro (ccBrowse??) but I would be interested to hear from anyone who sees value in displaying the previously uploaded files underneath the upload functionality as the below sketch shows :  </p>\n<p><img src=\"http://farm3.static.flickr.com/2275/2346781123_dc056653bd.jpg?v=1206012805\" alt=\"\" />  </p>\n<p>Does this sound useful to anyone?  </p>\n<p>When I have formalised the upload API, I will document it on the <a href=\"http://tiddlywiki.org/wiki/CcTiddly\">ccTiddly</a> page on <a href=\"http://tiddlywiki.org/\">TiddlyWiki.org</a>. I hope to have this code released in the next week or two.</p>",
        "tags": [
            "ajax",
            "BT",
            "ccTiddly",
            "feedback",
            "osmososft",
            "seo"
        ]
    },
    {
        "titleSlug": "off-the-shelf-integration-in-enterprises",
        "title": "Off the Shelf Integration in Enterprises",
        "date": "2008-02-21",
        "markup": "<p>Two blog posts have got me thinking lately,  </p>\n<p>This from <a href=\"http://blog.whatfettle.com/2008/02/19/mashup-or-integration/\" title=\"PSD\">PSD</a> and this from <a href=\"http://confusedofcalcutta.com/2008/02/18/musing-about-enterprise-information-and-flow/\" title=\"JP and information flow in the enterprise\">JP</a>.  </p>\n<blockquote>\n  <p>The snapshot analogy led to a plethora of sins, to the way we designed databases, to the way we “inserted”, “amended” and “deleted” data. As we tried to force the snapshots to move around between systems, we hit DRM version 1. Enterprise Application Integration. Otherwise known as paying to bury our data, paying to dig it out again, and then, just in case we haven’t had enough, paying to move it around. And we could do so many wonderfully silly things as a result. Hire armies of people to write code to synchronise things, then hire more armies of people to write code to reconcile the data. Sometimes we missed out the “writing code” bit and just hired the reconcilers direct.  </p>\n  <p>And the platform vendors prospered. And the database guys prospered. The storage guys prospered. The EAI guys prospered. The code writers prospered. The reconcilers prospered. Everyone prospered.  </p>\n  <p>Except the customer.</p>\n</blockquote>\n<p>- <a href=\"http://confusedofcalcutta.com/2008/02/18/musing-about-enterprise-information-and-flow/\">JP</a>  </p>\n<p>I have seen a number of enterprise projects pay external consultants to bury, dig out and then move around data. Its amazing how complicated a simple job can become. Its even more amazing that an industry still thrives from doing so.  </p>\n<p>For a while now it has been common practice to buy off the shelf products to perform common tasks. They come with a nice fluffy layer of support and there is always a consultant on hand if you want to spend some more cash. In general these off the shelf products do NOT do what they need to do. They require a great deal of customisation usually taken care of by a bespoke programming language specific to the \"Off the Shelf software.\"  </p>\n<p>As a result you either buy consultancy or train your own staff in the bespoke language. - both of which stink of vendor lock in.  </p>\n<p>Lets think for a moment what that common task actually is. A common task is accessing, consuming and potentially updating data from a completely different system. None of the off the shelf systems seem capable of doing so without swallowing vast sums of consultancy fees. JP points out the daily tasks for knowledge workers are actually search, syndication fulfillment and conversation. Each of these are very valuable to the enterprise. In this case I am particularly talking about syndication.  </p>\n<p>No man is an island.  </p>\n<p>Neither is software….. particularly in the enterprise.  </p>\n<p>Software (as with people) is only as good as its ability to interact with the eco-system around it.  </p>\n<p>In fact without some kind of syndication between systems you will find that search, conversation and fulfillment lose much of their value.  </p>\n<p>We seem to be at an interesting time in the enterprise, billions of pounds have been spent on massive integration projects/software but when compared to small RESTful APIs like <a href=\"http://www.flickr.com/services/api/\" title=\"Flickr API\">Flickr</a> and <a href=\"http://twitter.com/help/api\" title=\"twitter api\">Twitter</a> your left wondering where all the money has gone.  </p>\n<p>I love <a href=\"http://blog.whatfettle.com/2008/02/19/mashup-or-integration/\" title=\"Pauls definition of mashup\">Paul's definition of a mash up</a> :  </p>\n<p>To me its actually simpler,  </p>\n<ul>\n<li><p>mash ups are fun</p></li>\n<li><p>integration sounds like hard work and usually is</p></li>\n</ul>\n<p>As <a href=\"http://blogs.law.harvard.edu/doc/\" title=\"Doc Searls\">Doc</a> points out Markets are conversations, two way conversations, which means companies need to state very clearly to big vendors what they need to change. In this case, its zero touch access to data stored with-in an enterprise system.<br />\nMaybe the big vendors will sort out their act or maybe open source and open standards will provail in the enterprise leaving the vendors wondering what to do with all their consultants.  </p>\n<p>Will that day ever happen?? I'm hoping so…..  </p>\n<p><a href=\"http://blog.whatfettle.com/\">PSD</a> has also pointed me to a earlier post of his : <a href=\"http://blog.whatfettle.com/2007/01/12/a-moral-tale/\">A Moral Tale</a>, which is well worth a read.</p>",
        "tags": [
            "API",
            "cluetrain",
            "enterprise",
            "fourpillars",
            "informationflow",
            "integration",
            "lockin",
            "mashups",
            "oftheshelfsoftware",
            "osmososft",
            "twitter"
        ]
    },
    {
        "titleSlug": "offline-is-back-online",
        "title": "Offline is back Online",
        "date": "2008-08-11",
        "markup": "<p>Sorry I haven't blogged for a while…I've been keeping myself busy with several changes to ccTiddly!  </p>\n<p>I'm pleased to announce the imminent release of <a href=\"http://tiddlywiki.org/wiki/CcTiddly\">ccTiddly</a> v1.7! This version of ccTiddly was originally going to contain the new server side plugin functionality. It was decided that the next release would contain so much new functionality that it would be inappropriate and in fact confusing to release it as v1.6.5, and so v1.7 does not include server side plugins. Plugins are still planned for the next release: ccTiddly v1.8.  </p>\n<h2 id=\"syncingfunctionality\">Syncing Functionality</h2>\n<p>From v1.7 of ccTiddly onwards, users will be able to take a copy of a ccTiddly workspace (collaborative wiki) with them on a train, plane or anywhere without an internet connection. While a user is offline the wiki will save changes locally like a conventional TiddlyWiki file.  </p>\n<p>When the user has finished making changes offline, and when reconnected to the internet, they can click the sync button on their local version of ccTiddly and their changes will be sent back to the server.  </p>\n<p>Based on the changes, TiddlyWiki will show the following options before syncing:  </p>\n<p><img src=\"http://farm4.static.flickr.com/3188/2731660267_fd75c77b85.jpg\" alt=\"\" />  </p>\n<p>This is very new functionality. It's working in Firefox nicely. Unfortunately, I now need to get it working in IE6. Given that IE6 is likely to be challenging, I don't want to make any promises about release dates. However I suspect it will be out in the next few weeks! If you can't wait to have a play the code is in the <a href=\"http://svn.tiddlywiki.com\">TiddlyWiki subversion repository</a><a href=\"http://svn.tiddlywiki.com\">.</a>  </p>\n<p>By using a TiddlyWiki adaptor, ccTiddly can now provide support for enhancements including lazy loading (see below) and integration with projects such as <a href=\"http://tiddlysnip.com/\" title=\"//tiddlysnip.com/\">TiddlySnip</a> (a firefox extension for moving web content to your wiki).  </p>\n<h2 id=\"newmacros\">New Macros</h2>\n<p>As part of the ccTiddly project, I have been rewriting many of the ccTiddly macros so that they work with TiddlyWiki slightly better than they did originally.  </p>\n<p>ccTiddly 1.7 will introduce the following new macros :  </p>\n<pre><code class=\"js language-js\">&lt;&lt;ccLogin&gt;&gt;\n</code></pre>\n<p>Ok, so this is not a new macro but it's been completely redesigned and making full use of the TiddlyWiki wizard framework. It has also been integrated with the register macro. If the register macro is installed there will be a register button on the login screen.  </p>\n<p>I hope to extend this mechanism for things like <a href=\"http://openid.net/\" title=\"//openid.net/\">OpenID</a> login.  </p>\n<pre><code class=\"js language-js\">&lt;&lt;ccEditWorkspace&gt;&gt;\n</code></pre>\n<p>This macro will allow users to update the permissions on an existing workspace. It currently only allows users to set permissions for anonymous users but will be extended to support setting permissions for admins, logged in users and possibly groups.  </p>\n<pre><code class=\"js language-js\">&lt;&lt;ccManage&gt;&gt;\n</code></pre>\n<p>The ccManage macro will allow workspace administrators to grant other users administration access to a given workspace.  </p>\n<h2 id=\"newskins\">New Skins</h2>\n<p>TiddlyWiki recently introduced the concept of single tiddler themes. These allow developers to pack many different tiddlers into a single tiddler which makes up a theme e.g. stylesheet, pageTemplate and viewTemplate. ccTiddly now makes full use of the theme mechanism. We will distribute ccTiddly 1.7 with three themes.  </p>\n<p><img src=\"http://farm4.static.flickr.com/3024/2753077987_cd23bdd133.jpg\" alt=\"\" />  </p>\n<h2 id=\"improvedarchitecture\">Improved Architecture</h2>\n<p>We have now reached an important milestone in ccTiddly where the Javascript and PHP code are completely separate. This greatly simplifies ccTiddly. All modification to theTiddlyWiki file are loaded from the /tiddlers/ folder as either .js files or .tiddler files.  </p>\n<p>There is a file: /includes/ccAssignments.php which creates the ccAssignments tiddler. This is the only point where the PHP and Javascript cross over.  </p>\n<p>Any requests made from the client to the server are handled by a file in the /handle/ folder.  </p>\n<h2 id=\"lazyloading\">Lazy Loading</h2>\n<p>With \"Lazy loading\" a subset of tiddlers are loaded in the first instance, and then others are only loaded upon request.  </p>\n<p>In ccTiddly, it's possible to pass the tags variable in the URL. If the tags variable is specified in the URL, the ccTiddly workspace will only load tiddlers with the specified tag. For example;  </p>\n<p>tags=task  </p>\n<p>…would only return the tiddlers tagged 'task' in the requested workspace. If users click on links to tiddlers which are not tagged task, they would be loaded at that point.  </p>\n<p>This technique can be used to dramatically improve loading times of TiddlyWiki files. As soon as ccTiddly v 1.7 is available I will announce it on the <a href=\"http://groups.google.com/group/ccTiddly\" title=\"//groups.google.com/group/ccTiddly\">ccTiddly groups</a>.</p>",
        "tags": [
            "BT",
            "ccTiddly",
            "Osmosoft",
            "osmososft",
            "SimonMcManus",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "a-simple-ckeditor-plugin-template",
        "title": "A Simple CKEditor Plugin Template",
        "date": "2010-05-12",
        "markup": "<p>FCKEditor has recently released a new version called <a href=\"http://ckeditor.com/\">CKEditor</a>. Unfortunately much of the documentation has not been updated which makes building things on top of the API somewhat difficult at the moment.  </p>\n<p>I have published a basic template which make it clear how to create a plugin that adds an item to the CKEditor toolbar, when that button is pressed the users is presented with a simple dialog box containing two tabs which can interact with the parent editor.  </p>\n<p>The template can be found at :  </p>\n<p><a href=\"http://simonmcmanus.com/stuff/tw_uploader/testPlugin.zip\">http://simonmcmanus.com/stuff/tw_uploader/testPlugin.zip</a></p>",
        "tags": [
            "osmososft"
        ]
    },
    {
        "titleSlug": "life-streaming-in-cctiddly",
        "title": "Life Streaming in ccTiddly",
        "date": "2008-01-04",
        "markup": "<p>This afternoon I noticed <a href=\"http://www.hawksworx.com/journal/\" title=\"http://www.hawksworx.com/journal/\">Phil Hawksworth</a> playing around with a script to add a life streaming to his blog.  </p>\n<p>Thanks to <a href=\"http://adactio.com/\" title=\"http://adactio.com/\">Jeremy Keith</a>, for the <a href=\"http://adactio.com/extras/stream/stream.phps\" title=\"http://adactio.com/extras/stream/stream.phps\">original code</a>  </p>\n<p>With very few changes I have got the script working in <a href=\"http://cctiddly.sourceforge.net/\">ccTiddly</a>.<br />\nIn index.php you simply need to add the code contained in this file (<a href=\"https://simonmcmanus.files.wordpress.com/2008/01/lifestream1.txt\" title=\"lifestream1.txt\">lifestream1.txt)</a> under  </p>\n<p><div id=\"storeArea\">  </p>\n<p>in Index.php  </p>\n<p>And below is the end result.  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2008/01/picture-2.png\" title=\"picture-2.png\"><img src=\"https://simonmcmanus.files.wordpress.com/2008/01/picture-2.png\" alt=\"picture-2.png\" /></a>  </p>\n<p>This code probably wont make it into the next release of ccTiddly but I thought I would get it out there for you to play with.  </p>\n<p>Some of the date sorting bits are not actually required here because Tiddlywiki can do the date sorting.  </p>\n<p>Enjoy, comments and suggestions welcome as always.</p>",
        "tags": [
            "ccTiddly",
            "lifestreaming",
            "PHP",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "announcing-cctiddly-151",
        "title": "Announcing ccTiddly 1.5.1",
        "date": "2008-03-10",
        "markup": "<p>Over the last few weeks and months I have slowly been working away with Matt toward ccTiddly 2.0. Its still early days but we wanted to start getting feedback as soon as possible, so please welcome ccTiddly 1.5 Alpha.I have added information about the release to the tiddlywiki.org wiki.</p>\n<p><a href=\"http://tiddlywiki.org/wiki/CcTiddly/v1.5.1_Release_Notes\">http://tiddlywiki.org/wiki/CcTiddly/v1.5.1_Release_Notes</a></p>\n<p>If you have any problems please raise them on the ccTiddly google groups :  </p>\n<p><a href=\"http://groups.google.com/group/ccTiddly\">http://groups.google.com/group/ccTiddly</a>  </p>\n<p>Cheers  </p>\n<p>Simon</p>",
        "tags": [
            "osmososft"
        ]
    },
    {
        "titleSlug": "time-for-a-blog-post-about-twitter",
        "title": "Time for a blog post about twitter.",
        "date": "2008-01-15",
        "markup": "<p>I was a slow starter when it came to <a href=\"http://www.twitter.com\" title=\"Twiter\">twitter</a>, im now subscribed to about 54 people and they generates a good few tweats.(updates) I now rarely read beyond the first page so I miss quite a few of them.  </p>\n<p>I found it interesting how the whole twitter experience became more enjoyable again when I unsubscribed from <a href=\"http://twitter.com/Scobleizer\" title=\"@Scobleizer\">@Scobleizer</a>. The human brain may be good at filtering information but its alot happier when it doesn't have to. For a while twitter was reminding me of Outlook. It turns out that was because I was using it like Outlook by not missing a tweat.  </p>\n<p>That is where I was going wrong….  </p>\n<p>An email never guarantees that it has been received, and certainly not that due care and attention has been paid to reading and digesting the information contained with in it. That however is exactly what people expect. With twitter I have not seen the same expectations.  </p>\n<p>I like to think about tweats as throw away comments that may not be read by any one, and thats fine, but they could also make someone smile or avoid two people doing exactly the same piece of work.  </p>\n<p>I am really looking forward to having <a href=\"http://tiddlywiki.org/wiki/CcTiddly\" title=\"ccTiddly\">ccTiddly</a> at a stage where we can recreate things like twitter. If twitters success is all about constraints it will be really interesting to see what happens when we tweak those constraints for different environments.</p>",
        "tags": [
            "ccTiddly",
            "osmososft",
            "scoble",
            "tiddlywiki",
            "twitter"
        ]
    },
    {
        "titleSlug": "politics-twitter-and-accessibility-(politically-speaking)",
        "title": "Politics, Twitter and Accessibility (politically speaking)",
        "date": "2008-04-23",
        "markup": "<p>I used to love politics. Over the last four or five years I've developed a dislike for it.&nbsp; I was starting to think I had maybe grown out of it or maybe I'm no-longer so idealistic and naive.  </p>\n<p>Some interesting things have been happening recently, I bumped into <a href=\"http://twitter.com/abscond\">@absond</a> on the train into work a good few months back. He told me about <a href=\"http://www.barcamp.org/BarcampUKGovweb\">BarCampUKGovWeb</a> which sounded quite interesting.  </p>\n<p>Ive since started following a number of blogs from people that work in and around government. I've even started to follow the blogs of some MP's. I have so far followed all MP's I am aware of regardless of party.  </p>\n<p>I don't pay particular attention to every post but rather scan read whatever they choose to blog. As more MP's start to blog I will need to become more selective. At the moment its interesting just to see what our representatives feel comfortable blogging about.  </p>\n<p>The other day <a href=\"http://www.lynnefeatherstone.org/column190-beijing-olympics.htm\">this post</a> from <a href=\"http://www.lynnefeatherstone.org\">Lynne Featherstone</a> caught my attention.&nbsp; She talks about human rights in China in relation to the Olympics.&nbsp; An issue at the front of my mind after going to see the Olympic torch pass St Paul's the previous week.&nbsp; We didn't actually see the torch, it was bundled onto a bus with the Chinese thugs just before it got to us. Regardless I found Lynne's post quite agreeable.  </p>\n<p>Normally in this situation I would drop a comment on the blog to show my agreement. Unfortunately <a href=\"http://www.lynnefeatherstone.org/\">Lynne's blog</a> is not quite a real blog. You can't add comments.&nbsp; Here is what is really cool though, Lynne's on <a href=\"http://twitter.com\">Twitter</a>. So I tweeted her.  </p>\n<p>The Downing Twitter feed is rather interesting. <a href=\"http://twitter.com/downingstreet\">@DowningStreet</a>. It provides updates, responds to questions and actually provides an interesting insight into life at Downing Street.  </p>\n<p>The <a href=\"http://twitter.com/Conservatives\">@Conservative</a> twitter feed even impressed me yesterday. I was getting ready for work when they tweeted that David Cameron was going to be interviewed on BBC 1 just after 8am… and they wanted feedback. So I watched. And then I replied :  </p>\n<p>\"<a href=\"http://twitter.com/Conservatives\">@Conservatives</a> - not bad - Your still not getting my vote. Just to confirm. Are you left or right these days?\"  </p>\n<p>It was slightly sarcastic and I wasn't particularly expecting a reply. When I arrived at work an hour later there was a reply from the Conservative&nbsp; Party.  </p>\n<p>\"<a href=\"http://twitter.com/simonmcmanus\">@simonmcmanus</a> Thanks for your feedback, and we're on the centre-right!\"  </p>\n<p>For the first the first time in my life I had engaged in a two way conversation with a political party!  </p>\n<p>The 140 character constraint removes some of the formality associated with blogging and email.&nbsp;&nbsp; I sure as hell wouldn't have written that in an email.&nbsp; Even an email of the same length. Twitter, it would seem is making politicians more accessible. Or at least making politicians appear more accessible.  </p>\n<p>I'm really interested to see how this all develops. I'm loving the idea of my MP being on Twitter.&nbsp; Lets hope <a href=\"http://www.eppingforestconservatives.com/index.php?option=com_content&task=view&id=12&Itemid=1\">Eleanor Lang</a> (my MP) is listening.&nbsp; I would love to see politicians adopting these tools because they provide a&nbsp; highly effective communications platform.  </p>\n<p>I should thank <a href=\"http://puffbox.com/\">http://puffbox.com/</a> for keeping me informed about the latest politicians using Twitter.&nbsp; Interesting to see that <a href=\"http://twitter.com/brianpaddick\">@brianpaddick ,</a> <a href=\"http://twitter.com/backboris\">@backboris</a> are both using Twitter.  </p>\n<p>Politics and politicians can often seem invisible and unaccountable. Twitter could start to change that.&nbsp; Given that MP's claim to represent us in parliament I don't think its wrong to wonder…..What are they doing?</p>",
        "tags": [
            "2.0",
            "accessibility",
            "acs",
            "Blog",
            "blogs",
            "BT",
            "conservatives",
            "Osmosoft",
            "politics",
            "SimonMcManus",
            "twitter"
        ]
    },
    {
        "titleSlug": "tiddlydocs-collaborating-on-large-documents",
        "title": "TiddlyDocs - Collaborating on large documents",
        "date": "2009-02-06",
        "markup": "<p>Recently I've been building a proof of concept, the brief was simple…  </p>\n<p>\"Come up with a way for my team to collaborate with people outside the organisation on large Word document. At the moment, we tend to email them between us, which can degenerate into a nightmare.\"  </p>\n<p>Our approach was to think about breaking these large documents down into small sections which could be assigned to individuals for authoring and/or review. These sections could then be reassembled into a single document for printing.  </p>\n<p>To build this proof of concept we used <a href=\"http://tiddlywiki.com\">TiddlyWiki</a> and <a href=\"http://jquery.com/\">jQuery</a>. The latest release of TiddlyWiki (2.5) includes jQuery (1.2.6) so this provided a fine opportunity to explore the new potential.  </p>\n<p>So <a href=\"http://wiki.osmosoft.com/TiddlyDocs/\">here is the demo</a>,  </p>\n<p>The online demo does not demonstrate the iGoogle integration of TiddlyDocs. &nbsp; The iGoogle integration showed how we could provide a personalised view of the sections assigned to each user.&nbsp; While we used iGoogle for the original demo this portlet just contains HTML so could be embedded into any portal framework which supports HTML.  </p>\n<p><a href=\"http://blog.whatfettle.com/\">PSD</a> wrote some <a href=\"http://www.w3schools.com/xslfo/xslfo_intro.asp\">XSL-FO</a> to translate the generated HTML into a printable PDF document. Paul's code can be found <a href=\"http://svn.tiddlywiki.org/Trunk/contributors/PaulDowney/server/html2pdf/\">here</a>.  </p>\n<h1 id=\"features\"><strong>Features :</strong></h1>\n<p><strong>Drag and Drop your Table of Content</strong>  </p>\n<p><img src=\"http://farm4.static.flickr.com/3318/3253469780_55cedf9eea.jpg\" alt=\"\" title=\"TiddlyDocs - drag n drop \" />  </p>\n<p>Allows users to change the order and hierarchy of the document table of content  </p>\n<p><strong>Easily assign sections to Users</strong>  </p>\n<p><img src=\"http://farm4.static.flickr.com/3391/3252648993_18d90588aa.jpg\" alt=\"\" title=\"TiddlyDoc - Assign chunk\" />  </p>\n<p>Allows each section to be easily assigned to a pre-populated list of users.  </p>\n<p><strong>Full WYSIWYG text editing with FCKEditor</strong>  </p>\n<p><img src=\"http://farm4.static.flickr.com/3503/3253482874_bc934ce199.jpg\" alt=\"\" title=\"TiddlyDocs\" />  </p>\n<p>Allows users to edit the document content in a familiar word style environment.&nbsp; Also allows content including images to be pasted in the textarea from the clipboard.  </p>\n<p><strong>iGoogle Integration of Personalised Task Lists</strong>  </p>\n<p><img src=\"http://img.skitch.com/20090205-k7u7rpctmxsbmstudwr3mphiug.jpg\" alt=\"\" title=\"TiddlyDoc\" />  </p>\n<p>The iGoogle integration allows each users to have their own view of all the tasks assigned to them. This can be used in various portal frameworks.  </p>\n<p><strong>Easy view of the documents status</strong>  </p>\n<p><img src=\"http://farm4.static.flickr.com/3316/3253512996_30f9a0787c.jpg?v=0\" alt=\"\" title=\"TiddlyDoc - Status\" />  </p>\n<p>The bar to the right of the table of content shows the status of each section. When the bar is completely green the document is complete.&nbsp; This example demonstrates that only one of the sections has been completed.  </p>\n<p>**Each Section Allows for Comments<br />\n**  </p>\n<p><img src=\"http://farm4.static.flickr.com/3302/3253503268_0b5bd3e38e.jpg\" alt=\"\" title=\"TiddlyDoc\" />  </p>\n<p>Each section allows multi-threaded comments which will not be printed in the final document.&nbsp; This allows for conversations to take place around each section of content.  </p>\n<p><strong>The Components :</strong>  </p>\n<p>We were able to build this proof of concept so quickly by reusing open source code that is available in the TiddlyWiki and jQuery communities.&nbsp; Below I&nbsp;talk about the components that make up TiddlyDocs.  </p>\n<p>**SplitView Plugin<br />\n**  </p>\n<p>This is one of the plugins I wrote specifically for the demo. The macro accepts one parameter which is the name of another tiddler to store the document specification. The document specification is stored in list format, eg:  </p>\n<p><em>* Heading 1</em>_<br />\n* Heading 2<br />\n<strong>** Heading 2.1  \n** Heading 2.2</strong><br />\n* Heading 3_  </p>\n<p>Every time the document is re-arranged the specification tiddler is saved.  </p>\n<p><strong>PrintView Plugin</strong>  </p>\n<p>This is the other plugin which I wrote specifically for the demo.&nbsp; This plugin can read the document specification, collect the data from each of the required tiddlers, and then generate a static html file on the server which can then be converted to PDF for printing.  </p>\n<p><strong>Single Page Mode Plugin</strong>  </p>\n<p>Provided by Eric of <a href=\"http://tiddlytools.com\">TiddlyTools,</a> the singlePageModePlugin ensures only one tiddler is viewed at a time.  </p>\n<p><a href=\"http://tiddlytools.com/#SinglePageModePlugin\">http://tiddlytools.com/#SinglePageModePlugin</a>  </p>\n<p><strong>Comments Plugin</strong>  </p>\n<p>Allows users to post comments against individual sections. These comments are presented as a threaded discussion, allowing rich conversations to take place around the content.&nbsp; Thanks to <a href=\"http://softwareas.com/\">Michael Mahemoff</a> for this plugin who also helped with the demo.<a href=\"http://softwareas.com/\">  \n</a>  </p>\n<p><a href=\"http://tiddlyguv.com/CommentsPlugin.html\">http://tiddlyguv.com/CommentsPlugin.html</a>  </p>\n<p><strong>Value Switcher Plugin TeamTasks</strong>  </p>\n<p>Taken from <a href=\"http://hawksworx.com/\">Phil Hawksworth</a>'s TeamTasks, this allows the fields provided by TiddlyWiki to be used to store information about ownership and current status.  </p>\n<p><a href=\"http://svn.tiddlywiki.org/Trunk/contributors/PhilHawksworth/verticals/TeamTasks/core/plugins/ValueSwitcherPlugin.js\">http://svn.tiddlywiki.org/Trunk/contributors/PhilHawksworth/verticals/TeamTasks/core/plugins/ValueSwitcherPlugin.js</a>  </p>\n<p>from:&nbsp; <a href=\"http://getteamtasks.com\">http://getteamtasks.com</a>  </p>\n<p>**FCKEditor<br />\n**<br />\n<a href=\"http://www.fckeditor.net/\">FCKEditor</a> is a project to make a nice WYSIWYG editor from any HTML textarea.&nbsp; I have to say a I have been very impressed with FCKEditor.  </p>\n<p><a href=\"http://www.fckeditor.net/\">http://www.fckeditor.net/</a>  </p>\n<p><strong>TiddlyWiki FCKEditor Plugin</strong>  </p>\n<p>A TiddlyWiki plugin that makes FCKEditor work nicely with TiddlyWiki.  </p>\n<p><a href=\"http://visualtw.ouvaton.org/VisualTW.html#FCKeditorPlugin\">http://visualtw.ouvaton.org/VisualTW.html#FCKeditorPlugin</a>  </p>\n<p><strong>NestedSortable -(a&nbsp; jQuery plugin)</strong><br />\nThis jQuery plugin provides the drag and drop interface for the demo.  </p>\n<p><a href=\"http://code.google.com/p/nestedsortables/\">http://code.google.com/p/nestedsortables/</a>  </p>\n<p>This demo is hosted by <a href=\"http://www.tiddlywiki.org/wiki/CcTiddly\">ccTiddly</a> but its been written to work on <a href=\"http://www.tiddlywiki.org/wiki/TiddlyWeb\">TiddlyWeb</a> and any other server-side implementation of TiddlyWiki.&nbsp; Over the next few months I will be working on TiddlyDocs to prepare it for easy consumption.  </p>\n<p>Updated : <a href=\"http://softwareas.com/\">Michael Mahemoff</a> has produced a screencast talking through the features of this demo :&nbsp; <a href=\"http://vimeo.com/3109248\">http://vimeo.com/3109248</a></p>",
        "tags": [
            "collaboration",
            "demo",
            "FCKEditor",
            "jquery",
            "osmososft",
            "PDF",
            "tiddlywiki",
            "XSL-FO"
        ]
    },
    {
        "titleSlug": "product-streaming-for-cctiddly",
        "title": "Product Streaming for ccTiddly???",
        "date": "2008-01-07",
        "markup": "<p>My recent play/ <a href=\"http://simonmcmanus.com/2008/01/04/life-streaming-in-cctiddly/\" title=\"Life streaming blog post\">blog post</a> with <a href=\"http://adactio.com/journal/1202/\" title=\"Life Streaming explained \">life streaming</a> script got me thinking. Today I've been looking at the various online resources for ccTiddly. Currently we have :  </p>\n<p><a href=\"http://sourceforge.net/project/showfiles.php?group_id=156016&package_id=173962\" title=\"http://sourceforge.net/project/showfiles.php?group_id=156016&package_id=173962\">http://cctiddly.sourceforge.net -</a> ccTiddly on Sourceforge</p>\n<p><a href=\"http://groups.google.com/group/ccTiddly\" title=\"ccTiddly Google Groups\">http://groups.google.com/group/ccTiddly</a> - Google Groups on ccTiddly <a href=\"http://coolcold.wordpress.com/\" title=\"CoolColds Blog\">http://coolcold.wordpress.com</a> - Cool Colds blog   [</p>\n<p>http://simonmcmanus.com](http://simonmcmanus.wordpress.com/wp-admin/My%20Blog) - My Blog   </p>\n<p><a href=\"http://www.tiddlywiki.org/wiki/CcTiddly\" title=\"ccTiddly User Wiki\">http://www.tiddlywiki.org/wiki/CcTiddly</a> - Wiki for ccTiddly   </p>\n<p><a href=\"http://www.tiddlywiki.org/wiki/CcTiddlyDeveloper\" title=\"ccTiddly Developer Wiki\">http://www.tiddlywiki.org/wiki/CcTiddlyDeveloper</a>  - Wiki for ccTiddly developers.   </p>\n<p><a href=\"http://svn.tiddlywiki.org/Trunk/association/serversides/cctiddly/\" title=\"ccTiddly SVN Repository\">http://svn.tiddlywiki.org/Trunk/association/serversides/cctiddly</a> - SVN for ccTiddly   </p>\n<p><a href=\"http://trac.tiddlywiki.org/\" title=\"ccTiddly Trac DB\">http://trac.tiddlywiki.org</a> - Trac for Tiddlywiki</p>\n<p>and there are potentially more. Most of these produce some kind of RSS feed. It would be nice to provide an aggregated view of all these feeds in a similar way to Life Streaming.  </p>\n<p>At a quick glance I can see a few problems. The Wikis are being hosted on the TiddlyWiki Media Wiki installation which does not appear to provide an RSS feed per page. Maybe this can be resolved using the <a href=\"http://www.tiddlywiki.org/wiki/Special:WikiFeeds\">media wiki categories feed</a> .  </p>\n<p>Anyway, just a thought, would anyone find this usefull?  </p>\n<p>Comments and suggestions welcome as always.</p>",
        "tags": [
            "ccTiddly",
            "lifestreaming",
            "mediawiki",
            "wiki"
        ]
    },
    {
        "titleSlug": "installing-tiddlydocs-latest-on-tiddlyweb-(mac)",
        "title": "Installing TiddlyDocs latest on TiddlyWeb (Mac)",
        "date": "2009-09-21",
        "markup": "<p>Assuming you have already installed TiddlyWeb and TiddlyWebWiki (http://tiddlyweb.peermore.com/wiki/) this is how to install the very latest development version of TiddlyDocs on your local machine :  </p>\n<pre><code>curl http://svn.tiddlywiki.org/Trunk/contributors/SimonMcManus/tiddlyweb/tiddlydocs/install.sh &gt;install.sh\nsudo sh install.sh\ncd tiddlydocs\ntwanager server 127.0.0.1 8080   \n</code></pre>\n<p>In your browsers then goto :</p>\n<p>http://127.0.0.1:8080/recipes/tiddlydocs/tiddlers.wiki</p>",
        "tags": [
            "osmososft"
        ]
    },
    {
        "titleSlug": "rest-in-peace-civil-serf",
        "title": "Rest in Peace Civil Serf",
        "date": "2008-03-10",
        "markup": "<p>I was upset this morning to read that the Civil Serf blog had been shut down. It did however explain why the RSS feed had been filled with info about the birth of a French baby called Arthur and other less useful info.For those of you that don't know, Civil Serf was a blog by a civil servant providing a great insight into the internal runnings of government.\"The online diarist, known only as \"Civil Serf\", has been titillating readers with tales of incompetence from within the government machine since last November.\" - Scotsman</p>\n<p>She eventually gave enough details for her to be identity to be revealed so it was not entirely unexpected.  </p>\n<p>We (businesses) spend a great deal of time talking about how tools such as blogs can improve collaboration within businesses. The same can surely be said for Government.  </p>\n<p>As <a href=\"http://mulqueeny.wordpress.com/2008/03/04/social-media-and-democracy/\">Emma Mulqueeny</a> Says :\"Anyone who works in an e-media team in the public sector, will tell you how difficult it is to champion the use of any social media tool to any great effect. And, other than responding to the perennial cry: 'I want a blog' - which never, ever really means I want a blog (Miliband excepted of course) there is little or no interest. This could be due to the fact that there is a great nervousness around it: mis-information and wild assumptions all ultimately culled by risk aversion/avoidance.\"</p>\n<p>The internet is far less tolerable of nicely worded press statements that have been worded in corporate/politicians waffle. Or as <a href=\"http://blogs.law.harvard.edu/doc/\">Doc</a> puts it :The internet means \"Bullshit will lose leverage.\"  </p>\n<p>In fact politicians could learn a lot from listening to folk like <a href=\"http://blogs.law.harvard.edu/doc/\">Doc</a></p>\n<p>.. Markets are Conversation.<br />\n… Election should be Conversations?<br />\n…. Conversations will win Elections!</p>\n<p>Businesses, politicians and parties need to understand this.</p>\n<p>Politicians need to learn to engage people in conversations. It's an interesting issue if a civil servant should blog but there is clearly a lot that can be learned by politicians from this experience.  </p>\n<p>Corporates are currently trying to understand how they can be private in public; trying to understand how they can collaborate with their customers safely on the internet while still keeping their core data secure. It's an interesting issue. There are great benefits from any organisation talking openly about its ideas before it commits firmly to them.  </p>\n<p>Obviously certain information needs to be kept secure for legal, financial, commercial, diplomatic or political reasons but when I start thinking seriously about what information needs to be protected and what would benefit from being shared the vast majority falls into the \"should be shared\" category.  </p>\n<p>The Data Protection Act allows people to request information, usually when its too late, so the government ends up giving out information that results in the government looking bad. Maybe this is fueling an attitude where politicians are scared to give out information early.</p>\n<p>Hiding problems which are shared with others rarely makes sense.  </p>\n<p>\"Information wants to be free!\"- ?  </p>\n<p>\"The internet recognises censorship as a fault and routes around it.\"-?  </p>\n<p>Governments could be using blogs such as this as a great way to dip their toe in the water, instead of leaking a policy one week before announcing it.  </p>\n<p>I have not managed to find much information about the circumstances around the blog being shut down (it only happened over the weekend). While I understand the reasons for shutting it down I would much rather see them do something more positive with the blog. If the civil servant has been identified and sacked it will be a real shame for the civil service. They would be wasting a fine asset.  </p>\n<p>One day I will try to read the <a href=\"http://www.civilservice.gov.uk/documents/doc/cscode/cscode.doc\">civil service code</a> and form a slightly stronger opinion about how openly civil servants should be allowed to blog.</p>",
        "tags": [
            "civilserf",
            "collaboration",
            "doc",
            "politics",
            "ukgov"
        ]
    },
    {
        "titleSlug": "server-side-search-for-cctiddly",
        "title": "Server Side Search for ccTiddly.",
        "date": "2008-01-15",
        "markup": "<p>We are starting to deploy <a href=\"http://www.tiddlywiki.org/wiki/CcTiddlyDeveloper\" title=\"ccTiddly\">ccTiddly</a> within BT and have been importing various types of data. In the same way that users experience issues with a <a href=\"http://tiddlywiki.com/\" title=\"Tiddlywiki\">Tiddlywiki</a> files greater than 1 or 2 mbs the same issue occurs on ccTiddly.  </p>\n<p>Being server side there are a number of things we can do to reduce these issues. One idea we have is only loading the title data for each of the tiddlers onLoad. With such techniques the client side search (and some other areas) will lose value. As a result I have started experimenting with a server side search solution for ccTiddly.  </p>\n<p>The nice thing about this code is that it can later be used to search across revisions, tiddlywiki's bag's and even across different servers. It could also be modified quite easily to incorporate google search results.  </p>\n<p>The code is made up of two parts :  </p>\n<p>The plug-in (you need to update the server,&nbsp; url and then create a tiddler and tag it with systemConfig) :  </p>\n<p>Plugin :  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2008/01/search.txt\" title=\"search.txt\">search.txt</a>  </p>\n<p>PHP Code :  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2008/01/searchphp.txt\" title=\"searchphp.txt\">searchphp.txt</a>  </p>\n<p>(you will need to rename the file from searchphp.txt to search.php)  </p>\n<p>This code has been written for ccTiddly 2.0 but you should be able to get it working on ccTiddly 1.2 with minimal problems. In this case search.php was added to a folder called 'handle' in the root ccTiddly directory.  </p>\n<p>This is the format we will be using in ccTiddly 2.x  </p>\n<p>A temporary example of this script can be found running at :  </p>\n<p><a href=\"http://wikidev.osmosoft.com/search#search\" title=\"http://wikidev.osmosoft.com/search#search\">http://wikidev.osmosoft.com/search#search</a> - Please note this is a dev server only.</p>",
        "tags": [
            "ccTiddly",
            "optimisation",
            "osmososft",
            "server side search",
            "speed",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "installing-ckeditor-with-standalone-tiddlywiki",
        "title": "Installing CKEditor with standalone TiddlyWiki",
        "date": "2010-06-28",
        "markup": "<p>I was recently asked how to use <a href=\"http://ckeditor.com/\">CKEditor</a> with a standalone <a href=\"http://tiddlywiki.com\">TiddlyWiki</a>. <a href=\"http://ckeditor.com/\">CKEditor</a> is the replacement for FCKEditor. I've been using it for a while in MyDocs (a customisation of <a href=\"http://tiddlydocs.com\">TiddlyDocs</a>) but thought I would take this opportunity to document how it can be used in a standalone TiddlyWiki.  </p>\n<p>First off we need to get all the tiddlers required for <a href=\"ckeditor.com\">CKEditor</a>, the easiest way to do that is to cook the <a href=\"http://svn.tiddlywiki.org/Trunk/verticals/ckeditor/index.html.recipe\">ckeditor vertical recipe</a>.  </p>\n<p>For your convenience I've uploaded the <a href=\"tiddlywiki.com\">TiddlyWiki</a> file it produces <a href=\"http://simonmcmanus.com/stuff/ckeditor/index.html\">here</a>.  </p>\n<p>Now we need to download the <a href=\"ckeditor.com\">CKEditor</a> files, You can download them <a href=\"http://download.cksource.com/CKEditor/CKEditor/CKEditor%203.3.1/ckeditor_3.3.1.zip\">here</a>.  </p>\n<p>Finally you just need to change the location set in the <a href=\"http://simonmcmanus.com/stuff/ckeditor/index.html#MarkupPreHead\">MarkupPreHead</a> tiddler so it points to the CKEditor folder you just downloaded. In my case:  </p>\n<script type=\"text/javascript\" src=\"**./ckeditor/ckeditor.js**\"></script>\n<p>If you are using cook you will need to save the MarkupPreHead tiddler from within the TiddlyWiki file for it to be set correctly. I have already done so in the example provided.  </p>\n<p>You may also want to change the values in the \"CKEditorSettings\" tiddler.  </p>\n<p>Save your changes, refresh the browser and that should do it.  </p>\n<p><strong>Update:</strong>  </p>\n<p>As some folks experienced problems getting this setup I have provided a zip file of the output:<br />\n<a href=\"http://simonmcmanus.com/stuff/ckeditor/twCKEditor.zip\">  \nhttp://simonmcmanus.com/stuff/ckeditor/twCKEditor.zip</a></p>",
        "tags": [
            "CKEditor",
            "TiddlyWiki",
            "osmososft"
        ]
    },
    {
        "titleSlug": "innovating-with-small-pieces-loosely-joined",
        "title": "Innovating with small pieces loosely joined",
        "date": "2008-02-29",
        "markup": "<p>It's hard to justify the production of a single piece in a jigsaw.  </p>\n<p>A mash-up is much like a jigsaw. The services which sit behind the mash-up are generally of less value than the combined value. Businesses want to own the whole jigsaw because that is where the obvious money is.  </p>\n<p>So why should a company expose data when they can see no immediate benefit? Can exposing such a service be justified when the benefit to the end user is not immediately obvious?  </p>\n<p>Businesses seem to understand the widget model quite well. They can stretch their online estate, pushing the brand outside of the traditional .com domain. However, when the only reference to the brand is an AJAX call to a server never seen by the end user, where is the value?  </p>\n<p>Businesses are comfortable with prescribed innovation. They need an idea before there is investment, and exposing data is not an idea. The thing that I particularly love about the English language is that it's described rather than prescribed.  </p>\n<p>Its the reasons that we have words such as: \"<strong>blogosphere</strong>\", \"<strong>flash mob</strong>\" and \"<strong>stealth tax</strong>\" in the Oxford English dictionary.  </p>\n<p>Solving problems not building business models….in many cases we may not even be able to see a problem. The end users knows all about the problems and weaknesses, and if you can enable the edges of your network to try out different solutions to their problems you are going to see more innovative solutions.  </p>\n<p>Lets think of it as an innovation model rather than a business model. By allowing developers to mash up their own data you find out that they want to do something with it that you could never have imagined. You can then incorporate those ideas into your own product(s).  </p>\n<p>In my previous post I said that :  </p>\n<p>\"Software (as with people) is only as good as its ability to interact with the eco-system around it.\"  </p>\n<p>Increasingly we are judging software by its ability to pump information in and out. How long will it be until the same can be said about a business?  </p>\n<p>If you have any other good reasons for business opening up there data please let me know.  </p>\n<p>As always comments welcome.</p>",
        "tags": [
            "innovation",
            "osmososft"
        ]
    },
    {
        "titleSlug": "the-ultimate-n95-hack-helicopters",
        "title": "The Ultimate N95 hack - Helicopters",
        "date": "2007-12-24",
        "markup": "<p>It struck me while watching the below video of the <a href=\"http://web.nseries.com/products/n95/#l=products,n95\" title=\"http://web.nseries.com/products/n95/#l=products,n95\">Nokia n95</a> yesterday that the n95 has all the necessary equipment required to run an r/c helicopter.  </p>\n<p>[youtube=http://www.youtube.com/watch?v=EMjAYdF13cU]  </p>\n<p>With its built in GPS and the ability to run a web server, It would seem sensible to replace the radio receiver from a helicopter with a bluetooth one (as shown in the above video)  </p>\n<p>Ive also been playing with the nokia's on board web server. It works, although the connection is not exactly reliable.  </p>\n<p>With a connection it would be really easy to control the helicopter from anywhere on the web!  </p>\n<p>Ive not quite worked out how we avoid killing folk when the connection drops out.  </p>\n<p>I consulted <a href=\"http://www.nats.co.uk/\" title=\"http://www.nats.co.uk/\">NATS</a> about this (ok my sister in law) and it would basically only be legal to fly over private property and below a certain heights.  </p>\n<p>I really want to scratch this itch but think it could be a little dangerous and I dont really have enough space.  </p>\n<p>I will try to get up some other posts about the stuff I have been doing with the n95.  </p>\n<p>The web server stuff is particularly cool  </p>\n<p><a href=\"http://opensource.nokia.com/projects/mobile-web-server/\" title=\"http://opensource.nokia.com/projects/mobile-web-server/\">http://opensource.nokia.com/projects/mobile-web-server/</a>  </p>\n<p>I am particularly looking forward to PAMP in early Jan:  </p>\n<p><a href=\"http://blogs.s60.com/mws/2007/11/hot_news_php_coming_to_s60.html\" title=\"http://blogs.s60.com/mws/2007/11/hot_news_php_coming_to_s60.html\">http://blogs.s60.com/mws/2007/11/hot_news_php_coming_to_s60.html</a>  </p>\n<p>Merry Christmas every body.</p>",
        "tags": [
            "mobile web server",
            "n95",
            "nats",
            "nokia",
            "n95",
            "nokia",
            "Osmosoft",
            "osmososft"
        ]
    },
    {
        "titleSlug": "my-recent-contribution-to-the-house-of-lords-information-committee",
        "title": "My Recent Contribution to the House of Lords Information Committee",
        "date": "2009-06-24",
        "markup": "<p>My name is Simon McManus. I work as a web developer. After recently attending a UKGovBarCamp I noticed that it was difficult to reuse parliament's publications. I made a comment on a parliamentary blog post<br />\nwhich resulted in Richard contacting me via e-mail. The fact that I was able to comment in the first place has made it possible for me to speak to you now. Thank you for this opportunity.  </p>\n<p>The essential dissatisfaction I have with the parliament website is that the information is not being published for re-use. In this paper I will explain what I mean by this, why I believe it and offer some alternative solutions. I would be more than happy to come and discuss this with you further and would appreciate any feedback that you might have.  </p>\n<p>Executive Summary  </p>\n<p>Websites like Wikipedia demonstrate how conversations can take place around information. For each article there is a discussions tab which allows readers and authors to discuss the articles. If you would like the same thing to occur around your meeting transcripts and legislation you need to change the format to make the data referenceable, commentable and easily queried by a programming language.  </p>\n<p>I believe there are five steps to opening up Parliamentary data:<br />\n1 . Data Copyright<br />\n2 . Making raw data available<br />\n3 . Marking up data with semantic information<br />\n4 . Making data linkable<br />\n5 . exposing data through APIs  </p>\n<p>each of these parts will now be discussed.  </p>\n<p>::: 1 . Data Copyright  </p>\n<p>Publishing data online holds little value if the data has not been licensed for reuse. I suggest all parliamentary publications be made available under a creative commons copyright, so that anyone can republish commercially or otherwise.  </p>\n<p>::: 2 . Making Raw data available.  </p>\n<p>It is important that the raw data dumps which make any application possible are also available to the public. The data should be available be with no style information, no scripting nothing but pure, unadulterated data. While there is value in Parliament building websites/applications it is far more important that developers have equal access to the original data so they can build other applications without the unaffected by the preconceptions of parliament.uk developers.  </p>\n<p>Currently most parliamentary publications are in PDF form. This causes a number of problems :<br />\n1 .. Individual pages and sections are not indexed by search engines.<br />\n2 .. It is difficult to programmatically extract data from a PDF.<br />\n3 .. It is not possible to reference particular sections of a document.  </p>\n<p>::: 3 . Marking up data with semantic information  </p>\n<p>Theyworkforyou.com have put together a basic template of how parliament can improve the semantics of parliamentary publications. More details of their suggestions can be found at the following address :  </p>\n<p>http://www.theyworkforyou.com/freeourbills/techy  </p>\n<p>I fully endorse these suggestions. If followed, they would make it a great deal easier for developers like me to build new and richer interfaces because it makes the data more meaningful.  </p>\n<p>::: 4 . Making data linkable  </p>\n<p>When writing the paper it was particularly difficult to find the references from transcripts of your Committee's meetings. It was sent to me in the following form :  </p>\n<p>\"The transcript of the meetings the Committee has had as part of its inquiry are available here:  </p>\n<p>http://www.publications.parliament.uk/pa/ld/lduncorr.htm#info<br />\n(See in particular questions 78, 85 and 86 of the 1 April meeting).\"  </p>\n<p>Finding the information required the following steps to be taken:<br />\n1 .. clicking the above link  </p>\n<p>2 .. Searching for the meeting on the 1 April<br />\n3 .. clicking another link which downloaded a big PDF file<br />\n4 .. Waiting for the entire document to download  </p>\n<p>5 .. Searching the pdf for question 78<br />\n6 .. Searching the pdf for question 85<br />\n7 .. Searching the pdf for question 86  </p>\n<p>I would like to see an implementation where clicking the following three URLs would take you straight to view each question, allow you to read its answer and comment against either.  </p>\n<p>1 .. http://www.publications.parliament.uk/InformationCommittee/PeopleAndParliament/Meetings/1April09/Question78<br />\n2 .. http://www.publications.parliament.uk/InformationCommittee/PeopleAndParliament/Meetings/1April09/Question85<br />\n3 .. http://www.publications.parliament.uk/InformationCommittee/PeopleAndParliament/Meetings/1April09/Question86  </p>\n<p>If the information is published in HTML files which are being indexed by Google the bills will be findable in google and extend your outreach to every single user of google.  </p>\n<p>The simplest way to expose data on the web is to break it down into small individually addressable sections each of which has a unique URL. These URLs can then be sent round in emails, added to a user's favorites or programmatically interrogated.  </p>\n<p>::: 5 . Exposing data through APIs  </p>\n<p>An Application Programming Interface (API) provides developers an interface for interacting with a data set easily. By making it possible to programatically search legislation and comment against a particular section from a remote site, it becomes much easier for people to build new interfaces for the available data. A good API would make it really easy to build new ways of browsing, searching and commenting on legislation.  </p>\n<p>Data should be exposed so that it can be presented in ways never expected by those collating the data. It is through this approach that you help people to view and, most importantly, interact with both Houses regarding proposed legislation.  </p>\n<p>A good API will make data available in a number of different formats. HTML, XML and JSON are a good starting point. From the earliest possible opportunity any code being used to expose data should be open sourced so that developers can extend the existing code base without needing to start from scratch. Not only does this allow people to build things more quickly, it allows developers to extend functionality and form a community of developers working together to improve the nations data infrastructure.  </p>\n<p>If Parliament wants to engage with people it will be a great deal easier on sites they already visit rather than the parliament.uk site. You cannot expect to engage the majority of the electorate at parliament.uk. It needs to be made particularly easy to integrate the goings on of both Houses into any website so that useful (relevant) data can be pulled in about a given subject.  </p>\n<p>A site about digital rights and copyright should be able to make a call to the API which looks for any recent mentions of \"Digital Rights\" and \"Copyright\" and can then embed the results in its own site. I also suspect that providing functionality to comment against the results would massively increase the potential of both Houses to engage with the electorate.  </p>\n<p>Below I have put together a general criteria for exposing data on the web :<br />\n1 .. The data should be indexable and discoverable in google/other search engines.<br />\n2 .. The data should be exposed using open data formats (HTML, oof)<br />\n3 .. The data should be licensed for re-use, even by commercial organisations.<br />\n4 .. It should be possible to browse the data in a web browser.<br />\n5 .. Make the original data set available.<br />\n6 .. Maintain a consistent interface for developers to build against.<br />\n7 .. Any code used to abstract away from the data should be open sourced.<br />\n8 .. Any semantics that can be added to data are beneficial.<br />\n9 .. There should not be separate systems for MPs and the public. Whatever system MPs use to look up bills, track their progress through parliament, find out amendments etc should be available to the public.  </p>\n<p>The following criteria are not essential but I suspect could have a major effect on parliaments ability to interact with the people online :<br />\n1 .. the information should have a plain English summary. Often bills are full of jargon that makes them incomprehensible to many. A good example is the creative commons licenses. These have a plain English version and a legalspeak version.<br />\n2 .. Electronic book support. All bill, minutes etc should be available in a non-proprietary electronic book format (eg epub) for download.  </p>\n<p>Please note all that all the above should be possible for very little cost. All the software required is available for free with open source software licenses. The primary cost should be for one or two developers who work with the community to expose data based on user/developer feedback.</p>",
        "tags": [
            "data",
            "osmososft"
        ]
    },
    {
        "titleSlug": "free-our-bills",
        "title": "Free our Bills",
        "date": "2008-03-26",
        "markup": "<p>For those of you that have not already seen <a href=\"http://www.theyworkforyou.com/\">http://www.theyworkforyou.com/</a> please go and check it out now. Its been around for a good few years now but I was particularly pleased to see their recent action list (<a href=\"http://www.theyworkforyou.com/freeourbills/\">Free our Bills</a>) has gained support from David Cameron. Im sure this will make lots of the \"Give us our data back\" folk happy.  </p>\n<p>[youtube=http://www.youtube.com/watch?v=ter8T5B8ojI]  </p>\n<p>In relation to <a href=\"http://mulqueeny.wordpress.com/\">Emma Mulqueenys</a> point about <a href=\"http://mulqueeny.wordpress.com/2008/03/19/links-libel-and-law/\">Links, libel and law</a>. My linking to Mr Cameron does not in anyway suggest support for his views except in the Free our Bills case. I am simply linking to an article which I have read/watched and found sufficiently interesting to share with others.</p>",
        "tags": [
            "cameron",
            "freeourbills",
            "mysociety",
            "osmososft",
            "theyworkforyou"
        ]
    },
    {
        "titleSlug": "google-images-in-tiddlywikiand-maybe-flickr",
        "title": "Google Images in TiddlyWiki...and maybe flickr?",
        "date": "2008-01-21",
        "markup": "<p>After playing with the <a href=\"http://simonmcmanus.com/2008/01/15/server-side-search-for-cctiddly/\" title=\"ccTiddly server side search\">server side search</a> for <a href=\"http://www.tiddlywiki.org/wiki/CcTiddly\" title=\"ccTiddly\">ccTiddly</a> and knowing there were some project on the horizon that wanted to integrate google search into tiddlywiki results I decided to add google search into <a href=\"http://tiddlywiki.com\" title=\"tiddlywiki\">TiddlyWiki</a>. An example of which can be found <a href=\"http://wikidev.osmosoft.com/searchgoogle\" title=\"google search tiddlywiki example\">here.</a>  </p>\n<p>As an extension to that I decided to add a google images search.  </p>\n<p>I have uploaded an example to <a href=\"http://tiddlyspot.com/\" title=\"tiddlyspot\">Tiddlyspot</a> at:  </p>\n<p><a href=\"http://imgsearch.tiddlyspot.com/\" title=\"Google Images search Tiddlywiki Example\">http://imgsearch.tiddlyspot.com/</a>  </p>\n<p><strong>The tiddlers which make it all work&nbsp; are:</strong>  </p>\n<p><a href=\"http://imgsearch.tiddlyspot.com/#googleImage\" title=\"googleImage tiddler\">http://imgsearch.tiddlyspot.com/#googleImage</a>  </p>\n<p><em>Overrides search onKeyPress function so that tw searches google when the users presses enter.</em>  </p>\n<p><a href=\"http://imgsearch.tiddlyspot.com/#MarkupPostHead\" title=\"MarkupPostHead\">http://imgsearch.tiddlyspot.com/#MarkupPostHead</a>  </p>\n<p><em>Includes the google javascript file, you will need to change the API key (at the end of the URI) if using on a domain other than Tiddlyspot</em>.  </p>\n<p><a href=\"http://imgsearch.tiddlyspot.com/#imageView\" title=\"ImageView Tiddler\">http://imgsearch.tiddlyspot.com/#imageView</a>  </p>\n<p><em>Code that creates the drop down list of images.</em>  </p>\n<p><a href=\"http://imgsearch.tiddlyspot.com/#taggedTemplateTweak\" title=\"taggedTemplateTweak tiddler\">http://imgsearch.tiddlyspot.com/#taggedTemplateTweak</a>  </p>\n<p><em>Allows tiddlers tagged \"image\" to use a different template.</em>  </p>\n<p><a href=\"http://imgsearch.tiddlyspot.com/#EditTemplate\" title=\"EditTemplate tiddler\">http://imgsearch.tiddlyspot.com/#EditTemplate</a>  </p>\n<p><em>Adds images link to the EditTemplate. Im sure there is a better way of doing this.</em>  </p>\n<p><a href=\"http://imgsearch.tiddlyspot.com/#ImageViewTemplate\" title=\"ImageViewTemplate tiddler\">http://imgsearch.tiddlyspot.com/#ImageViewTemplate</a>  </p>\n<p><em>It all works by storing the URI to the thumbnail in the tiddler title. With this template we hide the title.</em>  </p>\n<p>and <strong><a href=\"http://www.flickr.com/\" title=\"flickr\">Flickr</a>?</strong>  </p>\n<p>I started playing with the <a href=\"http://www.flickr.com/services/api/\" title=\"flickr api\">flickr API</a>, its returning the results in <a href=\"http://en.wikipedia.org/wiki/JSON\" title=\"JSON\">JSON</a> but I have not had time to integrate that into the above script.  </p>\n<p>If you look at the <a href=\"http://wikidev.osmosoft.com/flickr#flickr\" title=\"flckr tiddlers\">flickr tiddler</a> its currently searching for \"simonmcmanus\"  </p>\n<p><a href=\"http://wikidev.osmosoft.com/flickr\" title=\"http://wikidev.osmosoft.com/flickr\">http://wikidev.osmosoft.com/flickr</a>  </p>\n<p>Given that im now on holiday its not going to get done for quite a while. If anyone wants to make a tiddlywiki flickr plugin the pieces are all in place.  </p>\n<p>Comments and suggestions welcome as usual but pls be aware that I may not respond for a good few weeks. :)</p>",
        "tags": [
            "API",
            "ctiddly",
            "flickr",
            "google ajax search",
            "images",
            "mashup",
            "Osmosoft",
            "osmososft",
            "SimonMcManus",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "how-to-save-your-enterprise-some-money",
        "title": "How to save your Enterprise some money",
        "date": "2008-04-11",
        "markup": "<p>Here is something I have noticed: the people that specify enterprise software requirements and success criteria are rarely the end user. They are business owners and spreadsheet supervisors.  </p>\n<p>The software produces great reports but the experience to the end user is rarely properly considered. The tendency is to meet the objectives of the business owner rather than the needs of end users.  </p>\n<p>So this blog post is about saving money. Well, time is money…right? Take an expenses system. If your employees spend their time trying to work out how to use the system, that's time not being spent making money.  </p>\n<p>Imagine saving every employee 5-10 minute each month. Across 100,000 people, that's 100,000 - 200,000 man hours a year!  </p>\n<p>Enterprise software pays a reasonable amount of attention to accessibility but not enough to usability. Now I'm no user experience expert but I have been exploring some <a href=\"http://en.wikipedia.org/wiki/Experience_design\" title=\"//en.wikipedia.org/wiki/Experience_design\">experience design</a> techniques with <a href=\"http://philwhitehouse.blogspot.com/search/label/experience%20design\" title=\"//philwhitehouse.blogspot.com/search/label/experience%20design\">Phil</a> recently (for the new ccTiddly macros). I think the correct use of such techniques within the enterprise would make a massive difference. In fact any technique that stops developers thinking so much like developers and more like the poor sod who's going to be relying on the software the better.  </p>\n<p>Imagine being able to apply the time savings across each of <a href=\"http://confusedofcalcutta.com/\" title=\"//confusedofcalcutta.com\">JP's</a> <a href=\"http://confusedofcalcutta.com/2006/03/30/four-pillars-time-for-a-recap/\" title=\"//confusedofcalcutta.com/2006/03/30/four-pillars-time-for-a-recap/\">four pillars</a> : Search, Syndication, Conversation and fulfillment.</p>",
        "tags": [
            "BT",
            "enterprise",
            "osmososft",
            "tiddlywiki"
        ]
    },
    {
        "titleSlug": "enhanceconf-scholarship",
        "title": "EnhanceConf Scholarship",
        "date": "2016-02-14",
        "markup": "<p>&nbsp;  </p>\n<p>One of the big motivations behind <a href=\"http://enhanceconf.com\">EnhanceConf</a> &nbsp;was education. Conferences are a great place to learn but the associated costs often make them difficult for many to attend. In the spirit of progressive enhancement, we want to make EnhanceConf available to the widest possible audience.  </p>\n<p>We have allocated a number of scholarship tickets for people who would like to attend but cannot pay for a ticket.  </p>\n<h3 id=\"howtoapply\">How to Apply</h3>\n<p>Send a short email to info@enhanceconf.com with a title of EnhanceConf Scholarship.  </p>\n<p><strong>In your email please include:</strong>  </p>\n<ul>\n<li>Who are you?  </li>\n<li>What do you do?  </li>\n<li>Why would you like the scholarship?  </li>\n</ul>\n<h3 id=\"whoshouldapply\">Who should apply:</h3>\n<p>The scholarships are available to anyone not normally able to attend a conference. If that might be you (even if you're not in one of the groups below) then please apply.  </p>\n<p>Some of the groups we are especially keen to support include:  </p>\n<ul>\n<li>Ethnic minorities </li>\n<li>Women</li>\n<li>LGBTQIA+</li>\n<li>Disabled people</li>\n<li>Charity workers</li>\n<li>Education / students</li>\n<li>Open source projects</li>\n<li>Industry newcomers</li>\n</ul>\n<p>If you have any questions, just send an email to info@enhanceconf.com  </p>\n<p><strong>Details:&nbsp;</strong>  </p>\n<p>All emails will be treated in the strictest confidence, we will not announce who the scholarships go to but you’re welcome to say so yourself.  </p>\n<p>Successful applicants will get a standard conference ticket.  </p>\n<p>We are only able to cover the cost of the conference ticket so please consider your travel costs before applying.</p>",
        "tags": [
            "EnhanceConf",
            "scholarship",
            "eduation",
            "progressive-enhancement"
        ]
    },
    {
        "titleSlug": "speclate",
        "title": "Speclate",
        "date": "2016-08-13",
        "markup": "<p>The <a href=\"http://lnug.org\">London Node User group website</a> is a static site hosted on <a href=\"https://pages.github.com/\">github pages,</a> it renders at build time, in the browser and works offline using <a href=\"http://github.com/simonmcmanus/speclate\">Speclate</a>.  </p>\n<p>The idea behind <a href=\"https://github.com/simonmcmanus/speclate\">Speclate</a>&nbsp;is you have a single file (a spec) which defines how your routes, pages&nbsp;and components fit together. A spec can be used to generate a static site and lots more too. &nbsp;With the help of <a href=\"https://github.com/simonmcmanus/speclate-router\">speclate-router</a>&nbsp;we generate a router which swaps out the appropriate HTML elements to transition nicely between pages.  </p>\n<p>Let's look at a simple example:  </p>\n<pre><code class=\"js language-js\">module.exports = {  \n     '/': {  \n         page: 'home',  \n         selectors: {  \n             title: 'Home',  \n             'a.home': {  \n                 className: 'active'  \n             }  \n         }  \n     },  \n     '/contact.html': {  \n         page: 'contact',  \n         selectors: {  \n             title: 'Contact',  \n             'a.contact': {  \n                 className: 'active'  \n             }  \n        }  \n     }  \n};\n</code></pre>\n<p>This spec will produce index.html and contact.html based on the&nbsp;contents of <a href=\"https://github.com/simonmcmanus/speclate-example/blob/master/pages/home/home.html\">/pages/home/home.html</a> and <a href=\"https://github.com/simonmcmanus/speclate-example/blob/master/pages/contact/contact.html\">/pages/contact/contact.html</a>&nbsp;and the values in the selectors object.  </p>\n<p>At the moment Speclate relies on a couple of conventions. <a href=\"https://github.com/simonmcmanus/speclate-example/blob/master/pages/layout.html\">/pages/layout.html</a> needs to contain an element with an id of \"container\"for the pages to be appended to. This will move to config eventually.  </p>\n<p>I've created a<a href=\"https://github.com/simonmcmanus/speclate-example\">&nbsp;simple example app</a>. You can see the <a href=\"http://speclate-example.netlify.com/\">demo running</a>&nbsp;on <a href=\"http://netlify.com\">Netlify</a>, and get the <a href=\"https://github.com/simonmcmanus/speclate-example\">source code on</a> <a href=\"https://github.com/simonmcmanus/speclate-example\">GitHub</a>. You can also read more about the spec format in the <a href=\"https://github.com/simonmcmanus/speclate\">speclate&nbsp;</a><a href=\"https://github.com/simonmcmanus/speclate\">readme</a>.  </p>\n<h2 id=\"rendering\">Rendering</h2>\n<p>Underneath the hood Speclate uses <a href=\"https://github.com/simonmcmanus/sizlate\">Sizlate</a> which makes extensive use of <a href=\"https://sizzlejs.com\">Sizzle</a>, the selector engine from jQuery. &nbsp;On the server, <a href=\"https://github.com/cheeriojs/cheerio\">Cheerio</a> provides a fast DOM implementation&nbsp;for generating the markup.  </p>\n<p>Rendering can be broken down into three steps. Firstly we replace the main page (using #container), then we apply the page spec, this will apply selectors and components to the page and lastly we apply the global selectors to the markup. This allows us to effect elements in the main layout such as the page title.  </p>\n<p>In the example there are three commands in the <a href=\"https://github.com/simonmcmanus/speclate-example/blob/master/package.json\">package.json</a>&nbsp;to generate the<a href=\"http://speclate-example.netlify.com/\">&nbsp;site</a>:  </p>\n<pre><code class=\"js language-js\">\"scripts\": {\n    \"markup\": \"speclate\",\n    \"client\": \"browserify ./client/router.js &gt; ./client/router-compiled.js\",\n    \"build\": \"npm run client &amp;&amp; npm run markup\"\n}\n</code></pre>\n<p>'npm run markup' will generate a functional HTML site. 'npm run client' uses browserify to generate the <a href=\"https://github.com/simonmcmanus/speclate-example/blob/master/client/router.js\">client-side router</a> and 'npm run build' generates the whole site by running both commands.  </p>\n<h2 id=\"offline\">Offline</h2>\n<p>Currently, the <a href=\"http://lnug.org\">LNUG</a>&nbsp;website works offline using an&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache\">AppCache.manifest</a> file. That file is generated from the spec like so:  </p>\n<pre><code class=\"js language-js\">speclate.site.appCache(spec, [  \n'/css.css',  \n'/images/lnug-logo.svg'  \n])\n</code></pre>\n<p>We use <a href=\"https://github.com/gr2m/appcache-nanny\">appCache Nanny</a> to handle updates but the experience is still not great. The latest releases of Speclate now use the fetch API so it opens up lots of possibilities with Service Workers.</p>",
        "tags": [
            "progressive-enhancement",
            "london",
            "sizlate",
            "lnug",
            "speclate",
            "static-sites"
        ]
    },
    {
        "titleSlug": "sublime-3-build-system-to-run-npm-test",
        "title": "Sublime 3 build system to run NPM Test",
        "date": "2014-02-19",
        "markup": "<p>In Sublime 3, &nbsp;go to `tools &gt; build system &gt; new build system` and paste the below into the file:</p>\n<blockquote>\n  <p>{<br />\n  \"working_dir\": \"${project_path:${folder:${file_path}}}\",<br />\n  \"cmd\": [\"npm\", \"test\"]<br />\n  }</p>\n</blockquote>\n<p>Now you will have a build system that will run the NPM test command in your current project directory.</p>",
        "tags": [
            "node",
            "sublime",
            "npm",
            "test"
        ]
    },
    {
        "titleSlug": "cross-browser-css3-gradient",
        "title": "Cross Browser CSS3 Gradient",
        "date": "2011-04-05",
        "markup": "<p>Publishing this here for my own convenience.  </p>\n<pre><code class=\"js language-js\">background: #FF8D2C; /\\* for non-css3 browsers \\*/\n\n/\\* For WebKit (Safari, Google Chrome etc) \\*/\n\nbackground: -webkit-gradient(linear, left top, left bottom, from(#FFFFFF), to(#FF8D2C));\n\n/\\* For Mozilla/Gecko (Firefox etc) \\*/\n\nbackground: -moz-linear-gradient(top, #FFFFFF, #FF8D2C);\n\n/\\* For Internet Explorer 5.5 - 7 \\*/\n\nfilter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#FFFFFF, endColorstr=#FF8D2C);\n\n/\\* For Internet Explorer 8 \\*/\n\n\\-ms-filter: \"progid:DXImageTransform.Microsoft.gradient(startColorstr=#FFFFFF, endColorstr=#FF8D2C)\";\n</code></pre>",
        "tags": [
            "osmososft",
            "css",
            "gradient"
        ]
    },
    {
        "titleSlug": "http-requests-with-nodejs",
        "title": "HTTP requests with Node.js",
        "date": "2012-04-11",
        "markup": "<p>I couldn't find this code anywhere on the internets yesterday, posting here for my own convenience.  </p>\n<pre><code class=\"js language-js\">\n</code></pre>\n<p>js\nvar options = {</p>\n<p>host: 'api.twitter.com',</p>\n<p>port: 80,</p>\n<p>path: '/path',</p>\n<p>method: 'GET',</p>\n<p>encoding: 'utf8'</p>\n<p>};</p>\n<p>http.get({ host: options.host, path: options.path }, function(res2){</p>\n<pre><code>var data = [];\n\nres2.on('data', function(chunk) { \n\n    data.push(chunk); \n\n});\n\n\n\nres2.on('end', function() { // wait for the request to finish\n\n    res.json(data.join('')); \n\n})\n</code></pre>\n<p>});</p>\n<pre><code>\n</code></pre>",
        "tags": [
            "chunk data",
            "http",
            "node",
            "js"
        ]
    },
    {
        "titleSlug": "forcing-garbage-collection-with-nodejs-and-v8",
        "title": "Forcing Garbage Collection with Node.js and V8",
        "date": "2013-01-03",
        "markup": "<p>I'm in the middle of looking for some memory leaks at the moment, in order to isolate them I wanted to confirm exactly how much memory was being used by a given line of code after garbage collection.  </p>\n<p>Fortunately V8 allows you to manually force garbage collection from within Javascript.  </p>\n<p>When you run your node script just add the option: '--expose-gc'  </p>\n<p>e.g:  </p>\n<pre><code class=\"js language-js\">node --expose-gc test.js\n</code></pre>\n<p>And then from within the Javascript just do:  </p>\n<pre><code class=\"js language-js\">global.gc();  \n</code></pre>\n<p>That's it, good luck finding those leaks!</p>",
        "tags": [
            "node",
            "garbage-collection",
            "memory",
            "leaks"
        ]
    },
    {
        "titleSlug": "expressjs-publicstatic-directory-in-one-line",
        "title": "Express.js public/static directory in one line",
        "date": "2012-04-12",
        "markup": "<p>If you want to serve a static directory from express you can do it with the following line of code.  </p>\n<p>The first parameter is the route, the second parameter is the path to the directory.  </p>\n<pre><code class=\"js language-js\">\n</code></pre>\n<p>js\napp.use('/public', express.static(__dirname + '/public'));</p>\n<pre><code>\n</code></pre>\n<p>Posting here for my own convenience.</p>",
        "tags": [
            "express",
            "public",
            "files",
            "static",
            "code"
        ]
    },
    {
        "titleSlug": "learning-from-single-page-web-applications",
        "title": "Learning from Single Page Web Applications",
        "date": "2012-01-05",
        "markup": "<p>I've spent the last three years working on single page applications of various shapes and sizes. I don't like em, &nbsp;this post isn't about why but I will just say I like data to be exposed at the lowest level (HTTP) and not require Javascript to turn it into something useful. &nbsp; All that being said I've been lucky enough to work with some clever folks and the end results have all been very interesting and pushed boundaries in their own way.  </p>\n<p>At <a href=\"http://2011.full-frontal.org/\">Full Frontal</a>&nbsp;I enjoyed listening to&nbsp;<a href=\"https://twitter.com/#!/slicknet\">Nicholas Zakas</a>&nbsp;talking about <a href=\"http://www.slideshare.net/nzakas/scalable-javascript-application-architecture\">Scalable Javascript Application Architecture</a>. In many ways he described the architecture we used for the <a href=\"http://configurator.vw.com\">Volkswagen Configurator</a>. Earlier in the day <a href=\"http://hawksworx.com/\">Phil Hawksworth</a> had been talking about <a href=\"http://speakerdeck.com/u/philhawksworth/p/excessive-enhancement\">Excessive Enhancement</a>.  </p>\n<p>It struck me that while most front end MVC&nbsp;frameworks make it easy to build Javascript applications, making them work as web applications (without Javascript) becomes much more difficult. This is largely due to the fact that you define and build your application, templates/page structure using the browser's Javascript interpreter.  </p>\n<p>I'm of the view that if you architect something properly you can get the same full experience provided by Javascript applications but still have a reliable fallback for those who do not have Javascript enabled. That is what I call a proper web application.  </p>\n<p>In the back of my mind I've been thinking about Charlie Robbins excellent post:&nbsp;<a href=\"http://blog.nodejitsu.com/scaling-isomorphic-javascript-code\">Scaling Isomorphic Javascript Code</a>&nbsp;which talks elegantly about why MVC might not be the best pattern in an environment where you can execute Javascript on the server. He suggests the Resource-View-Presenter pattern.  </p>\n<p>It seemed that the way we currently split our frameworks between front and back end reduces reuse of configuration/code and actually encourages duplication.  </p>\n<p>I wanted to try defining all of these things on the server, so they could be consumed on the server and client.  </p>\n<p>As soon as the talk finished I found myself writing code. This blog post talks about what I have been building and why.  </p>\n<h2 id=\"sharingurlsbetweenclientandserver\">Sharing URLs between client and server</h2>\n<p>Allow me to deviate for a moment.  </p>\n<p>On large applications it's common practice to split the code and teams between front and back end developers. &nbsp;This often results in duplication and&nbsp;unnecessary&nbsp;bugs. &nbsp;A common example being maintaining URLs in two places. &nbsp;In the browser we might a have a URLs object:  </p>\n<pre><code class=\"js language-js\">namespace.urls = {\n    login: '/login',  \n    user: '/user/:username',\n    ....\n}\n</code></pre>\n<p>And then on the server the same URLs would be defined possibly using a different syntax. &nbsp;Changing one does not change the other, and with split teams this can result in&nbsp;unnecessary&nbsp;bugs.  </p>\n<p>With <a href=\"http://nodejs.org/\">Node.js</a> it's&nbsp;particularly&nbsp;easy to share exactly the same URL object on the client and server. If you ensure your HTML links are populated from the same URL object your application will continue to function when URLs change.  </p>\n<p>This is what I've been doing in some of my Node apps:  </p>\n<pre><code class=\"js language-js\">(function(exports){\n      exports.HOME = '/';\n    exports.LOGIN = '/login';\n    exports.USERS = '/users';\n    exports.USER = '/users/:user';\n    // also add URL functions here that can be shared between client and server.\n    exports.build = function(str, tokens) {\n        for(token in tokens){\n            str = str.replace(':'+token, tokens\\[token\\]);\n        }\n        return str;\n    };\n})(typeof exports === 'undefined' ? namespace.urls={} : exports);\n</code></pre>\n<p>That allows it to be used as a Node module using require('./urls.js') and when served to the browser the URLs are available at namespace.urls.  </p>\n<p>I've been using&nbsp;<a href=\"http://expressjs.com/\">Express.js</a>,&nbsp;the parameter sytax seems to work nicely with <a href=\"https://github.com/PaulKinlan/leviroutes\">Levi routes</a> on the front end.  </p>\n<p>This seems like common sense. It's a fine example of <a href=\"http://en.wikipedia.org/wiki/Don't_repeat_yourself\">DRY.</a> &nbsp;Define as much as possible in server-side JS and then allow it to be consumed by the client-side JS reusing as much logic as possible.  </p>\n<h2 id=\"reusablemodules\">Reusable modules</h2>\n<p><a href=\"http://tiddlywiki.com/\">TiddlyWiki</a> has the concept of plugins which are essentially just a chunk of HTML/CSS/JS relevant to a particular piece of functionality which could be added to HTML using a special syntax:  </p>\n<pre><code class=\"js language-js\">&lt;&lt;pluginName&gt;&gt;\n</code></pre>\n<p>On the <a href=\"http://configurator.vw.com\">Volkswagen Configurator</a> we also have the concept of UI's which were reusable chunks of HTML/CSS/JS which could be appended into any DOM node.  </p>\n<p>Both are essentially variants of the&nbsp;<a href=\"http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth\">Module Pattern</a>&nbsp;with added support for HTML and CSS as part of the module. &nbsp;Both methods work really nicely just so long as you've got Javascript turned on.  </p>\n<p>I started to build a simple Node.js app which could parse a modules folder and serve the resources at appropriate URLs. See the following folder structure:  </p>\n<p><img src=\"https://img.skitch.com/20120102-cyxfm2b6pgs8c5fasj7b1ppg5b.jpg\" alt=\"\" title=\"Folder Strucutre\" />  </p>\n<p>Generated the following URLs:  </p>\n<pre><code class=\"js language-js\">/contact.css\n/contact.html\n/contact.js\n/content.css\n/content.html\n/content.js\n/flickr.css\n/flickr.html\n/flickr.js\n</code></pre>\n<p>You will notice there is an app.js file in the flickr folder which contains the server-side JS required by the module. Later this will provide a getData method to asynchronously&nbsp;generate a templating object which can populate the HTML.  </p>\n<h2 id=\"defineyourviewsontheserver\">Define your views on the server</h2>\n<p>In browserland it's really easy to mess around with the DOM. You can completely transform a page, especially&nbsp;when you start appending modules of HTML/CSS/JS to DOM nodes. The problem comes when you want to show the same view to something that doesn't understand Javascript, an RSS feed or search engine for example.  </p>\n<p>I decided to create a view specification which could be read by the server and also served to the browser. Doing so should make it really easy to render the exact same HTML with or without Javascript enabled. &nbsp;Using <a href=\"https://github.com/simonmcmanus/sizlate\">Sizlate</a>&nbsp;I started with this (it has since changed):  </p>\n<pre><code class=\"js language-js\">var views = [{\n    url: '/user/:user'  \n    view: 'userpage',\n    modules: [\n        'photos',\n        'login',\n        'timeline'\n    ]\n }];\n</code></pre>\n<p>In the following example I have left out the JS and CSS files.&nbsp; The view is just a folder containing a HTML file of the same name and an optional app.js (as with the modules). It assumes the view HTML file contains a &nbsp;tag with a id corresponding&nbsp;to each of the modules specified for the view.  </p>\n<p>I like this simple approach but in order for it to scale I may soon need to start using HTML data attributes instead of ids. This is what the folder structure looked like:<br />\n<img src=\"https://img.skitch.com/20120102-naqptbhb5cn63tgcx7gky8f83x.jpg\" alt=\"\" />  </p>\n<p>project/views/userpage/userpage.html (the view HTML file) contains:  </p>\n<pre><code class=\"js language-js\">&lt;html&gt;\n&lt;body&gt;\n    &lt;nav&gt;...&lt;/nav&gt;\n    &lt;div id=\"photos\" /&gt;\n    &lt;div id=\"login\" /&gt;\n    &lt;div id=\"timeline\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>The end result would look something like this:  </p>\n<pre><code class=\"js language-js\">&lt;html&gt;\n&lt;body&gt;\n    &lt;nav&gt;...&lt;/nav&gt;\n    &lt;div id=\"photos\"&gt;\n        .. contents of /modules/photos/photos.html appended in here\n    &lt;/div&gt;\n    &lt;div id=\"login\"&gt;\n        .. contents of /modules/login/login.html appended in here\n    &lt;/div&gt;\n&amp;nbsp; &amp;nbsp; &lt;div id=\"timeline\"&gt;\n        .. contents of /modules/timeline/timeline.html appended in here\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2 id=\"concatenationnbspvscaching\">Concatenation&nbsp;vs Caching</h2>\n<p>At this stage I was able to build a sample app with my re-usable modules and a view. I thought it would be useful to concatenate all the JS and CSS files together for each view. It turns out I was wrong.  </p>\n<p>In a situation where you're reusing modules across multiple views concatinating per view makes no sense because you end up serving the same CSS across multiple URLs. The CSS/JS will be cached per view, not per module.  </p>\n<p>I decided it was actually better to use the URLs generated for the CSS/JS&nbsp;by the modules so they can be cached at the most granular level. &nbsp;Both methods will be possible.&nbsp; Currently CSS modules are served inline with the module HTML (not the document HEAD). &nbsp;There will be some work to ensure that all CSS LINK tags are moved to the document HEAD before the view is rendered. <a href=\"https://github.com/tmpvar/jsdom\">JSDOM</a> should make that quite easy.  </p>\n<h2 id=\"historyapi\">History API</h2>\n<p>With views and modules defined on the server I've started to put together a front end framework which can consume the same application specification and make the whole experience a bit more&nbsp;pleasant. &nbsp;I'm currently experimenting with generating popstate listeners from the specification which can then fire off the default/custom transitions between views.  </p>\n<h2 id=\"whatsgoingonhere\">Whats going on here?</h2>\n<p>Essentially I have started building a framework for mixing up reusable modules of HTML/CSS/JS in ways usually associated with Javascript applications but with progressive&nbsp;enhancement&nbsp;as one of its core values.  </p>\n<p>The functionality described above will almost certainly change. &nbsp;What I have built so far is a simple proof of concept to test the best way to define views in this way using Sizlate.  </p>\n<p>At the moment I'm working on a sample app pulling in data from Flickr to demonstrate how it might all fit together in the real world. &nbsp;Its pretty messy and requires lots of work but you can see the code <a href=\"https://github.com/simonmcmanus/framework\">here</a>.  </p>\n<p>I thought it was worth blogging about my approach just to get some feedback. Please do let me know what you think. All idea's, contributions,&nbsp;criticisms&nbsp;welcomed.  </p>\n<p>I'm going to be talking about Sizlate at the London Node user group on the 25th January at the Forward Offices in Camden, London. <a href=\"http://lnugjanuary12.eventbrite.co.uk/\">Please register here if you would like to attend.</a></p>",
        "tags": [
            "application-architecture",
            "application-templates",
            "javascript-application",
            "javascript-applications",
            "single-page-applications",
            "Image",
            "lnug"
        ]
    },
    {
        "titleSlug": "building-on-the-web",
        "title": "Building on the Web",
        "date": "2011-02-11",
        "markup": "<p><strong>Foundations</strong>  </p>\n<p>When building a house the foundations are fundamental to it's structural&nbsp;integrity. Without good strong foundations the house is weak and liable to fall over at any moment.  </p>\n<p>Things on the web also have foundations in the form of HTML and URIs. &nbsp;JavaScript can then be layered on top to improve the experience. It's called progressive enhancement and people seem to be forgetting about it these days.  </p>\n<p>It's pretty simple, build your HTML and CSS &nbsp;first and then override the default behaviours with JavaScript. &nbsp;This will ensure you are building on solid foundations.  </p>\n<p>When generating HTML on the server, you can easily re-use it with JavaScript. Its far better than generating the HTML in the browser (with JavaScript) and either ignoring Search engines or having to duplicate your logic on the server for SEO, accessibility and things like RSS feeds.  </p>\n<p>Here are some rather sweeping statements:  </p>\n<p><strong>1.</strong> JavaScript should NEVER be used&nbsp;to process data in the browser.  </p>\n<p><strong>2.</strong> JavaScript should rarely be used in the browser to generate html (sharing code with server-side JavaScript is acceptable).  </p>\n<p>I did warn you they were rather sweeping.  </p>\n<p>I've heard it said that if you want to provide an app/flash like experience you need to use JavaScript to render your pages: You need to build single page JavaScript apps.  </p>\n<p>history.pushState() tells us otherwise. You can read about it <a href=\"https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history\" title=\"history.pushState docs\">here</a>.  </p>\n<p>Basically it makes it possible for what we now call single page web apps to exist across multiple pages while still providing nice page transitions (no page refresh).  </p>\n<p><strong>history.pushState() - A Fallback</strong>  </p>\n<p>History.pushState is all well and good but it's only available in WebKit and Firefox(4) at the moment. &nbsp;Maybe that is why people are seeing <a href=\"http://www.isolani.co.uk/blog/javascript/BreakingTheWebWithHashBangs\">hashbangs</a> as an alternative solution. Personally I would rather fallback to a fragment identifier (#) only in situations where history.pushState is not available.  </p>\n<p>There would need to be a bit of JavaScript at the top of each page redirecting users to the appropriate fragment identifier in browsers that do not support pushState.  </p>\n<p>So when pushState is not available:  </p>\n<p>http://simonmcmanus.com/page.html  </p>\n<p>might redirect to :  </p>\n<p>http://simonmcmanus.com#page.html  </p>\n<p>which would then go and fetch the contents from  </p>\n<p>http://simonmcmanus.com/page.html  </p>\n<p>If a page is loaded with the fragment identifier in a browser that supports pushState the hash should be removed and pushState used.  </p>\n<p><strong>Summary</strong>  </p>\n<p>When you require JavaScript for templating and data processing you are on a very slippery slope to writing JavaScript applications.  </p>\n<p>We have for a long time been able to&nbsp;obfuscate our data with technologies like Flash, I for one have avoided these technologies because I believe that when we publish data properly on the web it becomes more re-usable, findable, accessible and actually has far greater potential.  </p>\n<p>By all means use JavaScript, but please don't rely on it.</p>",
        "tags": [
            "hashbang",
            "javascript-apps",
            "osmososft",
            "web",
            "apps",
            "progressive-enhancement",
            "pushState",
            "web-apps"
        ]
    },
    {
        "titleSlug": "enhanceconf-line-up",
        "title": "EnhanceConf line-up",
        "date": "2016-01-26",
        "markup": "<p>Over the last 6 months, with the help of some trusted advisors, I’ve been putting together the line-up for <a href=\"http://enhanceconf.com\">EnhanceConf</a>.  </p>\n<p>The whole event is dedicated to <a href=\"http://en.wikipedia.org/wiki/Progressive_enhancement\">progressive enhancement</a>, but what does that even mean in 2016? Well, that’s the point of EnhanceConf. We get to spend the 4th of March in The Great Room figuring it out.  </p>\n<p><a href=\"https://simonmcmanus.files.wordpress.com/2016/01/great-room.jpg\"><img src=\"https://simonmcmanus.files.wordpress.com/2016/01/great-room.jpg?w=300\" alt=\"great-room\" /></a>  </p>\n<p>We are going to start the day thinking about why we do progressive enhancement. <a href=\"http://natbuckley.co.uk/\">Nat Buckley</a> will look at many of the assumptions we make in modern web development. <a href=\"http://maban.co.uk/\">Anna Debenham</a> will then look at some of the unusual devices people use to interact with our sites/apps. <a href=\"https://twitter.com/stilkov\">Stefan Tilkov</a> will provide an architect's perspective.  </p>\n<p>In the second section, we are going to look at some real world examples. We’ve got <a href=\"https://twitter.com/misprintedtype\">Ola Gasidlo</a> from Styla/Hoodie and <a href=\"http://www.theguardian.com/profile/oliver-joseph-ash\">Oliver Joseph Ash</a> from the Guardian talking about their experiences making things work offline. <a href=\"https://twitter.com/ForbesLindesay\">Forbes Lindesay</a> will be talking about building apps that can render on the server and in the browser.  </p>\n<p>After lunch, we are going to think a bit more about design and UX. Does progressive enhancement constrain design? <a href=\"https://twitter.com/philhawksworth\">Phil Hawksworth</a> and <a href=\"http://stephen-waller.com/\">Stephen Waller</a> will debate. <a href=\"http://jensimmons.com/\">Jen Simmons</a> will explain why 2016 will be the year that web layouts change and how to use these new techniques as an enhancement. <a href=\"http://adamsilver.io/\">Adam Silver</a> will talk about embracing simplicity.  </p>\n<p>In the final section, we are going to look to the future. How can we build interfaces given how little we know about the people and devices using them? <a href=\"https://www.abilitynet.org.uk/robinchristopherson\">Robin Christopherson</a> will be talking about inclusive design. <a href=\"https://twitter.com/radiomorillo\">Stephanie Morillo</a> will talk about copy and what to think about when writing it. Aaron Gustafson will round off the event by talking about building for devices that don’t exist yet.  </p>\n<p>After each section, we are going to have 20 minutes of Q&amp;A run by <a href=\"https://twitter.com/adactio\">Jeremy Keith</a>.  </p>\n<p>As if that wasn't enough, the Planning Adaptive Interfaces <a href=\"http://enhanceconf.com/workshop.html\">workshop</a> provides a unique opportunity to get training from <a href=\"https://twitter.com/AaronGustafson\">Aaron Gustafson</a> while he's in London. We are giving a limited number of copies of Aaron’s e-book <a href=\"http://adaptivewebdesign.info\">Adaptive Web Design</a> with combined conference and workshop tickets.  </p>\n<p><a href=\"http://enhanceconf.com/tickets.html\">Reserve your seat</a></p>",
        "tags": [
            "EnhanceConf",
            "conference",
            "line-up",
            "progressive-enhancement"
        ]
    },
    {
        "titleSlug": "dotjs-ltd-one-year-old",
        "title": "DotJS Ltd - One Year Old",
        "date": "2014-04-08",
        "markup": "<p>One year ago today&nbsp;I formed my&nbsp;company <a href=\"http://dotjs.co.uk\">DotJS Ltd</a> offering Node.js consultancy services to London and beyond.</p>\n<p>It's been a bloody great year and I just wanted to say thank you to everyone that has helped me on my way.</p>\n<p>Thank you!</p>",
        "tags": [
            "node",
            "dotjs",
            "business",
            "london",
            "company"
        ]
    },
    {
        "titleSlug": "speclate-and-service-workers",
        "title": "Speclate and Service Workers",
        "date": "2016-10-12",
        "markup": "<p>I have alway been keen to provide a good offline experience for the <a href=\"http://lnug.org\">London Node user group</a> website. I’m pretty bad with directions and London is even worse with internet coverage. Knowing I can always get the map and address on my phone is very handy. We already use AppCache with the help of <a href=\"https://github.com/gr2m/appcache-nanny\">app-cache-nanny</a> but with its upcoming <a href=\"https://www.fxsitecompat.com/en-CA/docs/2015/application-cache-api-has-been-deprecated/\">depreciation</a> I wanted to investigate how service workers might improve the whole experience.  </p>\n<p><a href=\"http://github.com/simonmcmanus/speclate\">Speclate</a> is the tool we use to build the static LNUG website, it uses <a href=\"http://github.com/simonmcmanus/sizlate\">Sizlate</a> which is a basic templating engine allowing data to be inserted into HTML using the Sizzle selector engine from jQuery.  </p>\n<p>In this example we take a HTML&nbsp;string and modify the innerHTML of the h1 element:  </p>\n<p>https://gist.github.com/simonmcmanus/17e23f4bb3c3cd9e0afdcf09e11b226e#file-init-offline-js  </p>\n<p>https://gist.github.com/simonmcmanus/903b0ce6d2cb190bfbc4a50cc57c0b36  </p>\n<p>Sizlate can also take a DOM node when running in the browser:  </p>\n<p>https://gist.github.com/simonmcmanus/5d19c1918d0a58790f3040dac8afbb5d  </p>\n<p>Sizlate uses <a href=\"https://github.com/cheeriojs/cheerio\">Cheerio</a> to provide a fast DOM implementation at build time, in the browser it &nbsp;needs something with jQuery like API to access to the DOM.  </p>\n<p>Speclate extends Sizlate with the idea of components and pages. &nbsp;A spec.js file sits in the project root and defines the sites structure. Notably how the routes, pages, components and data all fit together. The exported Javascript object is used to combine the various HTML files that make up the pages. At build time it renders static HTML files for each page but it can also render just the parts of the page that change as users navigate around the site.  </p>\n<p>Here is a simple spec for a site with two pages:  </p>\n<p>https://gist.github.com/simonmcmanus/d91ca1949a91a49669d80d60ab49e9a9  </p>\n<p>Given that spec, three files need to be present:  </p>\n<ul>\n<li><p>./pages/home/home.html</p></li>\n<li><p>./pages/contact/contact.html</p></li>\n<li><p>./pages/layout.html</p></li>\n</ul>\n<p>Those paths are all relative to the spec.js file which should sit in the root of a project.  </p>\n<p>Here is a slightly more complicated site spec, it makes use of components and global selectors. Components are defined in the spec and only applied to the page (not the layout). The selectors are applied to the whole page after it has been appended to the layout which means you can modify things like the page title:  </p>\n<p>https://gist.github.com/simonmcmanus/afd3f2a0355f17b0f1efa7f739b9e41a  </p>\n<p>In this example it also uses the ‘contact’ component which needs to contain an li element and&nbsp;should be located&nbsp;at:  </p>\n<p>./components/contact/contact.html  </p>\n<p>You can see the full LNUG site spec here:  </p>\n<p><a href=\"https://github.com/lnug/website/blob/master/spec.js\">https://github.com/lnug/website/blob/master/spec.js</a>  </p>\n<h2 id=\"applicationshelllayouts\">Application Shell - layouts</h2>\n<p><a href=\"https://github.com/simonmcmanus/speclate\">Speclate</a> requires a pages/layout.html file which contains the outer layout for a site. The layout usually contains the nav, header and footer. For the LNUG site the markup in the layout.html file produces this:  </p>\n<p><img src=\"https://simonmcmanus.files.wordpress.com/2016/10/screen-shot-2016-10-08-at-07-30-42.png\" alt=\"screen-shot-2016-10-08-at-07-30-42\" />  </p>\n<p>layout.html contains an element with id of container which the page content is inserted into.&nbsp;The first time you visit a site you’re served the layout as part of the complete page generated at build time. As you browse to routes defined in the spec, <a href=\"https://www.npmjs.com/package/speclate-router\">speclate-router</a> reuses the layout and just updates the contents of the #container element with the new page and its components. By reusing the page layout we only render the parts of the page that change. This isn’t done with any clever virtual DOM diffing, we just know which parts of the page are going to change from the spec, and only change those parts. By not re-rending elements that don’t change it’s much easier to make smooth transitions between pages.  </p>\n<p><a href=\"https://developer.mozilla.org/en/docs/Web/API/Service_Worker_API\">Service workers</a> allow us to cache the layout.html file for all the routes defined in the spec. When a user hits a route it loads layout.html from the cache. The Javascript in layout.html triggers speclate-router to try and fetch the latest spec for the page and render it. This provides an application shell which can show the main nav to a returning visitor in under 300ms. It works well but I wonder if we could be even more efficient by only creating one cache entry for /pages/layout.html and referencing that when we intercept the fetch requests.  </p>\n<h2 id=\"partialupdates\">Partial updates</h2>\n<p>When making a change to the LNUG site using appCache, Speclate modifies a version hash in the appcache.manifest file. AppCache nanny detects the change and updates everything in the browser cache. The LNUG layout, pages, components and CSS files rarely change but the site gets updated several times each month with new information about speakers and their talks. That’s probably more often than most users visit the site.  </p>\n<p>Busting the whole cache each time we make a minor change is in not making efficient use of our&nbsp;user’s cache.  </p>\n<h2 id=\"longlivetheserviceworker\">Long live the Service Worker</h2>\n<p>Service workers can intercept fetch requests which allows us to be far more efficient with the user’s cache. With Speclate 7.0 when you generate a site it creates a .json file in docs/speclate/api for each page defined in the spec. Each file contains just the information needed to render the page. For the current LNUG homepage the spec <a href=\"https://github.com/lnug/website/blob/master/docs/api/speclate/index.json\">looks like this</a>.  </p>\n<p><a href=\"https://www.npmjs.com/package/speclate-service-worker\">speclate-service-worker</a> uses a network first strategy for requests to the speclate/api folder. Every time a user loads a page it tries to get the latest JSON page spec from the server. If the user is offline, it falls back to the cache. All other requests are served straight from the cache. By only loading a small spec file from the server we are able to present a fully rendered site with the latest data from the server over a throttled 2g connection in just over a second. By not busting the whole cache for regular updates we can keep the service worker until we want to make changes to the page, component and CSS files. This ensures we always serve the latest info while at the same time dramatically reducing the amount of data a returning visitor has to download. Speciate-Router and speclate-service-worker are both focused around loading the whole site into the service worker and rendering it from there (after first page load of course). This only works with very small sites but with some tweaks they could both handle partial loading.  </p>\n<h2 id=\"support\">Support</h2>\n<p>We don’t want to drop appCache, the LNUG analytics show there are users who don’t have service workers available. Here is the code we use to check if services workers are available, falling back to appCacheNanny when they’re not:  </p>\n<p>https://gist.github.com/simonmcmanus/c85cfe81eb45dd9aed52321d463469a4  </p>\n<p>Note how the appCache nanny on ‘updateready’ sits outside of the else statement, this ensures returning visitors with appCache and services workers available are upgraded to use service workers.  </p>\n<p>Returning visitors are shown the layout while the server&nbsp;is checked for updates. This can result in the footer being visible and then disappearing to the bottom of the page when the content is loaded. That should be resolved with the addition of some nice CSS transition. (<a href=\"https://github.com/lnug/website/issues/132\">we have an open issue btw</a>)  </p>\n<p>This implementation has an interesting side effect. If a user turns Javascript off after loading the site with Javascript and service workers enabled they will only see the layout. The page content will never load. All the Javascript resources are being loaded from the cache so the Javascript will never fail due to network conditions and we have static HTML files to revert to if the Javascript fails to load for some other reason.  </p>\n<p>Speclate ensures everything is defined and maintained once in the spec file which helps bring down the cost of these layered enhancements. We start off with completely static HTML files. If the browser supports <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API#The_pushState()_method\">history.pushstate</a> client-side routing is provided. If the browser supports service workers returning visitors get a really fast experience on and offline. If they don’t, well, it’ll still work offline with appCache support.  </p>\n<p>If you would like to try Speclate I‘ve updated the example app to use service workers:  </p>\n<p><a href=\"https://github.com/simonmcmanus/speclate-example\">https://github.com/simonmcmanus/speclate-example</a>  </p>\n<p>Please let me know if you have any comments, feedback or questions. Im also very grateful to all those who have blogging about service workers, notably, <a href=\"https://jakearchibald.com/\">Jake Archibald</a>, <a href=\"https://adactio.com/journal/9775\">Jeremy Keith</a> and <a href=\"https://www.smashingmagazine.com/2016/02/making-a-service-worker/\">Lyza Danger Gardner</a>. Getting the LNUG site working with service workers was much easier thanks to your articles and sample code. :)</p>",
        "tags": [
            "lnug",
            "offline",
            "speclate",
            "service-workers"
        ]
    },
    {
        "titleSlug": "include-a-branch-from-a-private-git-repo-into-npm-package-json",
        "title": "Include a branch from a private Git repo into NPM package.json",
        "date": "2017-09-25",
        "markup": "<pre><code class=\"js language-js\"> \"@npm-namespace/package-name\": \"git+https://private.github.com/team/repo.git#branch\",\n</code></pre>\n<p>Posting here because I can never remember the syntax. :)</p>",
        "tags": [
            "git",
            "branch",
            "npm",
            "package",
            "development"
        ]
    },
    {
        "titleSlug": "blog-migration",
        "title": "Blog Migration",
        "date": "2019-07-04",
        "markup": "<p>I'm in the process of moving this blog from <a href=\"https://wordpress.com/\">Wordpress.com</a> over to <a href=\"https://simonmcmanus.com\">simonmcmanus.com</a> hosted on <a href=\"https://netlify.com\">netlify.com</a>. </p>\n<p>Its a work in progress, I've disabled all tagging functionality while I port the content over. Please bare with me if you expereince any problems. </p>\n<p>Thanks </p>",
        "tags": [
            "blog",
            "simonmcmanus",
            "netlify",
            "wordpress",
            "WIP",
            "static-site"
        ]
    },
    {
        "titleSlug": "speclate@19",
        "title": "Speclate@19",
        "date": "2019-08-27",
        "markup": "<p>I've made some big changes to speclate and sizlate recently. The API stays the same, but under the hood things are much leaner.</p>\n<h3 id=\"nomoresizzle\">No more sizzle</h3>\n<p>Previously sizlate required <a href=\"https://sizzlejs.com/\">sizzle</a> to operate in the browser, this meant using jQuery or something similar. With support for <code>querySelectorAll()</code> being <a href=\"https://caniuse.com/#feat=queryselector\">so good</a> we can now do all our dom selection/manipulation with just speclate. At build time speclate still uses <a href=\"https://cheerio.js.org/\">cheerio</a> to provide the dom functions it needs to render the pages and components.</p>\n<h3 id=\"nomorepagejs\">No more Page.js</h3>\n<p>Page.js helped me get speclate-router up and running quickly, at that time, just running speclate in the client seemed a long way off. </p>\n<h3 id=\"speclaterouterwillbedeprecated\">Speclate-router will be  deprecated</h3>\n<p>Version 9 will be the last standalone version of <code>speclate-router</code>. From @19, Speclate includes a dramatically similified router, which can be included like so: </p>\n<pre><code>var router = require('speclate/router')\n</code></pre>\n<p>The router will behave exactly as it did before. Just with a lot less code. When the router is loaded it looks for any links on the page that match the routes specified in the spec. When it finds one, it binds to the link click so speclate  can handle swapping out the pages with the appropriate transitions. </p>\n<h3 id=\"smarterserviceworkers\">Smarter Service workers</h3>\n<p>Previously the spec was broken up to the relevant pieces at build time, but the generated service worker javascript file would still pull in a full copy of the spec, effectively meaning that each user would download the spec twice. </p>\n<p>This has now changed so that <code>speciate-cli</code> generates a minimal version of the spec, effectively just containing a list of the pages and components that are used by that page, so that they can be made available offline. </p>\n<p>The changes described above are introduced in versions: </p>\n<ul>\n<li>speclate@19.x.x</li>\n<li>speclate-service-worker@3.x.x</li>\n</ul>",
        "tags": [
            "speclate",
            "sizlate",
            "sizzle",
            "pagejs",
            "routing",
            "router",
            "offline"
        ]
    },
    {
        "titleSlug": "local-development-on-npm-packages",
        "title": "Local development on npm packages",
        "date": "2019-09-10",
        "markup": "<p>When you run the <code>npm install</code> command, npm looks at the package.json file in the root of the current project and fetches the appropriate published version of each package from the public NPM registry.</p>\n<p>When we develop locally we want to ensure we can see the changes In our application as quickly as possible, and don’t want to have to <code>npm publish</code> and then <code>npm install</code> for each change.</p>\n<p>We can do this using npm link. In order to do this we need to have both projects checked out on our local machine.</p>\n<p>First of all we need to tell the dependancies that we are going to link it. So we go into the package we want to work on (after a git clone) and type <code>npm link</code></p>\n<pre><code>cd shared\n\nnpm link\n\ncd ../\n</code></pre>\n<p>This will tell NPM that we will be linking the package into another package shortly.</p>\n<p>Then we need to goto the directory that will be consuming the package and type:</p>\n<pre><code>npm link [PACKAGE-NAME]\n</code></pre>\n<p>[PACKAGE-NAME] should be replaced with the name of the package you wish to link into the current project.</p>\n<p>Now the package should behave as if it has been installed via an <code>npm i</code>.</p>\n<p>There are a number of tools which can easily tell you which packages you have linked for a given project, and example is:</p>\n<p>https://www.npmjs.com/package/npm-link-check</p>\n<p>For more info, please see the docs: </p>\n<p>https://docs.npmjs.com/cli/link</p>",
        "tags": [
            "npm",
            "node",
            "link",
            "linking",
            "development",
            "local"
        ]
    },
    {
        "titleSlug": "wicked-elements",
        "title": "Wicked Elements",
        "date": "2019-12-03",
        "markup": "<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements\">Custom Elements</a> give us the ability to create custom html tags that you can use in your markup like so:  </p>\n<pre><code class=\"html language-html\">&lt;word-count&gt; \n</code></pre>\n<pre><code class=\"js language-js\">customElements.define('word-count', WordCount, { extends: 'p' });\n</code></pre>\n<p>But to use the above tag on a page the browser still needs to run some Javascript before it can render the custom element. The browser also needs to <a href=\"https://caniuse.com/#feat=custom-elementsv1\">support custom elements</a> to render anything at all.</p>\n<p>So the Progressive Enhancement story isn't great, and its for this reason I've often avoided custom elements.</p>\n<p>With <a href=\"https://github.com/WebReflection/wicked-elements\">Wicked Elements</a> you can bind the component behaviour using css selectors. As we are not using the tag name to select which elements on the page to apply the behaviour to, we can send standard html tags in the initial request and the client side javascript just enhances them with interactivity afterwards.</p>\n<p>So our component gets sent to the browser like so: </p>\n<pre><code class=\"html language-html\">&lt;p is=\"word-count\"&gt;12&lt;/p&gt; \n</code></pre>\n<p>In this case using the <code>is</code> attribute selector seems to work really nicely: </p>\n<pre><code class=\"js language-js\">wickedElements.define('[is=word-count]', ...)\n</code></pre>\n<p>This means we can send markup that works for the lowest possible tech (a <code>&lt;p&gt;</code> tag). There is no hydration or anything other re-rendering when the browser js kicks in.  The browser javascript just makes the existing elements interactive. Kinda how progressive enhancement is meant to work.</p>\n<p>Wicked elements isn't the same as custom elements, but does provide a similar API (except for how you select the elements). The thing I like about Wicked elements is that it doesn't make assuptions about how the markup is rendered, it just enhances the markup that has already been rendered. </p>\n<p>I think its actually <a href=\"https://github.com/WebReflection/regular-elements\">regular elements</a> that adds the ability to bind behaviour with a css selector. Wicked elements combines a couple of extra modules to make things a bit easier.</p>\n<p>I've been playing with it alongside <a href=\"https://www.npmjs.com/package/speclate\">Speclate</a> which also uses CSS selectors so there are some very nice parallels, but that's a whole post in its own right. :)  </p>",
        "tags": [
            "customElements",
            "js",
            "framework"
        ]
    }
]